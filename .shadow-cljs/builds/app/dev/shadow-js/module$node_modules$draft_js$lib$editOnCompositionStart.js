["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/editOnCompositionStart.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$editOnCompositionStart=function(global,process,require,module,exports,shadow$shims){var EditorState=require(\"module$node_modules$draft_js$lib$EditorState\");module.exports=function(editor,e){editor.setMode(\"composite\");editor.update(EditorState.set(editor._latestEditorState,{inCompositionMode:!0}));editor._onCompositionStart(e)}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$editOnCompositionStart\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule editOnCompositionStart\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\n\n/**\n * The user has begun using an IME input system. Switching to `composite` mode\n * allows handling composition input and disables other edit behavior.\n */\nfunction editOnCompositionStart(editor, e) {\n  editor.setMode('composite');\n  editor.update(EditorState.set(editor._latestEditorState, { inCompositionMode: true }));\n  // Allow composition handler to interpret the compositionstart event\n  editor._onCompositionStart(e);\n}\n\nmodule.exports = editOnCompositionStart;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$draft_js$lib$EditorState"]],"~:properties",["^5",["inCompositionMode"]],"~:compiled-at",1532351402144,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$editOnCompositionStart.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,wDAAA,CAA4E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBzI,IAAIC,YAAcJ,OAAA,CAAQ,8CAAR,CAalBC,OAAAC,QAAA,CAPAG,QAA+B,CAACC,MAAD,CAASC,CAAT,CAAY,CACzCD,MAAAE,QAAA,CAAe,WAAf,CACAF,OAAAG,OAAA,CAAcL,WAAAM,IAAA,CAAgBJ,MAAAK,mBAAhB,CAA2C,CAAEC,kBAAmB,CAAA,CAArB,CAA3C,CAAd,CAEAN,OAAAO,oBAAA,CAA2BN,CAA3B,CAJyC,CAtB8F;\",\n\"sources\":[\"node_modules/draft-js/lib/editOnCompositionStart.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$editOnCompositionStart\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule editOnCompositionStart\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar EditorState = require('./EditorState');\\n\\n/**\\n * The user has begun using an IME input system. Switching to `composite` mode\\n * allows handling composition input and disables other edit behavior.\\n */\\nfunction editOnCompositionStart(editor, e) {\\n  editor.setMode('composite');\\n  editor.update(EditorState.set(editor._latestEditorState, { inCompositionMode: true }));\\n  // Allow composition handler to interpret the compositionstart event\\n  editor._onCompositionStart(e);\\n}\\n\\nmodule.exports = editOnCompositionStart;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"EditorState\",\"editOnCompositionStart\",\"editor\",\"e\",\"setMode\",\"update\",\"set\",\"_latestEditorState\",\"inCompositionMode\",\"_onCompositionStart\"]\n}\n"]