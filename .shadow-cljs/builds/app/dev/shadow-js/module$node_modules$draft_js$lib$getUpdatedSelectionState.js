["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/getUpdatedSelectionState.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$getUpdatedSelectionState=function(global,process,require,module,exports,shadow$shims){var DraftOffsetKey=require(\"module$node_modules$draft_js$lib$DraftOffsetKey\"),nullthrows=require(\"module$node_modules$fbjs$lib$nullthrows\");module.exports=function(editorState,anchorKey,anchorOffset,focusKey,focusOffset){var selection=nullthrows(editorState.getSelection());if(!anchorKey||!focusKey)return console.warn(\"Invalid selection state.\",arguments,editorState.toJS()),\nselection;var anchorPath=DraftOffsetKey.decode(anchorKey),anchorBlockKey=anchorPath.blockKey,anchorLeaf=editorState.getBlockTree(anchorBlockKey).getIn([anchorPath.decoratorKey,\"leaves\",anchorPath.leafKey]);anchorPath=DraftOffsetKey.decode(focusKey);var focusBlockKey=anchorPath.blockKey,focusLeaf=editorState.getBlockTree(focusBlockKey).getIn([anchorPath.decoratorKey,\"leaves\",anchorPath.leafKey]);anchorPath=anchorLeaf.get(\"start\");var focusLeafStart=focusLeaf.get(\"start\"),anchorBlockOffset=anchorLeaf?\nanchorPath+anchorOffset:null,focusBlockOffset=focusLeaf?focusLeafStart+focusOffset:null;if(selection.getAnchorKey()===anchorBlockKey&&selection.getAnchorOffset()===anchorBlockOffset&&selection.getFocusKey()===focusBlockKey&&selection.getFocusOffset()===focusBlockOffset)return selection;var isBackward=!1;anchorBlockKey===focusBlockKey?(anchorLeaf=anchorLeaf.get(\"end\"),focusLeaf=focusLeaf.get(\"end\"),isBackward=focusLeafStart===anchorPath&&focusLeaf===anchorLeaf?focusOffset<anchorOffset:focusLeafStart<\nanchorPath):isBackward=editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function(v){return v===anchorBlockKey||v===focusBlockKey}).first()===focusBlockKey;return selection.merge({anchorKey:anchorBlockKey,anchorOffset:anchorBlockOffset,focusKey:focusBlockKey,focusOffset:focusBlockOffset,isBackward:isBackward})}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$getUpdatedSelectionState\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getUpdatedSelectionState\n * @format\n * \n */\n\n'use strict';\n\nvar DraftOffsetKey = require('./DraftOffsetKey');\n\nvar nullthrows = require('fbjs/lib/nullthrows');\n\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\n  var selection = nullthrows(editorState.getSelection());\n  if (process.env.NODE_ENV !== 'production') {\n    if (!anchorKey || !focusKey) {\n      /*eslint-disable no-console */\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\n      /*eslint-enable no-console */\n      return selection;\n    }\n  }\n\n  var anchorPath = DraftOffsetKey.decode(anchorKey);\n  var anchorBlockKey = anchorPath.blockKey;\n  var anchorLeaf = editorState.getBlockTree(anchorBlockKey).getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\n\n  var focusPath = DraftOffsetKey.decode(focusKey);\n  var focusBlockKey = focusPath.blockKey;\n  var focusLeaf = editorState.getBlockTree(focusBlockKey).getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\n\n  var anchorLeafStart = anchorLeaf.get('start');\n  var focusLeafStart = focusLeaf.get('start');\n\n  var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\n  var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\n\n  var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\n\n  if (areEqual) {\n    return selection;\n  }\n\n  var isBackward = false;\n  if (anchorBlockKey === focusBlockKey) {\n    var anchorLeafEnd = anchorLeaf.get('end');\n    var focusLeafEnd = focusLeaf.get('end');\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\n      isBackward = focusOffset < anchorOffset;\n    } else {\n      isBackward = focusLeafStart < anchorLeafStart;\n    }\n  } else {\n    var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function (v) {\n      return v === anchorBlockKey || v === focusBlockKey;\n    }).first();\n    isBackward = startKey === focusBlockKey;\n  }\n\n  return selection.merge({\n    anchorKey: anchorBlockKey,\n    anchorOffset: anchorBlockOffset,\n    focusKey: focusBlockKey,\n    focusOffset: focusBlockOffset,\n    isBackward: isBackward\n  });\n}\n\nmodule.exports = getUpdatedSelectionState;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$fbjs$lib$nullthrows","~$shadow.js","~$module$node_modules$draft_js$lib$DraftOffsetKey"]],"~:properties",["^5",["anchorOffset","isBackward","anchorKey","focusKey","focusOffset"]],"~:compiled-at",1532351402143,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$getUpdatedSelectionState.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB3I,IAAIC,eAAiBJ,OAAA,CAAQ,iDAAR,CAArB,CAEIK,WAAaL,OAAA,CAAQ,yCAAR,CA0DjBC,OAAAC,QAAA,CAxDAI,QAAiC,CAACC,WAAD,CAAcC,SAAd,CAAyBC,YAAzB,CAAuCC,QAAvC,CAAiDC,WAAjD,CAA8D,CAC7F,IAAIC,UAAYP,UAAA,CAAWE,WAAAM,aAAA,EAAX,CAEd,IAAI,CAACL,SAAL,EAAkB,CAACE,QAAnB,CAIE,MAFAI,QAAAC,KAAA,CAAa,0BAAb,CAAyCC,SAAzC,CAAoDT,WAAAU,KAAA,EAApD,CAEOL;AAAAA,SAIX,KAAIM,WAAad,cAAAe,OAAA,CAAsBX,SAAtB,CAAjB,CACIY,eAAiBF,UAAAG,SADrB,CAEIC,WAAaf,WAAAgB,aAAA,CAAyBH,cAAzB,CAAAI,MAAA,CAA+C,CAACN,UAAAO,aAAD,CAA0B,QAA1B,CAAoCP,UAAAQ,QAApC,CAA/C,CAEbC,WAAAA,CAAYvB,cAAAe,OAAA,CAAsBT,QAAtB,CAChB,KAAIkB,cAAgBD,UAAAN,SAApB,CACIQ,UAAYtB,WAAAgB,aAAA,CAAyBK,aAAzB,CAAAJ,MAAA,CAA8C,CAACG,UAAAF,aAAD,CAAyB,QAAzB,CAAmCE,UAAAD,QAAnC,CAA9C,CAEZI,WAAAA,CAAkBR,UAAAS,IAAA,CAAe,OAAf,CACtB,KAAIC,eAAiBH,SAAAE,IAAA,CAAc,OAAd,CAArB,CAEIE,kBAAoBX,UAAA;AAAaQ,UAAb,CAA+BrB,YAA/B,CAA8C,IAFtE,CAGIyB,iBAAmBL,SAAA,CAAYG,cAAZ,CAA6BrB,WAA7B,CAA2C,IAIlE,IAFeC,SAAAuB,aAAA,EAEf,GAF4Cf,cAE5C,EAF8DR,SAAAwB,gBAAA,EAE9D,GAF8FH,iBAE9F,EAFmHrB,SAAAyB,YAAA,EAEnH,GAF+IT,aAE/I,EAFgKhB,SAAA0B,eAAA,EAEhK,GAF+LJ,gBAE/L,CACE,MAAOtB,UAGT,KAAI2B,WAAa,CAAA,CACbnB,eAAJ,GAAuBQ,aAAvB,EACMY,UAGF,CAHkBlB,UAAAS,IAAA,CAAe,KAAf,CAGlB,CAFEU,SAEF,CAFiBZ,SAAAE,IAAA,CAAc,KAAd,CAEjB,CAAAQ,UAAA,CADEP,cAAJ,GAAuBF,UAAvB,EAA0CW,SAA1C,GAA2DD,UAA3D,CACe7B,WADf,CAC6BF,YAD7B,CAGeuB,cAHf;AAGgCF,UANlC,EAYES,UAZF,CASiBhC,WAAAmC,kBAAA,EAAAC,YAAA,EAAAC,OAAA,EAAAC,UAAA,CAAiE,QAAS,CAACC,CAAD,CAAI,CAC3F,MAAOA,EAAP,GAAa1B,cAAb,EAA+B0B,CAA/B,GAAqClB,aADsD,CAA9E,CAAAmB,MAAAC,EATjB,GAY4BpB,aAG5B,OAAOhB,UAAAqC,MAAA,CAAgB,CACrBzC,UAAWY,cADU,CAErBX,aAAcwB,iBAFO,CAGrBvB,SAAUkB,aAHW,CAIrBjB,YAAauB,gBAJQ,CAKrBK,WAAYA,UALS,CAAhB,CA/CsF,CApB4C;\",\n\"sources\":[\"node_modules/draft-js/lib/getUpdatedSelectionState.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$getUpdatedSelectionState\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getUpdatedSelectionState\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar DraftOffsetKey = require('./DraftOffsetKey');\\n\\nvar nullthrows = require('fbjs/lib/nullthrows');\\n\\nfunction getUpdatedSelectionState(editorState, anchorKey, anchorOffset, focusKey, focusOffset) {\\n  var selection = nullthrows(editorState.getSelection());\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (!anchorKey || !focusKey) {\\n      /*eslint-disable no-console */\\n      console.warn('Invalid selection state.', arguments, editorState.toJS());\\n      /*eslint-enable no-console */\\n      return selection;\\n    }\\n  }\\n\\n  var anchorPath = DraftOffsetKey.decode(anchorKey);\\n  var anchorBlockKey = anchorPath.blockKey;\\n  var anchorLeaf = editorState.getBlockTree(anchorBlockKey).getIn([anchorPath.decoratorKey, 'leaves', anchorPath.leafKey]);\\n\\n  var focusPath = DraftOffsetKey.decode(focusKey);\\n  var focusBlockKey = focusPath.blockKey;\\n  var focusLeaf = editorState.getBlockTree(focusBlockKey).getIn([focusPath.decoratorKey, 'leaves', focusPath.leafKey]);\\n\\n  var anchorLeafStart = anchorLeaf.get('start');\\n  var focusLeafStart = focusLeaf.get('start');\\n\\n  var anchorBlockOffset = anchorLeaf ? anchorLeafStart + anchorOffset : null;\\n  var focusBlockOffset = focusLeaf ? focusLeafStart + focusOffset : null;\\n\\n  var areEqual = selection.getAnchorKey() === anchorBlockKey && selection.getAnchorOffset() === anchorBlockOffset && selection.getFocusKey() === focusBlockKey && selection.getFocusOffset() === focusBlockOffset;\\n\\n  if (areEqual) {\\n    return selection;\\n  }\\n\\n  var isBackward = false;\\n  if (anchorBlockKey === focusBlockKey) {\\n    var anchorLeafEnd = anchorLeaf.get('end');\\n    var focusLeafEnd = focusLeaf.get('end');\\n    if (focusLeafStart === anchorLeafStart && focusLeafEnd === anchorLeafEnd) {\\n      isBackward = focusOffset < anchorOffset;\\n    } else {\\n      isBackward = focusLeafStart < anchorLeafStart;\\n    }\\n  } else {\\n    var startKey = editorState.getCurrentContent().getBlockMap().keySeq().skipUntil(function (v) {\\n      return v === anchorBlockKey || v === focusBlockKey;\\n    }).first();\\n    isBackward = startKey === focusBlockKey;\\n  }\\n\\n  return selection.merge({\\n    anchorKey: anchorBlockKey,\\n    anchorOffset: anchorBlockOffset,\\n    focusKey: focusBlockKey,\\n    focusOffset: focusBlockOffset,\\n    isBackward: isBackward\\n  });\\n}\\n\\nmodule.exports = getUpdatedSelectionState;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"DraftOffsetKey\",\"nullthrows\",\"getUpdatedSelectionState\",\"editorState\",\"anchorKey\",\"anchorOffset\",\"focusKey\",\"focusOffset\",\"selection\",\"getSelection\",\"console\",\"warn\",\"arguments\",\"toJS\",\"anchorPath\",\"decode\",\"anchorBlockKey\",\"blockKey\",\"anchorLeaf\",\"getBlockTree\",\"getIn\",\"decoratorKey\",\"leafKey\",\"focusPath\",\"focusBlockKey\",\"focusLeaf\",\"anchorLeafStart\",\"get\",\"focusLeafStart\",\"anchorBlockOffset\",\"focusBlockOffset\",\"getAnchorKey\",\"getAnchorOffset\",\"getFocusKey\",\"getFocusOffset\",\"isBackward\",\"anchorLeafEnd\",\"focusLeafEnd\",\"getCurrentContent\",\"getBlockMap\",\"keySeq\",\"skipUntil\",\"v\",\"first\",\"startKey\",\"merge\"]\n}\n"]