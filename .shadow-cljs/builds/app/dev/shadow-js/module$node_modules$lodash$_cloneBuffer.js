["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_cloneBuffer.js"],"~:js","shadow$provide.module$node_modules$lodash$_cloneBuffer=function(global,process,require,module,exports,shadow$shims){global=require(\"module$node_modules$lodash$_root\");var allocUnsafe=(exports=(process=(exports=\"object\"==typeof exports&&exports&&!exports.nodeType&&exports)&&\"object\"==typeof module&&module&&!module.nodeType&&module)&&process.exports===exports?global.Buffer:void 0)?exports.allocUnsafe:void 0;module.exports=function(buffer,isDeep){if(isDeep)return buffer.slice();isDeep=buffer.length;\nisDeep=allocUnsafe?allocUnsafe(isDeep):new buffer.constructor(isDeep);buffer.copy(isDeep);return isDeep}}","~:source","shadow$provide[\"module$node_modules$lodash$_cloneBuffer\"] = function(global,process,require,module,exports,shadow$shims) {\nvar root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_root"]],"~:properties",["^5",[]],"~:compiled-at",1532351402069,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_cloneBuffer.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACrHC,MAAAA,CAAOJ,OAAA,CAAQ,kCAAR,CAYX,KACIK,YAAc,CADdC,OACc,CADL,CANTC,OAMS,EATTC,OASS,CATuB,QASvB,EATK,MAAON,QASZ,EATmCA,OASnC,EAT8C,CAACA,OAAAO,SAS/C,EATmEP,OASnE,GANoC,QAMpC,EANmB,MAAOD,OAM1B,EANgDA,MAMhD,EAN0D,CAACA,MAAAQ,SAM3D,EAN8ER,MAM9E,GAHqBM,OAAAL,QAGrB,GAH4CM,OAG5C,CAAgBJ,MAAAE,OAAhB,CAA8BI,IAAAA,EACzB,EAASJ,OAAAD,YAAT,CAA8BK,IAAAA,EAqBhDT,OAAAC,QAAA,CAXAS,QAAoB,CAACC,MAAD,CAASC,MAAT,CAAiB,CACnC,GAAIA,MAAJ,CACE,MAAOD,OAAAE,MAAA,EAELC,OAAAA,CAASH,MAAAG,OACTC;MAAAA,CAASX,WAAA,CAAcA,WAAA,CAAYU,MAAZ,CAAd,CAAoC,IAAIH,MAAAK,YAAJ,CAAuBF,MAAvB,CAEjDH,OAAAM,KAAA,CAAYF,MAAZ,CACA,OAAOA,OAR4B,CAxBoF;\",\n\"sources\":[\"node_modules/lodash/_cloneBuffer.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_cloneBuffer\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar root = require('./_root');\\n\\n/** Detect free variable `exports`. */\\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\\n\\n/** Detect free variable `module`. */\\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\\n\\n/** Detect the popular CommonJS extension `module.exports`. */\\nvar moduleExports = freeModule && freeModule.exports === freeExports;\\n\\n/** Built-in value references. */\\nvar Buffer = moduleExports ? root.Buffer : undefined,\\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\\n\\n/**\\n * Creates a clone of  `buffer`.\\n *\\n * @private\\n * @param {Buffer} buffer The buffer to clone.\\n * @param {boolean} [isDeep] Specify a deep clone.\\n * @returns {Buffer} Returns the cloned buffer.\\n */\\nfunction cloneBuffer(buffer, isDeep) {\\n  if (isDeep) {\\n    return buffer.slice();\\n  }\\n  var length = buffer.length,\\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\\n\\n  buffer.copy(result);\\n  return result;\\n}\\n\\nmodule.exports = cloneBuffer;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"root\",\"allocUnsafe\",\"Buffer\",\"freeModule\",\"freeExports\",\"nodeType\",\"undefined\",\"cloneBuffer\",\"buffer\",\"isDeep\",\"slice\",\"length\",\"result\",\"constructor\",\"copy\"]\n}\n"]