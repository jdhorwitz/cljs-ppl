["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/decodeInlineStyleRanges.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$decodeInlineStyleRanges=function(global,process,require,module,exports,shadow$shims){global=require(\"module$node_modules$immutable$dist$immutable\").OrderedSet;var substr=require(\"module$node_modules$fbjs$lib$UnicodeUtils\").substr,EMPTY_SET=global();module.exports=function(text,ranges){var styles=Array(text.length).fill(EMPTY_SET);ranges&&ranges.forEach(function(range){for(var cursor=substr(text,0,range.offset).length,end=cursor+substr(text,range.offset,\nrange.length).length;cursor<end;)styles[cursor]=styles[cursor].add(range.style),cursor++});return styles}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$decodeInlineStyleRanges\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule decodeInlineStyleRanges\n * @format\n * \n */\n\n'use strict';\n\nvar _require = require('immutable'),\n    OrderedSet = _require.OrderedSet;\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar substr = UnicodeUtils.substr;\n\n\nvar EMPTY_SET = OrderedSet();\n\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\nfunction decodeInlineStyleRanges(text, ranges) {\n  var styles = Array(text.length).fill(EMPTY_SET);\n  if (ranges) {\n    ranges.forEach(function ( /*object*/range) {\n      var cursor = substr(text, 0, range.offset).length;\n      var end = cursor + substr(text, range.offset, range.length).length;\n      while (cursor < end) {\n        styles[cursor] = styles[cursor].add(range.style);\n        cursor++;\n      }\n    });\n  }\n  return styles;\n}\n\nmodule.exports = decodeInlineStyleRanges;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$UnicodeUtils","~$module$node_modules$immutable$dist$immutable"]],"~:properties",["^5",[]],"~:compiled-at",1532351402154,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$decodeInlineStyleRanges.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAiBtIC,MAAAA,CADWJ,OAAAK,CAAQ,8CAARA,CACED,WAIjB,KAAIE,OAFeN,OAAAO,CAAQ,2CAARA,CAEND,OAAb,CAGIE,UAAYJ,MAAA,EAoBhBH,OAAAC,QAAA,CAfAO,QAAgC,CAACC,IAAD,CAAOC,MAAP,CAAe,CAC7C,IAAIC,OAASC,KAAA,CAAMH,IAAAI,OAAN,CAAAC,KAAA,CAAwBP,SAAxB,CACTG,OAAJ,EACEA,MAAAK,QAAA,CAAe,QAAS,CAAYC,KAAZ,CAAmB,CAGzC,IAFA,IAAIC,OAASZ,MAAA,CAAOI,IAAP,CAAa,CAAb,CAAgBO,KAAAE,OAAhB,CAAAL,OAAb,CACIM,IAAMF,MAANE,CAAed,MAAA,CAAOI,IAAP,CAAaO,KAAAE,OAAb;AAA2BF,KAAAH,OAA3B,CAAAA,OACnB,CAAOI,MAAP,CAAgBE,GAAhB,CAAA,CACER,MAAA,CAAOM,MAAP,CACA,CADiBN,MAAA,CAAOM,MAAP,CAAAG,IAAA,CAAmBJ,KAAAK,MAAnB,CACjB,CAAAJ,MAAA,EALuC,CAA3C,CASF,OAAON,OAZsC,CA7B2F;\",\n\"sources\":[\"node_modules/draft-js/lib/decodeInlineStyleRanges.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$decodeInlineStyleRanges\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule decodeInlineStyleRanges\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar _require = require('immutable'),\\n    OrderedSet = _require.OrderedSet;\\n\\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\\n\\nvar substr = UnicodeUtils.substr;\\n\\n\\nvar EMPTY_SET = OrderedSet();\\n\\n/**\\n * Convert to native JavaScript string lengths to determine ranges.\\n */\\nfunction decodeInlineStyleRanges(text, ranges) {\\n  var styles = Array(text.length).fill(EMPTY_SET);\\n  if (ranges) {\\n    ranges.forEach(function ( /*object*/range) {\\n      var cursor = substr(text, 0, range.offset).length;\\n      var end = cursor + substr(text, range.offset, range.length).length;\\n      while (cursor < end) {\\n        styles[cursor] = styles[cursor].add(range.style);\\n        cursor++;\\n      }\\n    });\\n  }\\n  return styles;\\n}\\n\\nmodule.exports = decodeInlineStyleRanges;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"OrderedSet\",\"_require\",\"substr\",\"UnicodeUtils\",\"EMPTY_SET\",\"decodeInlineStyleRanges\",\"text\",\"ranges\",\"styles\",\"Array\",\"length\",\"fill\",\"forEach\",\"range\",\"cursor\",\"offset\",\"end\",\"add\",\"style\"]\n}\n"]