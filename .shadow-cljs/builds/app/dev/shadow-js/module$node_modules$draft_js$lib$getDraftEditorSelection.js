["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/getDraftEditorSelection.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$getDraftEditorSelection=function(global,process,require,module,exports,shadow$shims){var getDraftEditorSelectionWithNodes=require(\"module$node_modules$draft_js$lib$getDraftEditorSelectionWithNodes\");module.exports=function(editorState,root){var selection=global.getSelection();return 0===selection.rangeCount?{selectionState:editorState.getSelection().set(\"hasFocus\",!1),needsRecovery:!1}:getDraftEditorSelectionWithNodes(editorState,root,selection.anchorNode,\nselection.anchorOffset,selection.focusNode,selection.focusOffset)}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$getDraftEditorSelection\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getDraftEditorSelection\n * @format\n * \n */\n\n'use strict';\n\nvar getDraftEditorSelectionWithNodes = require('./getDraftEditorSelectionWithNodes');\n\n/**\n * Convert the current selection range to an anchor/focus pair of offset keys\n * and values that can be interpreted by components.\n */\nfunction getDraftEditorSelection(editorState, root) {\n  var selection = global.getSelection();\n\n  // No active selection.\n  if (selection.rangeCount === 0) {\n    return {\n      selectionState: editorState.getSelection().set('hasFocus', false),\n      needsRecovery: false\n    };\n  }\n\n  return getDraftEditorSelectionWithNodes(editorState, root, selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\n}\n\nmodule.exports = getDraftEditorSelection;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$draft_js$lib$getDraftEditorSelectionWithNodes"]],"~:properties",["^5",["needsRecovery","selectionState"]],"~:compiled-at",1532351402151,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$getDraftEditorSelection.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB1I,IAAIC,iCAAmCJ,OAAA,CAAQ,mEAAR,CAoBvCC,OAAAC,QAAA,CAdAG,QAAgC,CAACC,WAAD,CAAcC,IAAd,CAAoB,CAClD,IAAIC,UAAYV,MAAAW,aAAA,EAGhB,OAA6B,EAA7B,GAAID,SAAAE,WAAJ,CACS,CACLC,eAAgBL,WAAAG,aAAA,EAAAG,IAAA,CAA+B,UAA/B,CAA2C,CAAA,CAA3C,CADX,CAELC,cAAe,CAAA,CAFV,CADT,CAOOT,gCAAA,CAAiCE,WAAjC,CAA8CC,IAA9C,CAAoDC,SAAAM,WAApD;AAA0EN,SAAAO,aAA1E,CAAkGP,SAAAQ,UAAlG,CAAuHR,SAAAS,YAAvH,CAX2C,CAtBsF;\",\n\"sources\":[\"node_modules/draft-js/lib/getDraftEditorSelection.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$getDraftEditorSelection\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getDraftEditorSelection\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar getDraftEditorSelectionWithNodes = require('./getDraftEditorSelectionWithNodes');\\n\\n/**\\n * Convert the current selection range to an anchor/focus pair of offset keys\\n * and values that can be interpreted by components.\\n */\\nfunction getDraftEditorSelection(editorState, root) {\\n  var selection = global.getSelection();\\n\\n  // No active selection.\\n  if (selection.rangeCount === 0) {\\n    return {\\n      selectionState: editorState.getSelection().set('hasFocus', false),\\n      needsRecovery: false\\n    };\\n  }\\n\\n  return getDraftEditorSelectionWithNodes(editorState, root, selection.anchorNode, selection.anchorOffset, selection.focusNode, selection.focusOffset);\\n}\\n\\nmodule.exports = getDraftEditorSelection;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"getDraftEditorSelectionWithNodes\",\"getDraftEditorSelection\",\"editorState\",\"root\",\"selection\",\"getSelection\",\"rangeCount\",\"selectionState\",\"set\",\"needsRecovery\",\"anchorNode\",\"anchorOffset\",\"focusNode\",\"focusOffset\"]\n}\n"]