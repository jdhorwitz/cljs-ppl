["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_getRawTag.js"],"~:js","shadow$provide.module$node_modules$lodash$_getRawTag=function(global,process,require,module,exports,shadow$shims){global=require(\"module$node_modules$lodash$_Symbol\");process=Object.prototype;var hasOwnProperty=process.hasOwnProperty,nativeObjectToString=process.toString,symToStringTag=global?global.toStringTag:void 0;module.exports=function(value){var isOwn=hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=void 0;var unmasked=!0}catch(e){}var result=nativeObjectToString.call(value);\nunmasked&&(isOwn?value[symToStringTag]=tag:delete value[symToStringTag]);return result}}","~:source","shadow$provide[\"module$node_modules$lodash$_getRawTag\"] = function(global,process,require,module,exports,shadow$shims) {\nvar Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_Symbol"]],"~:properties",["^5",[]],"~:compiled-at",1532351401897,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_getRawTag.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACnHC,MAAAA,CAASJ,OAAA,CAAQ,oCAAR,CAGTK,QAAAA,CAAcC,MAAAC,UAGlB,KAAIC,eAAiBH,OAAAG,eAArB,CAOIC,qBAAuBJ,OAAAK,SAP3B,CAUIC,eAAiBP,MAAA,CAASA,MAAAQ,YAAT,CAA8BC,IAAAA,EA6BnDZ,OAAAC,QAAA,CApBAY,QAAkB,CAACC,KAAD,CAAQ,CAAA,IACpBC,MAAQR,cAAAS,KAAA,CAAoBF,KAApB,CAA2BJ,cAA3B,CADY,CAEpBO,IAAMH,KAAA,CAAMJ,cAAN,CAEV,IAAI,CACFI,KAAA,CAAMJ,cAAN,CAAA,CAAwBE,IAAAA,EACxB,KAAIM,SAAW,CAAA,CAFb,CAGF,MAAOC,CAAP,CAAU,EAEZ,IAAIC,OAASZ,oBAAAQ,KAAA,CAA0BF,KAA1B,CACTI;QAAJ,GACMH,KAAJ,CACED,KAAA,CAAMJ,cAAN,CADF,CAC0BO,GAD1B,CAGE,OAAOH,KAAA,CAAMJ,cAAN,CAJX,CAOA,OAAOU,OAjBiB,CA1B6F;\",\n\"sources\":[\"node_modules/lodash/_getRawTag.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_getRawTag\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar Symbol = require('./_Symbol');\\n\\n/** Used for built-in method references. */\\nvar objectProto = Object.prototype;\\n\\n/** Used to check objects for own properties. */\\nvar hasOwnProperty = objectProto.hasOwnProperty;\\n\\n/**\\n * Used to resolve the\\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\\n * of values.\\n */\\nvar nativeObjectToString = objectProto.toString;\\n\\n/** Built-in value references. */\\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\\n\\n/**\\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the raw `toStringTag`.\\n */\\nfunction getRawTag(value) {\\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\\n      tag = value[symToStringTag];\\n\\n  try {\\n    value[symToStringTag] = undefined;\\n    var unmasked = true;\\n  } catch (e) {}\\n\\n  var result = nativeObjectToString.call(value);\\n  if (unmasked) {\\n    if (isOwn) {\\n      value[symToStringTag] = tag;\\n    } else {\\n      delete value[symToStringTag];\\n    }\\n  }\\n  return result;\\n}\\n\\nmodule.exports = getRawTag;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Symbol\",\"objectProto\",\"Object\",\"prototype\",\"hasOwnProperty\",\"nativeObjectToString\",\"toString\",\"symToStringTag\",\"toStringTag\",\"undefined\",\"getRawTag\",\"value\",\"isOwn\",\"call\",\"tag\",\"unmasked\",\"e\",\"result\"]\n}\n"]