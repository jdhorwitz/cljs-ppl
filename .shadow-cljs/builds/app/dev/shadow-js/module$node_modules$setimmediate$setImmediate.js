["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/setimmediate/setImmediate.js"],"~:js","shadow$provide.module$node_modules$setimmediate$setImmediate=function(global$jscomp$0,process,require,module,exports,shadow$shims){(function(global,undefined){function clearImmediate(handle){delete tasksByHandle[handle]}function runIfPresent(handle){if(currentlyRunningATask)setTimeout(runIfPresent,0,handle);else{var task=tasksByHandle[handle];if(task){currentlyRunningATask=!0;try{var callback=task.callback,args=task.args;switch(args.length){case 0:callback();break;case 1:callback(args[0]);break;case 2:callback(args[0],\nargs[1]);break;case 3:callback(args[0],args[1],args[2]);break;default:callback.apply(undefined,args)}}finally{clearImmediate(handle),currentlyRunningATask=!1}}}}function installNextTickImplementation(){registerImmediate=function(handle){process.nextTick(function(){runIfPresent(handle)})}}function canUsePostMessage(){if(global.postMessage&&!global.importScripts){var postMessageIsAsynchronous=!0,oldOnMessage=global.onmessage;global.onmessage=function(){postMessageIsAsynchronous=!1};global.postMessage(\"\",\n\"*\");global.onmessage=oldOnMessage;return postMessageIsAsynchronous}}function installPostMessageImplementation(){var messagePrefix=\"setImmediate$\"+Math.random()+\"$\",onGlobalMessage=function(event){event.source===global&&\"string\"===typeof event.data&&0===event.data.indexOf(messagePrefix)&&runIfPresent(+event.data.slice(messagePrefix.length))};global.addEventListener?global.addEventListener(\"message\",onGlobalMessage,!1):global.attachEvent(\"onmessage\",onGlobalMessage);registerImmediate=function(handle){global.postMessage(messagePrefix+\nhandle,\"*\")}}function installMessageChannelImplementation(){var channel=new MessageChannel;channel.port1.onmessage=function(event){runIfPresent(event.data)};registerImmediate=function(handle){channel.port2.postMessage(handle)}}function installReadyStateChangeImplementation(){var html=doc.documentElement;registerImmediate=function(handle){var script=doc.createElement(\"script\");script.onreadystatechange=function(){runIfPresent(handle);script.onreadystatechange=null;html.removeChild(script);script=null};\nhtml.appendChild(script)}}function installSetTimeoutImplementation(){registerImmediate=function(handle){setTimeout(runIfPresent,0,handle)}}if(!global.setImmediate){var nextHandle=1,tasksByHandle={},currentlyRunningATask=!1,doc=global.document,registerImmediate,attachTo=Object.getPrototypeOf&&Object.getPrototypeOf(global);attachTo=attachTo&&attachTo.setTimeout?attachTo:global;\"[object process]\"==={}.toString.call(global.process)?installNextTickImplementation():canUsePostMessage()?installPostMessageImplementation():\nglobal.MessageChannel?installMessageChannelImplementation():doc&&\"onreadystatechange\"in doc.createElement(\"script\")?installReadyStateChangeImplementation():installSetTimeoutImplementation();attachTo.setImmediate=function(callback){\"function\"!==typeof callback&&(callback=new Function(\"\"+callback));for(var args=Array(arguments.length-1),i=0;i<args.length;i++)args[i]=arguments[i+1];tasksByHandle[nextHandle]={callback:callback,args:args};registerImmediate(nextHandle);return nextHandle++};attachTo.clearImmediate=\nclearImmediate}})(\"undefined\"===typeof self?\"undefined\"===typeof global$jscomp$0?this:global$jscomp$0:self)}","~:source","shadow$provide[\"module$node_modules$setimmediate$setImmediate\"] = function(global,process,require,module,exports,shadow$shims) {\n(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6â€“8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["callback","args","setImmediate","clearImmediate","onreadystatechange","onmessage"]],"~:compiled-at",1532351402143,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$setimmediate$setImmediate.js\",\n\"lineCount\":7,\n\"mappings\":\"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,eAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAC9H,SAAS,CAACL,MAAD,CAASM,SAAT,CAAoB,CA8B1BC,QAASA,eAAc,CAACC,MAAD,CAAS,CAC5B,OAAOC,aAAA,CAAcD,MAAd,CADqB,CA0BhCE,QAASA,aAAY,CAACF,MAAD,CAAS,CAG1B,GAAIG,qBAAJ,CAGIC,UAAA,CAAWF,YAAX,CAAyB,CAAzB,CAA4BF,MAA5B,CAHJ,KAIO,CACH,IAAIK,KAAOJ,aAAA,CAAcD,MAAd,CACX,IAAIK,IAAJ,CAAU,CACNF,qBAAA,CAAwB,CAAA,CACxB,IAAI,CAhCZ,IAAIG,SAiCYD,IAjCDC,SAAf,CACIC,KAgCYF,IAhCLE,KACX,QAAQA,IAAAC,OAAR,EACA,KAAK,CAAL,CACIF,QAAA,EACA,MACJ,MAAK,CAAL,CACIA,QAAA,CAASC,IAAA,CAAK,CAAL,CAAT,CACA,MACJ,MAAK,CAAL,CACID,QAAA,CAASC,IAAA,CAAK,CAAL,CAAT;AAAkBA,IAAA,CAAK,CAAL,CAAlB,CACA,MACJ,MAAK,CAAL,CACID,QAAA,CAASC,IAAA,CAAK,CAAL,CAAT,CAAkBA,IAAA,CAAK,CAAL,CAAlB,CAA2BA,IAAA,CAAK,CAAL,CAA3B,CACA,MACJ,SACID,QAAAG,MAAA,CAAeX,SAAf,CAA0BS,IAA1B,CAdJ,CA8BY,CAAJ,OAEU,CACNR,cAAA,CAAeC,MAAf,CACA,CAAAG,qBAAA,CAAwB,CAAA,CAFlB,CAJJ,CAFP,CAPmB,CAqB9BO,QAASA,8BAA6B,EAAG,CACrCC,iBAAA,CAAoBA,QAAQ,CAACX,MAAD,CAAS,CACjCP,OAAAmB,SAAA,CAAiB,QAAS,EAAG,CAAEV,YAAA,CAAaF,MAAb,CAAF,CAA7B,CADiC,CADA,CAMzCa,QAASA,kBAAiB,EAAG,CAGzB,GAAIrB,MAAAsB,YAAJ,EAA0B,CAACtB,MAAAuB,cAA3B,CAAiD,CAC7C,IAAIC,0BAA4B,CAAA,CAAhC,CACIC,aAAezB,MAAA0B,UACnB1B,OAAA0B,UAAA,CAAmBC,QAAQ,EAAG,CAC1BH,yBAAA,CAA4B,CAAA,CADF,CAG9BxB,OAAAsB,YAAA,CAAmB,EAAnB;AAAuB,GAAvB,CACAtB,OAAA0B,UAAA,CAAmBD,YACnB,OAAOD,0BARsC,CAHxB,CAe7BI,QAASA,iCAAgC,EAAG,CAKxC,IAAIC,cAAgB,eAAhBA,CAAkCC,IAAAC,OAAA,EAAlCF,CAAkD,GAAtD,CACIG,gBAAkBA,QAAQ,CAACC,KAAD,CAAQ,CAC9BA,KAAAC,OAAJ,GAAqBlC,MAArB,EAC0B,QAD1B,GACI,MAAOiC,MAAAE,KADX,EAE0C,CAF1C,GAEIF,KAAAE,KAAAC,QAAA,CAAmBP,aAAnB,CAFJ,EAGInB,YAAA,CAAa,CAACuB,KAAAE,KAAAE,MAAA,CAAiBR,aAAAb,OAAjB,CAAd,CAJ8B,CAQlChB,OAAAsC,iBAAJ,CACItC,MAAAsC,iBAAA,CAAwB,SAAxB,CAAmCN,eAAnC,CAAoD,CAAA,CAApD,CADJ,CAGIhC,MAAAuC,YAAA,CAAmB,WAAnB,CAAgCP,eAAhC,CAGJb,kBAAA,CAAoBA,QAAQ,CAACX,MAAD,CAAS,CACjCR,MAAAsB,YAAA,CAAmBO,aAAnB;AAAmCrB,MAAnC,CAA2C,GAA3C,CADiC,CApBG,CAyB5CgC,QAASA,oCAAmC,EAAG,CAC3C,IAAIC,QAAU,IAAIC,cAClBD,QAAAE,MAAAjB,UAAA,CAA0BkB,QAAQ,CAACX,KAAD,CAAQ,CAEtCvB,YAAA,CADauB,KAAAE,KACb,CAFsC,CAK1ChB,kBAAA,CAAoBA,QAAQ,CAACX,MAAD,CAAS,CACjCiC,OAAAI,MAAAvB,YAAA,CAA0Bd,MAA1B,CADiC,CAPM,CAY/CsC,QAASA,sCAAqC,EAAG,CAC7C,IAAIC,KAAOC,GAAAC,gBACX9B,kBAAA,CAAoBA,QAAQ,CAACX,MAAD,CAAS,CAGjC,IAAI0C,OAASF,GAAAG,cAAA,CAAkB,QAAlB,CACbD,OAAAE,mBAAA,CAA4BC,QAAS,EAAG,CACpC3C,YAAA,CAAaF,MAAb,CACA0C,OAAAE,mBAAA,CAA4B,IAC5BL,KAAAO,YAAA,CAAiBJ,MAAjB,CACAA,OAAA,CAAS,IAJ2B,CAMxCH;IAAAQ,YAAA,CAAiBL,MAAjB,CAViC,CAFQ,CAgBjDM,QAASA,gCAA+B,EAAG,CACvCrC,iBAAA,CAAoBA,QAAQ,CAACX,MAAD,CAAS,CACjCI,UAAA,CAAWF,YAAX,CAAyB,CAAzB,CAA4BF,MAA5B,CADiC,CADE,CApJ3C,GAAIiD,CAAAzD,MAAAyD,aAAJ,CAAA,CAIA,IAAIC,WAAa,CAAjB,CACIjD,cAAgB,EADpB,CAEIE,sBAAwB,CAAA,CAF5B,CAGIqC,IAAMhD,MAAA2D,SAHV,CAIIxC,iBAJJ,CAuJIyC,SAAWC,MAAAC,eAAXF,EAAoCC,MAAAC,eAAA,CAAsB9D,MAAtB,CACxC4D,SAAA,CAAWA,QAAA,EAAYA,QAAAhD,WAAZ,CAAkCgD,QAAlC,CAA6C5D,MAGf,mBAAzC,GAAI,EAAA+D,SAAAC,KAAA,CAAiBhE,MAAAC,QAAjB,CAAJ,CAEIiB,6BAAA,EAFJ,CAIWG,iBAAA,EAAJ,CAEHO,gCAAA,EAFG;AAII5B,MAAA0C,eAAJ,CAEHF,mCAAA,EAFG,CAIIQ,GAAJ,EAAW,oBAAX,EAAmCA,IAAAG,cAAA,CAAkB,QAAlB,CAAnC,CAEHL,qCAAA,EAFG,CAMHU,+BAAA,EAGJI,SAAAH,aAAA,CA1KAA,QAAqB,CAAC3C,QAAD,CAAW,CAEN,UAAxB,GAAI,MAAOA,SAAX,GACEA,QADF,CACa,IAAImD,QAAJ,CAAa,EAAb,CAAkBnD,QAAlB,CADb,CAKA,KADA,IAAIC,KAAWmD,KAAJ,CAAUC,SAAAnD,OAAV,CAA6B,CAA7B,CAAX,CACSoD,EAAI,CAAb,CAAgBA,CAAhB,CAAoBrD,IAAAC,OAApB,CAAiCoD,CAAA,EAAjC,CACIrD,IAAA,CAAKqD,CAAL,CAAA,CAAUD,SAAA,CAAUC,CAAV,CAAc,CAAd,CAId3D,cAAA,CAAciD,UAAd,CAAA,CADW7C,CAAEC,SAAUA,QAAZD,CAAsBE,KAAMA,IAA5BF,CAEXM,kBAAA,CAAkBuC,UAAlB,CACA,OAAOA,WAAA,EAduB,CA2KhCE,SAAArD,eAAA;AAA0BA,cArL1B,CAH0B,CAA7B,CAAA,CAyLiB,WAAhB,GAAA,MAAO8D,KAAP,CAAgD,WAAlB,GAAA,MAAOrE,gBAAP,CAAgC,IAAhC,CAAuCA,eAArE,CAA8EqE,IAzL/E,CAD8H;\",\n\"sources\":[\"node_modules/setimmediate/setImmediate.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$setimmediate$setImmediate\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n(function (global, undefined) {\\n    \\\"use strict\\\";\\n\\n    if (global.setImmediate) {\\n        return;\\n    }\\n\\n    var nextHandle = 1; // Spec says greater than zero\\n    var tasksByHandle = {};\\n    var currentlyRunningATask = false;\\n    var doc = global.document;\\n    var registerImmediate;\\n\\n    function setImmediate(callback) {\\n      // Callback can either be a function or a string\\n      if (typeof callback !== \\\"function\\\") {\\n        callback = new Function(\\\"\\\" + callback);\\n      }\\n      // Copy function arguments\\n      var args = new Array(arguments.length - 1);\\n      for (var i = 0; i < args.length; i++) {\\n          args[i] = arguments[i + 1];\\n      }\\n      // Store and register the task\\n      var task = { callback: callback, args: args };\\n      tasksByHandle[nextHandle] = task;\\n      registerImmediate(nextHandle);\\n      return nextHandle++;\\n    }\\n\\n    function clearImmediate(handle) {\\n        delete tasksByHandle[handle];\\n    }\\n\\n    function run(task) {\\n        var callback = task.callback;\\n        var args = task.args;\\n        switch (args.length) {\\n        case 0:\\n            callback();\\n            break;\\n        case 1:\\n            callback(args[0]);\\n            break;\\n        case 2:\\n            callback(args[0], args[1]);\\n            break;\\n        case 3:\\n            callback(args[0], args[1], args[2]);\\n            break;\\n        default:\\n            callback.apply(undefined, args);\\n            break;\\n        }\\n    }\\n\\n    function runIfPresent(handle) {\\n        // From the spec: \\\"Wait until any invocations of this algorithm started before this one have completed.\\\"\\n        // So if we're currently running a task, we'll need to delay this invocation.\\n        if (currentlyRunningATask) {\\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\\n            // \\\"too much recursion\\\" error.\\n            setTimeout(runIfPresent, 0, handle);\\n        } else {\\n            var task = tasksByHandle[handle];\\n            if (task) {\\n                currentlyRunningATask = true;\\n                try {\\n                    run(task);\\n                } finally {\\n                    clearImmediate(handle);\\n                    currentlyRunningATask = false;\\n                }\\n            }\\n        }\\n    }\\n\\n    function installNextTickImplementation() {\\n        registerImmediate = function(handle) {\\n            process.nextTick(function () { runIfPresent(handle); });\\n        };\\n    }\\n\\n    function canUsePostMessage() {\\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\\n        if (global.postMessage && !global.importScripts) {\\n            var postMessageIsAsynchronous = true;\\n            var oldOnMessage = global.onmessage;\\n            global.onmessage = function() {\\n                postMessageIsAsynchronous = false;\\n            };\\n            global.postMessage(\\\"\\\", \\\"*\\\");\\n            global.onmessage = oldOnMessage;\\n            return postMessageIsAsynchronous;\\n        }\\n    }\\n\\n    function installPostMessageImplementation() {\\n        // Installs an event handler on `global` for the `message` event: see\\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\\n\\n        var messagePrefix = \\\"setImmediate$\\\" + Math.random() + \\\"$\\\";\\n        var onGlobalMessage = function(event) {\\n            if (event.source === global &&\\n                typeof event.data === \\\"string\\\" &&\\n                event.data.indexOf(messagePrefix) === 0) {\\n                runIfPresent(+event.data.slice(messagePrefix.length));\\n            }\\n        };\\n\\n        if (global.addEventListener) {\\n            global.addEventListener(\\\"message\\\", onGlobalMessage, false);\\n        } else {\\n            global.attachEvent(\\\"onmessage\\\", onGlobalMessage);\\n        }\\n\\n        registerImmediate = function(handle) {\\n            global.postMessage(messagePrefix + handle, \\\"*\\\");\\n        };\\n    }\\n\\n    function installMessageChannelImplementation() {\\n        var channel = new MessageChannel();\\n        channel.port1.onmessage = function(event) {\\n            var handle = event.data;\\n            runIfPresent(handle);\\n        };\\n\\n        registerImmediate = function(handle) {\\n            channel.port2.postMessage(handle);\\n        };\\n    }\\n\\n    function installReadyStateChangeImplementation() {\\n        var html = doc.documentElement;\\n        registerImmediate = function(handle) {\\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\\n            var script = doc.createElement(\\\"script\\\");\\n            script.onreadystatechange = function () {\\n                runIfPresent(handle);\\n                script.onreadystatechange = null;\\n                html.removeChild(script);\\n                script = null;\\n            };\\n            html.appendChild(script);\\n        };\\n    }\\n\\n    function installSetTimeoutImplementation() {\\n        registerImmediate = function(handle) {\\n            setTimeout(runIfPresent, 0, handle);\\n        };\\n    }\\n\\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\\n\\n    // Don't get fooled by e.g. browserify environments.\\n    if ({}.toString.call(global.process) === \\\"[object process]\\\") {\\n        // For Node.js before 0.9\\n        installNextTickImplementation();\\n\\n    } else if (canUsePostMessage()) {\\n        // For non-IE10 modern browsers\\n        installPostMessageImplementation();\\n\\n    } else if (global.MessageChannel) {\\n        // For web workers, where supported\\n        installMessageChannelImplementation();\\n\\n    } else if (doc && \\\"onreadystatechange\\\" in doc.createElement(\\\"script\\\")) {\\n        // For IE 6\\u20138\\n        installReadyStateChangeImplementation();\\n\\n    } else {\\n        // For older browsers\\n        installSetTimeoutImplementation();\\n    }\\n\\n    attachTo.setImmediate = setImmediate;\\n    attachTo.clearImmediate = clearImmediate;\\n}(typeof self === \\\"undefined\\\" ? typeof global === \\\"undefined\\\" ? this : global : self));\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"undefined\",\"clearImmediate\",\"handle\",\"tasksByHandle\",\"runIfPresent\",\"currentlyRunningATask\",\"setTimeout\",\"task\",\"callback\",\"args\",\"length\",\"apply\",\"installNextTickImplementation\",\"registerImmediate\",\"nextTick\",\"canUsePostMessage\",\"postMessage\",\"importScripts\",\"postMessageIsAsynchronous\",\"oldOnMessage\",\"onmessage\",\"global.onmessage\",\"installPostMessageImplementation\",\"messagePrefix\",\"Math\",\"random\",\"onGlobalMessage\",\"event\",\"source\",\"data\",\"indexOf\",\"slice\",\"addEventListener\",\"attachEvent\",\"installMessageChannelImplementation\",\"channel\",\"MessageChannel\",\"port1\",\"channel.port1.onmessage\",\"port2\",\"installReadyStateChangeImplementation\",\"html\",\"doc\",\"documentElement\",\"script\",\"createElement\",\"onreadystatechange\",\"script.onreadystatechange\",\"removeChild\",\"appendChild\",\"installSetTimeoutImplementation\",\"setImmediate\",\"nextHandle\",\"document\",\"attachTo\",\"Object\",\"getPrototypeOf\",\"toString\",\"call\",\"Function\",\"Array\",\"arguments\",\"i\",\"self\"]\n}\n"]