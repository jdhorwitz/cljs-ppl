["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_mapCacheSet.js"],"~:js","shadow$provide.module$node_modules$lodash$_mapCacheSet=function(global,process,require,module,exports,shadow$shims){var getMapData=require(\"module$node_modules$lodash$_getMapData\");module.exports=function(key,value){var data=getMapData(this,key),size=data.size;data.set(key,value);this.size+=data.size==size?0:1;return this}}","~:source","shadow$provide[\"module$node_modules$lodash$_mapCacheSet\"] = function(global,process,require,module,exports,shadow$shims) {\nvar getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_getMapData","~$shadow.js"]],"~:properties",["^5",["size"]],"~:compiled-at",1532351402009,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_mapCacheSet.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,wCAAA,CAA4D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CACzH,IAAIC,WAAaJ,OAAA,CAAQ,wCAAR,CAqBjBC,OAAAC,QAAA,CATAG,QAAoB,CAACC,GAAD,CAAMC,KAAN,CAAa,CAAA,IAC3BC,KAAOJ,UAAA,CAAW,IAAX,CAAiBE,GAAjB,CADoB,CAE3BG,KAAOD,IAAAC,KAEXD,KAAAE,IAAA,CAASJ,GAAT,CAAcC,KAAd,CACA,KAAAE,KAAA,EAAaD,IAAAC,KAAA,EAAaA,IAAb,CAAoB,CAApB,CAAwB,CACrC,OAAO,KANwB,CAbwF;\",\n\"sources\":[\"node_modules/lodash/_mapCacheSet.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_mapCacheSet\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar getMapData = require('./_getMapData');\\n\\n/**\\n * Sets the map `key` to `value`.\\n *\\n * @private\\n * @name set\\n * @memberOf MapCache\\n * @param {string} key The key of the value to set.\\n * @param {*} value The value to set.\\n * @returns {Object} Returns the map cache instance.\\n */\\nfunction mapCacheSet(key, value) {\\n  var data = getMapData(this, key),\\n      size = data.size;\\n\\n  data.set(key, value);\\n  this.size += data.size == size ? 0 : 1;\\n  return this;\\n}\\n\\nmodule.exports = mapCacheSet;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"getMapData\",\"mapCacheSet\",\"key\",\"value\",\"data\",\"size\",\"set\"]\n}\n"]