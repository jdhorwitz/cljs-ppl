["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/keyCommandBackspaceToStartOfLine.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$keyCommandBackspaceToStartOfLine=function(global,process,require,module,exports,shadow$shims){var EditorState=require(\"module$node_modules$draft_js$lib$EditorState\"),expandRangeToStartOfLine=require(\"module$node_modules$draft_js$lib$expandRangeToStartOfLine\"),getDraftEditorSelectionWithNodes=require(\"module$node_modules$draft_js$lib$getDraftEditorSelectionWithNodes\"),moveSelectionBackward=require(\"module$node_modules$draft_js$lib$moveSelectionBackward\"),\nremoveTextWithStrategy=require(\"module$node_modules$draft_js$lib$removeTextWithStrategy\");module.exports=function(editorState){var afterRemoval=removeTextWithStrategy(editorState,function(strategyState){var selection=strategyState.getSelection();if(selection.isCollapsed()&&0===selection.getAnchorOffset())return moveSelectionBackward(strategyState,1);selection=global.getSelection().getRangeAt(0);selection=expandRangeToStartOfLine(selection);return getDraftEditorSelectionWithNodes(strategyState,null,\nselection.endContainer,selection.endOffset,selection.startContainer,selection.startOffset).selectionState},\"backward\");return afterRemoval===editorState.getCurrentContent()?editorState:EditorState.push(editorState,afterRemoval,\"remove-range\")}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$keyCommandBackspaceToStartOfLine\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandBackspaceToStartOfLine\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\n\nvar expandRangeToStartOfLine = require('./expandRangeToStartOfLine');\nvar getDraftEditorSelectionWithNodes = require('./getDraftEditorSelectionWithNodes');\nvar moveSelectionBackward = require('./moveSelectionBackward');\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\n\nfunction keyCommandBackspaceToStartOfLine(editorState) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n    if (selection.isCollapsed() && selection.getAnchorOffset() === 0) {\n      return moveSelectionBackward(strategyState, 1);\n    }\n\n    var domSelection = global.getSelection();\n    var range = domSelection.getRangeAt(0);\n    range = expandRangeToStartOfLine(range);\n\n    return getDraftEditorSelectionWithNodes(strategyState, null, range.endContainer, range.endOffset, range.startContainer, range.startOffset).selectionState;\n  }, 'backward');\n\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\n}\n\nmodule.exports = keyCommandBackspaceToStartOfLine;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$draft_js$lib$removeTextWithStrategy","~$shadow.js","~$module$node_modules$draft_js$lib$moveSelectionBackward","~$module$node_modules$draft_js$lib$EditorState","~$module$node_modules$draft_js$lib$getDraftEditorSelectionWithNodes","~$module$node_modules$draft_js$lib$expandRangeToStartOfLine"]],"~:properties",["^5",[]],"~:compiled-at",1532351402146,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$keyCommandBackspaceToStartOfLine.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,kEAAA,CAAsF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBnJ,IAAIC,YAAcJ,OAAA,CAAQ,8CAAR,CAAlB,CAEIK,yBAA2BL,OAAA,CAAQ,2DAAR,CAF/B,CAGIM,iCAAmCN,OAAA,CAAQ,mEAAR,CAHvC,CAIIO,sBAAwBP,OAAA,CAAQ,wDAAR,CAJ5B;AAKIQ,uBAAyBR,OAAA,CAAQ,yDAAR,CAuB7BC,OAAAC,QAAA,CArBAO,QAAyC,CAACC,WAAD,CAAc,CACrD,IAAIC,aAAeH,sBAAA,CAAuBE,WAAvB,CAAoC,QAAS,CAACE,aAAD,CAAgB,CAC9E,IAAIC,UAAYD,aAAAE,aAAA,EAChB,IAAID,SAAAE,YAAA,EAAJ,EAA+D,CAA/D,GAA+BF,SAAAG,gBAAA,EAA/B,CACE,MAAOT,sBAAA,CAAsBK,aAAtB,CAAqC,CAArC,CAILK,UAAAA,CADenB,MAAAgB,aAAAI,EACPC,WAAA,CAAwB,CAAxB,CACZF,UAAA,CAAQZ,wBAAA,CAAyBY,SAAzB,CAER,OAAOX,iCAAA,CAAiCM,aAAjC,CAAgD,IAAhD;AAAsDK,SAAAG,aAAtD,CAA0EH,SAAAI,UAA1E,CAA2FJ,SAAAK,eAA3F,CAAiHL,SAAAM,YAAjH,CAAAC,eAVuE,CAA7D,CAWhB,UAXgB,CAanB,OAAIb,aAAJ,GAAqBD,WAAAe,kBAAA,EAArB,CACSf,WADT,CAION,WAAAsB,KAAA,CAAiBhB,WAAjB,CAA8BC,YAA9B,CAA4C,cAA5C,CAlB8C,CAvB4F;\",\n\"sources\":[\"node_modules/draft-js/lib/keyCommandBackspaceToStartOfLine.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$keyCommandBackspaceToStartOfLine\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule keyCommandBackspaceToStartOfLine\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar EditorState = require('./EditorState');\\n\\nvar expandRangeToStartOfLine = require('./expandRangeToStartOfLine');\\nvar getDraftEditorSelectionWithNodes = require('./getDraftEditorSelectionWithNodes');\\nvar moveSelectionBackward = require('./moveSelectionBackward');\\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\\n\\nfunction keyCommandBackspaceToStartOfLine(editorState) {\\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\\n    var selection = strategyState.getSelection();\\n    if (selection.isCollapsed() && selection.getAnchorOffset() === 0) {\\n      return moveSelectionBackward(strategyState, 1);\\n    }\\n\\n    var domSelection = global.getSelection();\\n    var range = domSelection.getRangeAt(0);\\n    range = expandRangeToStartOfLine(range);\\n\\n    return getDraftEditorSelectionWithNodes(strategyState, null, range.endContainer, range.endOffset, range.startContainer, range.startOffset).selectionState;\\n  }, 'backward');\\n\\n  if (afterRemoval === editorState.getCurrentContent()) {\\n    return editorState;\\n  }\\n\\n  return EditorState.push(editorState, afterRemoval, 'remove-range');\\n}\\n\\nmodule.exports = keyCommandBackspaceToStartOfLine;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"EditorState\",\"expandRangeToStartOfLine\",\"getDraftEditorSelectionWithNodes\",\"moveSelectionBackward\",\"removeTextWithStrategy\",\"keyCommandBackspaceToStartOfLine\",\"editorState\",\"afterRemoval\",\"strategyState\",\"selection\",\"getSelection\",\"isCollapsed\",\"getAnchorOffset\",\"range\",\"domSelection\",\"getRangeAt\",\"endContainer\",\"endOffset\",\"startContainer\",\"startOffset\",\"selectionState\",\"getCurrentContent\",\"push\"]\n}\n"]