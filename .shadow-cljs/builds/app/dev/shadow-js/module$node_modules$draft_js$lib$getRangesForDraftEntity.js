["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/getRangesForDraftEntity.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$getRangesForDraftEntity=function(global,process,require,module,exports,shadow$shims){var invariant=require(\"module$node_modules$fbjs$lib$invariant\");module.exports=function(block,key){var ranges=[];block.findEntityRanges(function(c){return c.getEntity()===key},function(start,end){ranges.push({start:start,end:end})});ranges.length?void 0:invariant(!1,\"Entity key not found in this range.\");return ranges}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$getRangesForDraftEntity\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getRangesForDraftEntity\n * @format\n * \n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Obtain the start and end positions of the range that has the\n * specified entity applied to it.\n *\n * Entity keys are applied only to contiguous stretches of text, so this\n * method searches for the first instance of the entity key and returns\n * the subsequent range.\n */\nfunction getRangesForDraftEntity(block, key) {\n  var ranges = [];\n  block.findEntityRanges(function (c) {\n    return c.getEntity() === key;\n  }, function (start, end) {\n    ranges.push({ start: start, end: end });\n  });\n\n  !!!ranges.length ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Entity key not found in this range.') : invariant(false) : void 0;\n\n  return ranges;\n}\n\nmodule.exports = getRangesForDraftEntity;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$invariant"]],"~:properties",["^5",["start","end"]],"~:compiled-at",1532351402127,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$getRangesForDraftEntity.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB1I,IAAIC,UAAYJ,OAAA,CAAQ,wCAAR,CAuBhBC,OAAAC,QAAA,CAbAG,QAAgC,CAACC,KAAD,CAAQC,GAAR,CAAa,CAC3C,IAAIC,OAAS,EACbF,MAAAG,iBAAA,CAAuB,QAAS,CAACC,CAAD,CAAI,CAClC,MAAOA,EAAAC,UAAA,EAAP,GAAyBJ,GADS,CAApC,CAEG,QAAS,CAACK,KAAD,CAAQC,GAAR,CAAa,CACvBL,MAAAM,KAAA,CAAY,CAAEF,MAAOA,KAAT,CAAgBC,IAAKA,GAArB,CAAZ,CADuB,CAFzB,CAMGL,OAAAO,OAAH,CAAwI,IAAK,EAA7I,CAA2DX,SAAA,CAAU,CAAA,CAAV,CAAiB,qCAAjB,CAE3D,OAAOI,OAVoC,CA1B6F;\",\n\"sources\":[\"node_modules/draft-js/lib/getRangesForDraftEntity.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$getRangesForDraftEntity\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getRangesForDraftEntity\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar invariant = require('fbjs/lib/invariant');\\n\\n/**\\n * Obtain the start and end positions of the range that has the\\n * specified entity applied to it.\\n *\\n * Entity keys are applied only to contiguous stretches of text, so this\\n * method searches for the first instance of the entity key and returns\\n * the subsequent range.\\n */\\nfunction getRangesForDraftEntity(block, key) {\\n  var ranges = [];\\n  block.findEntityRanges(function (c) {\\n    return c.getEntity() === key;\\n  }, function (start, end) {\\n    ranges.push({ start: start, end: end });\\n  });\\n\\n  !!!ranges.length ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Entity key not found in this range.') : invariant(false) : void 0;\\n\\n  return ranges;\\n}\\n\\nmodule.exports = getRangesForDraftEntity;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"invariant\",\"getRangesForDraftEntity\",\"block\",\"key\",\"ranges\",\"findEntityRanges\",\"c\",\"getEntity\",\"start\",\"end\",\"push\",\"length\"]\n}\n"]