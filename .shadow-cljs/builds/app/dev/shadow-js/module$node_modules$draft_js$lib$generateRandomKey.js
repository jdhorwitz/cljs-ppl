["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/generateRandomKey.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$generateRandomKey=function(global,process,require,module,exports,shadow$shims){var seenKeys={},MULTIPLIER=Math.pow(2,24);module.exports=function(){for(var key=void 0;void 0===key||seenKeys.hasOwnProperty(key)||!isNaN(+key);)key=Math.floor(Math.random()*MULTIPLIER).toString(32);seenKeys[key]=!0;return key}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$generateRandomKey\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule generateRandomKey\n * @format\n * \n */\n\n'use strict';\n\nvar seenKeys = {};\nvar MULTIPLIER = Math.pow(2, 24);\n\nfunction generateRandomKey() {\n  var key = void 0;\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) {\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\n  }\n  seenKeys[key] = true;\n  return key;\n}\n\nmodule.exports = generateRandomKey;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1532351402127,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$generateRandomKey.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,mDAAA,CAAuE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgBpI,IAAIC,SAAW,EAAf,CACIC,WAAaC,IAAAC,IAAA,CAAS,CAAT,CAAY,EAAZ,CAWjBN,OAAAC,QAAA,CATAM,QAA0B,EAAG,CAE3B,IADA,IAAIC,IAAM,IAAK,EACf,CAAeC,IAAAA,EAAf,GAAOD,GAAP,EAA4BL,QAAAO,eAAA,CAAwBF,GAAxB,CAA5B,EAA4D,CAACG,KAAA,CAAM,CAACH,GAAP,CAA7D,CAAA,CACEA,GAAA,CAAMH,IAAAO,MAAA,CAAWP,IAAAQ,OAAA,EAAX,CAA2BT,UAA3B,CAAAU,SAAA,CAAgD,EAAhD,CAERX,SAAA,CAASK,GAAT,CAAA,CAAgB,CAAA,CAChB,OAAOA,IANoB,CAnBuG;\",\n\"sources\":[\"node_modules/draft-js/lib/generateRandomKey.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$generateRandomKey\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule generateRandomKey\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar seenKeys = {};\\nvar MULTIPLIER = Math.pow(2, 24);\\n\\nfunction generateRandomKey() {\\n  var key = void 0;\\n  while (key === undefined || seenKeys.hasOwnProperty(key) || !isNaN(+key)) {\\n    key = Math.floor(Math.random() * MULTIPLIER).toString(32);\\n  }\\n  seenKeys[key] = true;\\n  return key;\\n}\\n\\nmodule.exports = generateRandomKey;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"seenKeys\",\"MULTIPLIER\",\"Math\",\"pow\",\"generateRandomKey\",\"key\",\"undefined\",\"hasOwnProperty\",\"isNaN\",\"floor\",\"random\",\"toString\"]\n}\n"]