["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/keyCommandPlainBackspace.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$keyCommandPlainBackspace=function(global,process,require,module,exports,shadow$shims){var EditorState=require(\"module$node_modules$draft_js$lib$EditorState\"),UnicodeUtils=require(\"module$node_modules$fbjs$lib$UnicodeUtils\"),moveSelectionBackward=require(\"module$node_modules$draft_js$lib$moveSelectionBackward\"),removeTextWithStrategy=require(\"module$node_modules$draft_js$lib$removeTextWithStrategy\");module.exports=function(editorState){var afterRemoval=\nremoveTextWithStrategy(editorState,function(strategyState){var selection=strategyState.getSelection(),content=strategyState.getCurrentContent(),key=selection.getAnchorKey();selection=selection.getAnchorOffset();content=content.getBlockForKey(key).getText()[selection-1];return moveSelectionBackward(strategyState,content?UnicodeUtils.getUTF16Length(content,0):1)},\"backward\");if(afterRemoval===editorState.getCurrentContent())return editorState;var selection$jscomp$0=editorState.getSelection();return EditorState.push(editorState,\nafterRemoval.set(\"selectionBefore\",selection$jscomp$0),selection$jscomp$0.isCollapsed()?\"backspace-character\":\"remove-range\")}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$keyCommandPlainBackspace\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule keyCommandPlainBackspace\n * @format\n * \n */\n\n'use strict';\n\nvar EditorState = require('./EditorState');\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar moveSelectionBackward = require('./moveSelectionBackward');\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\n\n/**\n * Remove the selected range. If the cursor is collapsed, remove the preceding\n * character. This operation is Unicode-aware, so removing a single character\n * will remove a surrogate pair properly as well.\n */\nfunction keyCommandPlainBackspace(editorState) {\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\n    var selection = strategyState.getSelection();\n    var content = strategyState.getCurrentContent();\n    var key = selection.getAnchorKey();\n    var offset = selection.getAnchorOffset();\n    var charBehind = content.getBlockForKey(key).getText()[offset - 1];\n    return moveSelectionBackward(strategyState, charBehind ? UnicodeUtils.getUTF16Length(charBehind, 0) : 1);\n  }, 'backward');\n\n  if (afterRemoval === editorState.getCurrentContent()) {\n    return editorState;\n  }\n\n  var selection = editorState.getSelection();\n  return EditorState.push(editorState, afterRemoval.set('selectionBefore', selection), selection.isCollapsed() ? 'backspace-character' : 'remove-range');\n}\n\nmodule.exports = keyCommandPlainBackspace;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$draft_js$lib$removeTextWithStrategy","~$shadow.js","~$module$node_modules$fbjs$lib$UnicodeUtils","~$module$node_modules$draft_js$lib$moveSelectionBackward","~$module$node_modules$draft_js$lib$EditorState"]],"~:properties",["^5",[]],"~:compiled-at",1532351402147,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$keyCommandPlainBackspace.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB3I,IAAIC,YAAcJ,OAAA,CAAQ,8CAAR,CAAlB,CACIK,aAAeL,OAAA,CAAQ,2CAAR,CADnB,CAGIM,sBAAwBN,OAAA,CAAQ,wDAAR,CAH5B,CAIIO,uBAAyBP,OAAA,CAAQ,yDAAR,CAyB7BC,OAAAC,QAAA,CAlBAM,QAAiC,CAACC,WAAD,CAAc,CAC7C,IAAIC;AAAeH,sBAAA,CAAuBE,WAAvB,CAAoC,QAAS,CAACE,aAAD,CAAgB,CAC9E,IAAIC,UAAYD,aAAAE,aAAA,EAAhB,CACIC,QAAUH,aAAAI,kBAAA,EADd,CAEIC,IAAMJ,SAAAK,aAAA,EACNC,UAAAA,CAASN,SAAAO,gBAAA,EACTC,QAAAA,CAAaN,OAAAO,eAAA,CAAuBL,GAAvB,CAAAM,QAAA,EAAA,CAAsCJ,SAAtC,CAA+C,CAA/C,CACjB,OAAOZ,sBAAA,CAAsBK,aAAtB,CAAqCS,OAAA,CAAaf,YAAAkB,eAAA,CAA4BH,OAA5B,CAAwC,CAAxC,CAAb,CAA0D,CAA/F,CANuE,CAA7D,CAOhB,UAPgB,CASnB,IAAIV,YAAJ,GAAqBD,WAAAM,kBAAA,EAArB,CACE,MAAON,YAGT,KAAIG,mBAAYH,WAAAI,aAAA,EAChB,OAAOT,YAAAoB,KAAA,CAAiBf,WAAjB;AAA8BC,YAAAe,IAAA,CAAiB,iBAAjB,CAAoCb,kBAApC,CAA9B,CAA8EA,kBAAAc,YAAA,EAAA,CAA0B,qBAA1B,CAAkD,cAAhI,CAfsC,CA3B4F;\",\n\"sources\":[\"node_modules/draft-js/lib/keyCommandPlainBackspace.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$keyCommandPlainBackspace\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule keyCommandPlainBackspace\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar EditorState = require('./EditorState');\\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\\n\\nvar moveSelectionBackward = require('./moveSelectionBackward');\\nvar removeTextWithStrategy = require('./removeTextWithStrategy');\\n\\n/**\\n * Remove the selected range. If the cursor is collapsed, remove the preceding\\n * character. This operation is Unicode-aware, so removing a single character\\n * will remove a surrogate pair properly as well.\\n */\\nfunction keyCommandPlainBackspace(editorState) {\\n  var afterRemoval = removeTextWithStrategy(editorState, function (strategyState) {\\n    var selection = strategyState.getSelection();\\n    var content = strategyState.getCurrentContent();\\n    var key = selection.getAnchorKey();\\n    var offset = selection.getAnchorOffset();\\n    var charBehind = content.getBlockForKey(key).getText()[offset - 1];\\n    return moveSelectionBackward(strategyState, charBehind ? UnicodeUtils.getUTF16Length(charBehind, 0) : 1);\\n  }, 'backward');\\n\\n  if (afterRemoval === editorState.getCurrentContent()) {\\n    return editorState;\\n  }\\n\\n  var selection = editorState.getSelection();\\n  return EditorState.push(editorState, afterRemoval.set('selectionBefore', selection), selection.isCollapsed() ? 'backspace-character' : 'remove-range');\\n}\\n\\nmodule.exports = keyCommandPlainBackspace;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"EditorState\",\"UnicodeUtils\",\"moveSelectionBackward\",\"removeTextWithStrategy\",\"keyCommandPlainBackspace\",\"editorState\",\"afterRemoval\",\"strategyState\",\"selection\",\"getSelection\",\"content\",\"getCurrentContent\",\"key\",\"getAnchorKey\",\"offset\",\"getAnchorOffset\",\"charBehind\",\"getBlockForKey\",\"getText\",\"getUTF16Length\",\"push\",\"set\",\"isCollapsed\"]\n}\n"]