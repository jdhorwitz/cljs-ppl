["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/DraftRemovableWord.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$DraftRemovableWord=function(global,process,require,module,exports,shadow$shims){function getRemovableWord(text,isBackward){return(isBackward=isBackward?BACKSPACE_REGEX.exec(text):DELETE_REGEX.exec(text))?isBackward[0]:text}global=\"\\\\s|(?![_])\"+require(\"module$node_modules$fbjs$lib$TokenizeUtil\").getPunctuation();var DELETE_REGEX=new RegExp(\"^(?:\"+global+\")*(?:['‘’]|(?!\"+global+\").)*(?:(?!\"+global+\").)\"),BACKSPACE_REGEX=new RegExp(\"(?:(?!\"+global+\").)(?:['‘’]|(?!\"+\nglobal+\").)*(?:\"+global+\")*$\");module.exports={getBackward:function(text){return getRemovableWord(text,!0)},getForward:function(text){return getRemovableWord(text,!1)}}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$DraftRemovableWord\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftRemovableWord\n * @format\n * \n */\n\n'use strict';\n\nvar TokenizeUtil = require('fbjs/lib/TokenizeUtil');\n\nvar punctuation = TokenizeUtil.getPunctuation();\n\n// The apostrophe and curly single quotes behave in a curious way: when\n// surrounded on both sides by word characters, they behave as word chars; when\n// either neighbor is punctuation or an end of the string, they behave as\n// punctuation.\nvar CHAMELEON_CHARS = '[\\'\\u2018\\u2019]';\n\n// Remove the underscore, which should count as part of the removable word. The\n// \"chameleon chars\" also count as punctuation in this regex.\nvar WHITESPACE_AND_PUNCTUATION = '\\\\s|(?![_])' + punctuation;\n\nvar DELETE_STRING = '^' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)';\nvar DELETE_REGEX = new RegExp(DELETE_STRING);\n\nvar BACKSPACE_STRING = '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '$';\nvar BACKSPACE_REGEX = new RegExp(BACKSPACE_STRING);\n\nfunction getRemovableWord(text, isBackward) {\n  var matches = isBackward ? BACKSPACE_REGEX.exec(text) : DELETE_REGEX.exec(text);\n  return matches ? matches[0] : text;\n}\n\nvar DraftRemovableWord = {\n  getBackward: function getBackward(text) {\n    return getRemovableWord(text, true);\n  },\n\n  getForward: function getForward(text) {\n    return getRemovableWord(text, false);\n  }\n};\n\nmodule.exports = DraftRemovableWord;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$TokenizeUtil"]],"~:properties",["^5",["getBackward","getForward"]],"~:compiled-at",1532351402146,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$DraftRemovableWord.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAoCrIC,QAASA,iBAAgB,CAACC,IAAD,CAAOC,UAAP,CAAmB,CAE1C,MAAO,CADHC,UACG,CADOD,UAAA,CAAaE,eAAAC,KAAA,CAAqBJ,IAArB,CAAb,CAA0CK,YAAAD,KAAA,CAAkBJ,IAAlB,CACjD,EAAUE,UAAA,CAAQ,CAAR,CAAV,CAAuBF,IAFY,CARxCM,MAAAA,CAA6B,aAA7BA,CAZeX,OAAAY,CAAQ,2CAARA,CAEDC,eAAAC,EAalB,KAAIJ,aAAe,IAAIK,MAAJ,CADC,MACD,CADeJ,MACf,CAD6E,gBAC7E,CADsFA,MACtF,CAD4H,YAC5H,CADuIA,MACvI,CADoK,KACpK,CAAnB,CAGIH,gBAAkB,IAAIO,MAAJ,CADC,QACD,CADYJ,MACZ,CAD2E,iBAC3E;AADoFA,MACpF,CAD0H,SAC1H,CADkIA,MAClI,CADsK,KACtK,CAiBtBV,OAAAC,QAAA,CAVyBc,CACvBC,YAAaA,QAAoB,CAACZ,IAAD,CAAO,CACtC,MAAOD,iBAAA,CAAiBC,IAAjB,CAAuB,CAAA,CAAvB,CAD+B,CADjBW,CAKvBE,WAAYA,QAAmB,CAACb,IAAD,CAAO,CACpC,MAAOD,iBAAA,CAAiBC,IAAjB,CAAuB,CAAA,CAAvB,CAD6B,CALfW,CAzC4G;\",\n\"sources\":[\"node_modules/draft-js/lib/DraftRemovableWord.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$DraftRemovableWord\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DraftRemovableWord\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar TokenizeUtil = require('fbjs/lib/TokenizeUtil');\\n\\nvar punctuation = TokenizeUtil.getPunctuation();\\n\\n// The apostrophe and curly single quotes behave in a curious way: when\\n// surrounded on both sides by word characters, they behave as word chars; when\\n// either neighbor is punctuation or an end of the string, they behave as\\n// punctuation.\\nvar CHAMELEON_CHARS = '[\\\\'\\\\u2018\\\\u2019]';\\n\\n// Remove the underscore, which should count as part of the removable word. The\\n// \\\"chameleon chars\\\" also count as punctuation in this regex.\\nvar WHITESPACE_AND_PUNCTUATION = '\\\\\\\\s|(?![_])' + punctuation;\\n\\nvar DELETE_STRING = '^' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)';\\nvar DELETE_REGEX = new RegExp(DELETE_STRING);\\n\\nvar BACKSPACE_STRING = '(?:(?!' + WHITESPACE_AND_PUNCTUATION + ').)' + '(?:' + CHAMELEON_CHARS + '|(?!' + WHITESPACE_AND_PUNCTUATION + ').)*' + '(?:' + WHITESPACE_AND_PUNCTUATION + ')*' + '$';\\nvar BACKSPACE_REGEX = new RegExp(BACKSPACE_STRING);\\n\\nfunction getRemovableWord(text, isBackward) {\\n  var matches = isBackward ? BACKSPACE_REGEX.exec(text) : DELETE_REGEX.exec(text);\\n  return matches ? matches[0] : text;\\n}\\n\\nvar DraftRemovableWord = {\\n  getBackward: function getBackward(text) {\\n    return getRemovableWord(text, true);\\n  },\\n\\n  getForward: function getForward(text) {\\n    return getRemovableWord(text, false);\\n  }\\n};\\n\\nmodule.exports = DraftRemovableWord;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"getRemovableWord\",\"text\",\"isBackward\",\"matches\",\"BACKSPACE_REGEX\",\"exec\",\"DELETE_REGEX\",\"WHITESPACE_AND_PUNCTUATION\",\"TokenizeUtil\",\"getPunctuation\",\"punctuation\",\"RegExp\",\"DraftRemovableWord\",\"getBackward\",\"getForward\"]\n}\n"]