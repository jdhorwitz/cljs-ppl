["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/applyEntityToContentState.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$applyEntityToContentState=function(global,process,require,module,exports,shadow$shims){var Immutable=require(\"module$node_modules$immutable$dist$immutable\"),applyEntityToContentBlock=require(\"module$node_modules$draft_js$lib$applyEntityToContentBlock\");module.exports=function(contentState,selectionState,entityKey){var blockMap=contentState.getBlockMap(),startKey=selectionState.getStartKey(),startOffset=selectionState.getStartOffset(),endKey=selectionState.getEndKey(),\nendOffset=selectionState.getEndOffset(),newBlocks=blockMap.skipUntil(function(_,k){return k===startKey}).takeUntil(function(_,k){return k===endKey}).toOrderedMap().merge(Immutable.OrderedMap([[endKey,blockMap.get(endKey)]])).map(function(block,blockKey){var sliceStart=blockKey===startKey?startOffset:0;blockKey=blockKey===endKey?endOffset:block.getLength();return applyEntityToContentBlock(block,sliceStart,blockKey,entityKey)});return contentState.merge({blockMap:blockMap.merge(newBlocks),selectionBefore:selectionState,\nselectionAfter:selectionState})}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$applyEntityToContentState\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule applyEntityToContentState\n * @format\n * \n */\n\n'use strict';\n\nvar Immutable = require('immutable');\n\nvar applyEntityToContentBlock = require('./applyEntityToContentBlock');\n\nfunction applyEntityToContentState(contentState, selectionState, entityKey) {\n  var blockMap = contentState.getBlockMap();\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n\n  var newBlocks = blockMap.skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).toOrderedMap().merge(Immutable.OrderedMap([[endKey, blockMap.get(endKey)]])).map(function (block, blockKey) {\n    var sliceStart = blockKey === startKey ? startOffset : 0;\n    var sliceEnd = blockKey === endKey ? endOffset : block.getLength();\n    return applyEntityToContentBlock(block, sliceStart, sliceEnd, entityKey);\n  });\n\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\n\nmodule.exports = applyEntityToContentState;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$immutable$dist$immutable","~$module$node_modules$draft_js$lib$applyEntityToContentBlock"]],"~:properties",["^5",["selectionBefore","selectionAfter","blockMap"]],"~:compiled-at",1532351402126,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$applyEntityToContentState.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,2DAAA,CAA+E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAgB5I,IAAIC,UAAYJ,OAAA,CAAQ,8CAAR,CAAhB,CAEIK,0BAA4BL,OAAA,CAAQ,4DAAR,CA0BhCC,OAAAC,QAAA,CAxBAI,QAAkC,CAACC,YAAD,CAAeC,cAAf,CAA+BC,SAA/B,CAA0C,CAC1E,IAAIC,SAAWH,YAAAI,YAAA,EAAf,CACIC,SAAWJ,cAAAK,YAAA,EADf,CAEIC,YAAcN,cAAAO,eAAA,EAFlB,CAGIC,OAASR,cAAAS,UAAA,EAHb;AAIIC,UAAYV,cAAAW,aAAA,EAJhB,CAMIC,UAAYV,QAAAW,UAAA,CAAmB,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CACjD,MAAOA,EAAP,GAAaX,QADoC,CAAnC,CAAAY,UAAA,CAEH,QAAS,CAACF,CAAD,CAAIC,CAAJ,CAAO,CAC3B,MAAOA,EAAP,GAAaP,MADc,CAFb,CAAAS,aAAA,EAAAC,MAAA,CAIQtB,SAAAuB,WAAA,CAAqB,CAAC,CAACX,MAAD,CAASN,QAAAkB,IAAA,CAAaZ,MAAb,CAAT,CAAD,CAArB,CAJR,CAAAa,IAAA,CAIoE,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAC7G,IAAIC,WAAaD,QAAA,GAAanB,QAAb,CAAwBE,WAAxB,CAAsC,CACnDmB,SAAAA,CAAWF,QAAA,GAAaf,MAAb,CAAsBE,SAAtB,CAAkCY,KAAAI,UAAA,EACjD,OAAO7B,0BAAA,CAA0ByB,KAA1B,CAAiCE,UAAjC,CAA6CC,QAA7C,CAAuDxB,SAAvD,CAHsG,CAJ/F,CAUhB,OAAOF,aAAAmB,MAAA,CAAmB,CACxBhB,SAAUA,QAAAgB,MAAA,CAAeN,SAAf,CADc,CAExBe,gBAAiB3B,cAFO;AAGxB4B,eAAgB5B,cAHQ,CAAnB,CAjBmE,CApBgE;\",\n\"sources\":[\"node_modules/draft-js/lib/applyEntityToContentState.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$applyEntityToContentState\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule applyEntityToContentState\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar Immutable = require('immutable');\\n\\nvar applyEntityToContentBlock = require('./applyEntityToContentBlock');\\n\\nfunction applyEntityToContentState(contentState, selectionState, entityKey) {\\n  var blockMap = contentState.getBlockMap();\\n  var startKey = selectionState.getStartKey();\\n  var startOffset = selectionState.getStartOffset();\\n  var endKey = selectionState.getEndKey();\\n  var endOffset = selectionState.getEndOffset();\\n\\n  var newBlocks = blockMap.skipUntil(function (_, k) {\\n    return k === startKey;\\n  }).takeUntil(function (_, k) {\\n    return k === endKey;\\n  }).toOrderedMap().merge(Immutable.OrderedMap([[endKey, blockMap.get(endKey)]])).map(function (block, blockKey) {\\n    var sliceStart = blockKey === startKey ? startOffset : 0;\\n    var sliceEnd = blockKey === endKey ? endOffset : block.getLength();\\n    return applyEntityToContentBlock(block, sliceStart, sliceEnd, entityKey);\\n  });\\n\\n  return contentState.merge({\\n    blockMap: blockMap.merge(newBlocks),\\n    selectionBefore: selectionState,\\n    selectionAfter: selectionState\\n  });\\n}\\n\\nmodule.exports = applyEntityToContentState;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Immutable\",\"applyEntityToContentBlock\",\"applyEntityToContentState\",\"contentState\",\"selectionState\",\"entityKey\",\"blockMap\",\"getBlockMap\",\"startKey\",\"getStartKey\",\"startOffset\",\"getStartOffset\",\"endKey\",\"getEndKey\",\"endOffset\",\"getEndOffset\",\"newBlocks\",\"skipUntil\",\"_\",\"k\",\"takeUntil\",\"toOrderedMap\",\"merge\",\"OrderedMap\",\"get\",\"map\",\"block\",\"blockKey\",\"sliceStart\",\"sliceEnd\",\"getLength\",\"selectionBefore\",\"selectionAfter\"]\n}\n"]