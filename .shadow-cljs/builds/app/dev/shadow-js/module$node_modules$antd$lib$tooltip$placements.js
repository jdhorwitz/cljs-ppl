["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/antd/lib/tooltip/placements.js"],"~:js","shadow$provide.module$node_modules$antd$lib$tooltip$placements=function(global,process,require,module,exports,shadow$shims){function getOverflowOptions(autoAdjustOverflow){return\"boolean\"===typeof autoAdjustOverflow?autoAdjustOverflow?autoAdjustOverflowEnabled:autoAdjustOverflowDisabled:(0,_extends3[\"default\"])({},autoAdjustOverflowDisabled,autoAdjustOverflow)}Object.defineProperty(exports,\"__esModule\",{value:!0});var _extends3=(global=require(\"module$node_modules$babel_runtime$helpers$extends\"))&&\nglobal.__esModule?global:{\"default\":global};exports.getOverflowOptions=getOverflowOptions;exports[\"default\"]=function(){var config=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},_config$arrowWidth=config.arrowWidth;_config$arrowWidth=void 0===_config$arrowWidth?5:_config$arrowWidth;var _config$horizontalArr=config.horizontalArrowShift;_config$horizontalArr=void 0===_config$horizontalArr?16:_config$horizontalArr;var _config$verticalArrow=config.verticalArrowShift;_config$verticalArrow=void 0===\n_config$verticalArrow?12:_config$verticalArrow;var _config$autoAdjustOve=config.autoAdjustOverflow,autoAdjustOverflow=void 0===_config$autoAdjustOve?!0:_config$autoAdjustOve,placementMap={left:{points:[\"cr\",\"cl\"],offset:[-4,0]},right:{points:[\"cl\",\"cr\"],offset:[4,0]},top:{points:[\"bc\",\"tc\"],offset:[0,-4]},bottom:{points:[\"tc\",\"bc\"],offset:[0,4]},topLeft:{points:[\"bl\",\"tc\"],offset:[-(_config$horizontalArr+_config$arrowWidth),-4]},leftTop:{points:[\"tr\",\"cl\"],offset:[-4,-(_config$verticalArrow+_config$arrowWidth)]},\ntopRight:{points:[\"br\",\"tc\"],offset:[_config$horizontalArr+_config$arrowWidth,-4]},rightTop:{points:[\"tl\",\"cr\"],offset:[4,-(_config$verticalArrow+_config$arrowWidth)]},bottomRight:{points:[\"tr\",\"bc\"],offset:[_config$horizontalArr+_config$arrowWidth,4]},rightBottom:{points:[\"bl\",\"cr\"],offset:[4,_config$verticalArrow+_config$arrowWidth]},bottomLeft:{points:[\"tl\",\"bc\"],offset:[-(_config$horizontalArr+_config$arrowWidth),4]},leftBottom:{points:[\"br\",\"cl\"],offset:[-4,_config$verticalArrow+_config$arrowWidth]}};\nObject.keys(placementMap).forEach(function(key){placementMap[key]=config.arrowPointAtCenter?(0,_extends3[\"default\"])({},placementMap[key],{overflow:getOverflowOptions(autoAdjustOverflow),targetOffset:targetOffset}):(0,_extends3[\"default\"])({},_placements.placements[key],{overflow:getOverflowOptions(autoAdjustOverflow)})});return placementMap};var _placements=require(\"module$node_modules$rc_tooltip$lib$placements\"),autoAdjustOverflowEnabled={adjustX:1,adjustY:1},autoAdjustOverflowDisabled={adjustX:0,\nadjustY:0},targetOffset=[0,0]}","~:source","shadow$provide[\"module$node_modules$antd$lib$tooltip$placements\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nexports.getOverflowOptions = getOverflowOptions;\nexports['default'] = getPlacements;\n\nvar _placements = require('rc-tooltip/lib/placements');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar autoAdjustOverflowEnabled = {\n    adjustX: 1,\n    adjustY: 1\n};\nvar autoAdjustOverflowDisabled = {\n    adjustX: 0,\n    adjustY: 0\n};\nvar targetOffset = [0, 0];\nfunction getOverflowOptions(autoAdjustOverflow) {\n    if (typeof autoAdjustOverflow === 'boolean') {\n        return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n    }\n    return (0, _extends3['default'])({}, autoAdjustOverflowDisabled, autoAdjustOverflow);\n}\nfunction getPlacements() {\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _config$arrowWidth = config.arrowWidth,\n        arrowWidth = _config$arrowWidth === undefined ? 5 : _config$arrowWidth,\n        _config$horizontalArr = config.horizontalArrowShift,\n        horizontalArrowShift = _config$horizontalArr === undefined ? 16 : _config$horizontalArr,\n        _config$verticalArrow = config.verticalArrowShift,\n        verticalArrowShift = _config$verticalArrow === undefined ? 12 : _config$verticalArrow,\n        _config$autoAdjustOve = config.autoAdjustOverflow,\n        autoAdjustOverflow = _config$autoAdjustOve === undefined ? true : _config$autoAdjustOve;\n\n    var placementMap = {\n        left: {\n            points: ['cr', 'cl'],\n            offset: [-4, 0]\n        },\n        right: {\n            points: ['cl', 'cr'],\n            offset: [4, 0]\n        },\n        top: {\n            points: ['bc', 'tc'],\n            offset: [0, -4]\n        },\n        bottom: {\n            points: ['tc', 'bc'],\n            offset: [0, 4]\n        },\n        topLeft: {\n            points: ['bl', 'tc'],\n            offset: [-(horizontalArrowShift + arrowWidth), -4]\n        },\n        leftTop: {\n            points: ['tr', 'cl'],\n            offset: [-4, -(verticalArrowShift + arrowWidth)]\n        },\n        topRight: {\n            points: ['br', 'tc'],\n            offset: [horizontalArrowShift + arrowWidth, -4]\n        },\n        rightTop: {\n            points: ['tl', 'cr'],\n            offset: [4, -(verticalArrowShift + arrowWidth)]\n        },\n        bottomRight: {\n            points: ['tr', 'bc'],\n            offset: [horizontalArrowShift + arrowWidth, 4]\n        },\n        rightBottom: {\n            points: ['bl', 'cr'],\n            offset: [4, verticalArrowShift + arrowWidth]\n        },\n        bottomLeft: {\n            points: ['tl', 'bc'],\n            offset: [-(horizontalArrowShift + arrowWidth), 4]\n        },\n        leftBottom: {\n            points: ['br', 'cl'],\n            offset: [-4, verticalArrowShift + arrowWidth]\n        }\n    };\n    Object.keys(placementMap).forEach(function (key) {\n        placementMap[key] = config.arrowPointAtCenter ? (0, _extends3['default'])({}, placementMap[key], { overflow: getOverflowOptions(autoAdjustOverflow), targetOffset: targetOffset }) : (0, _extends3['default'])({}, _placements.placements[key], { overflow: getOverflowOptions(autoAdjustOverflow) });\n    });\n    return placementMap;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$rc_tooltip$lib$placements","~$shadow.js","~$module$node_modules$babel_runtime$helpers$extends"]],"~:properties",["^5",["right","leftTop","top","bottomRight","offset","topLeft","points","__esModule","topRight","bottomLeft","rightBottom","targetOffset","rightTop","adjustY","value","adjustX","getOverflowOptions","overflow","bottom","default","left","leftBottom"]],"~:compiled-at",1532351402044,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$antd$lib$tooltip$placements.js\",\n\"lineCount\":6,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/antd/lib/tooltip/placements.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$antd$lib$tooltip$placements\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\n\\nvar _extends2 = require('babel-runtime/helpers/extends');\\n\\nvar _extends3 = _interopRequireDefault(_extends2);\\n\\nexports.getOverflowOptions = getOverflowOptions;\\nexports['default'] = getPlacements;\\n\\nvar _placements = require('rc-tooltip/lib/placements');\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\\n\\nvar autoAdjustOverflowEnabled = {\\n    adjustX: 1,\\n    adjustY: 1\\n};\\nvar autoAdjustOverflowDisabled = {\\n    adjustX: 0,\\n    adjustY: 0\\n};\\nvar targetOffset = [0, 0];\\nfunction getOverflowOptions(autoAdjustOverflow) {\\n    if (typeof autoAdjustOverflow === 'boolean') {\\n        return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\\n    }\\n    return (0, _extends3['default'])({}, autoAdjustOverflowDisabled, autoAdjustOverflow);\\n}\\nfunction getPlacements() {\\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\\n    var _config$arrowWidth = config.arrowWidth,\\n        arrowWidth = _config$arrowWidth === undefined ? 5 : _config$arrowWidth,\\n        _config$horizontalArr = config.horizontalArrowShift,\\n        horizontalArrowShift = _config$horizontalArr === undefined ? 16 : _config$horizontalArr,\\n        _config$verticalArrow = config.verticalArrowShift,\\n        verticalArrowShift = _config$verticalArrow === undefined ? 12 : _config$verticalArrow,\\n        _config$autoAdjustOve = config.autoAdjustOverflow,\\n        autoAdjustOverflow = _config$autoAdjustOve === undefined ? true : _config$autoAdjustOve;\\n\\n    var placementMap = {\\n        left: {\\n            points: ['cr', 'cl'],\\n            offset: [-4, 0]\\n        },\\n        right: {\\n            points: ['cl', 'cr'],\\n            offset: [4, 0]\\n        },\\n        top: {\\n            points: ['bc', 'tc'],\\n            offset: [0, -4]\\n        },\\n        bottom: {\\n            points: ['tc', 'bc'],\\n            offset: [0, 4]\\n        },\\n        topLeft: {\\n            points: ['bl', 'tc'],\\n            offset: [-(horizontalArrowShift + arrowWidth), -4]\\n        },\\n        leftTop: {\\n            points: ['tr', 'cl'],\\n            offset: [-4, -(verticalArrowShift + arrowWidth)]\\n        },\\n        topRight: {\\n            points: ['br', 'tc'],\\n            offset: [horizontalArrowShift + arrowWidth, -4]\\n        },\\n        rightTop: {\\n            points: ['tl', 'cr'],\\n            offset: [4, -(verticalArrowShift + arrowWidth)]\\n        },\\n        bottomRight: {\\n            points: ['tr', 'bc'],\\n            offset: [horizontalArrowShift + arrowWidth, 4]\\n        },\\n        rightBottom: {\\n            points: ['bl', 'cr'],\\n            offset: [4, verticalArrowShift + arrowWidth]\\n        },\\n        bottomLeft: {\\n            points: ['tl', 'bc'],\\n            offset: [-(horizontalArrowShift + arrowWidth), 4]\\n        },\\n        leftBottom: {\\n            points: ['br', 'cl'],\\n            offset: [-4, verticalArrowShift + arrowWidth]\\n        }\\n    };\\n    Object.keys(placementMap).forEach(function (key) {\\n        placementMap[key] = config.arrowPointAtCenter ? (0, _extends3['default'])({}, placementMap[key], { overflow: getOverflowOptions(autoAdjustOverflow), targetOffset: targetOffset }) : (0, _extends3['default'])({}, _placements.placements[key], { overflow: getOverflowOptions(autoAdjustOverflow) });\\n    });\\n    return placementMap;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"getOverflowOptions\",\"autoAdjustOverflow\",\"autoAdjustOverflowEnabled\",\"autoAdjustOverflowDisabled\",\"_extends3\",\"Object\",\"defineProperty\",\"value\",\"_extends2\",\"__esModule\",\"getPlacements\",\"config\",\"arguments\",\"length\",\"undefined\",\"_config$arrowWidth\",\"arrowWidth\",\"_config$horizontalArr\",\"horizontalArrowShift\",\"_config$verticalArrow\",\"verticalArrowShift\",\"_config$autoAdjustOve\",\"placementMap\",\"left\",\"points\",\"offset\",\"right\",\"top\",\"bottom\",\"topLeft\",\"leftTop\",\"topRight\",\"rightTop\",\"bottomRight\",\"rightBottom\",\"bottomLeft\",\"leftBottom\",\"keys\",\"forEach\",\"key\",\"arrowPointAtCenter\",\"overflow\",\"targetOffset\",\"_placements\",\"placements\",\"adjustX\",\"adjustY\"]\n}\n"]