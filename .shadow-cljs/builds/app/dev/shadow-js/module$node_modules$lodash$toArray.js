["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/toArray.js"],"~:js","shadow$provide.module$node_modules$lodash$toArray=function(global,process,require,module,exports,shadow$shims){global=require(\"module$node_modules$lodash$_Symbol\");var copyArray=require(\"module$node_modules$lodash$_copyArray\"),getTag=require(\"module$node_modules$lodash$_getTag\"),isArrayLike=require(\"module$node_modules$lodash$isArrayLike\"),isString=require(\"module$node_modules$lodash$isString\"),iteratorToArray=require(\"module$node_modules$lodash$_iteratorToArray\"),mapToArray=require(\"module$node_modules$lodash$_mapToArray\"),\nsetToArray=require(\"module$node_modules$lodash$_setToArray\"),stringToArray=require(\"module$node_modules$lodash$_stringToArray\"),values=require(\"module$node_modules$lodash$values\"),symIterator=global?global.iterator:void 0;module.exports=function(value){if(!value)return[];if(isArrayLike(value))return isString(value)?stringToArray(value):copyArray(value);if(symIterator&&value[symIterator])return iteratorToArray(value[symIterator]());var tag=getTag(value);return(\"[object Map]\"==tag?mapToArray:\"[object Set]\"==\ntag?setToArray:values)(value)}}","~:source","shadow$provide[\"module$node_modules$lodash$toArray\"] = function(global,process,require,module,exports,shadow$shims) {\nvar Symbol = require('./_Symbol'),\n    copyArray = require('./_copyArray'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    iteratorToArray = require('./_iteratorToArray'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray'),\n    stringToArray = require('./_stringToArray'),\n    values = require('./values');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nmodule.exports = toArray;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_getTag","~$module$node_modules$lodash$isArrayLike","~$module$node_modules$lodash$_mapToArray","~$shadow.js","~$module$node_modules$lodash$_setToArray","~$module$node_modules$lodash$isString","~$module$node_modules$lodash$_iteratorToArray","~$module$node_modules$lodash$values","~$module$node_modules$lodash$_Symbol","~$module$node_modules$lodash$_copyArray","~$module$node_modules$lodash$_stringToArray"]],"~:properties",["^5",[]],"~:compiled-at",1532351402160,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$toArray.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAChHC,MAAAA,CAASJ,OAAA,CAAQ,oCAAR,CADuG,KAEhHK,UAAYL,OAAA,CAAQ,uCAAR,CAFoG,CAGhHM,OAASN,OAAA,CAAQ,oCAAR,CAHuG,CAIhHO,YAAcP,OAAA,CAAQ,wCAAR,CAJkG,CAKhHQ,SAAWR,OAAA,CAAQ,qCAAR,CALqG,CAMhHS,gBAAkBT,OAAA,CAAQ,6CAAR,CAN8F,CAOhHU,WAAaV,OAAA,CAAQ,wCAAR,CAPmG;AAQhHW,WAAaX,OAAA,CAAQ,wCAAR,CARmG,CAShHY,cAAgBZ,OAAA,CAAQ,2CAAR,CATgG,CAUhHa,OAASb,OAAA,CAAQ,mCAAR,CAVuG,CAiBhHc,YAAcV,MAAA,CAASA,MAAAW,SAAT,CAA2BC,IAAAA,EAyC7Cf,OAAAC,QAAA,CAhBAe,QAAgB,CAACC,KAAD,CAAQ,CACtB,GAAI,CAACA,KAAL,CACE,MAAO,EAET,IAAIX,WAAA,CAAYW,KAAZ,CAAJ,CACE,MAAOV,SAAA,CAASU,KAAT,CAAA,CAAkBN,aAAA,CAAcM,KAAd,CAAlB,CAAyCb,SAAA,CAAUa,KAAV,CAElD,IAAIJ,WAAJ,EAAmBI,KAAA,CAAMJ,WAAN,CAAnB,CACE,MAAOL,gBAAA,CAAgBS,KAAA,CAAMJ,WAAN,CAAA,EAAhB,CARa,KAUlBK,IAAMb,MAAA,CAAOY,KAAP,CAGV,OAAO,CA1CIE,cAwCAC,EAAAF,GAAAE,CAAgBX,UAAhBW,CAvCAC,cAuC8B;AAAAH,GAAA,CAAgBR,UAAhB,CAA6BE,MAE/D,EAAKK,KAAL,CAbe,CA1C4F;\",\n\"sources\":[\"node_modules/lodash/toArray.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$toArray\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar Symbol = require('./_Symbol'),\\n    copyArray = require('./_copyArray'),\\n    getTag = require('./_getTag'),\\n    isArrayLike = require('./isArrayLike'),\\n    isString = require('./isString'),\\n    iteratorToArray = require('./_iteratorToArray'),\\n    mapToArray = require('./_mapToArray'),\\n    setToArray = require('./_setToArray'),\\n    stringToArray = require('./_stringToArray'),\\n    values = require('./values');\\n\\n/** `Object#toString` result references. */\\nvar mapTag = '[object Map]',\\n    setTag = '[object Set]';\\n\\n/** Built-in value references. */\\nvar symIterator = Symbol ? Symbol.iterator : undefined;\\n\\n/**\\n * Converts `value` to an array.\\n *\\n * @static\\n * @since 0.1.0\\n * @memberOf _\\n * @category Lang\\n * @param {*} value The value to convert.\\n * @returns {Array} Returns the converted array.\\n * @example\\n *\\n * _.toArray({ 'a': 1, 'b': 2 });\\n * // => [1, 2]\\n *\\n * _.toArray('abc');\\n * // => ['a', 'b', 'c']\\n *\\n * _.toArray(1);\\n * // => []\\n *\\n * _.toArray(null);\\n * // => []\\n */\\nfunction toArray(value) {\\n  if (!value) {\\n    return [];\\n  }\\n  if (isArrayLike(value)) {\\n    return isString(value) ? stringToArray(value) : copyArray(value);\\n  }\\n  if (symIterator && value[symIterator]) {\\n    return iteratorToArray(value[symIterator]());\\n  }\\n  var tag = getTag(value),\\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\\n\\n  return func(value);\\n}\\n\\nmodule.exports = toArray;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Symbol\",\"copyArray\",\"getTag\",\"isArrayLike\",\"isString\",\"iteratorToArray\",\"mapToArray\",\"setToArray\",\"stringToArray\",\"values\",\"symIterator\",\"iterator\",\"undefined\",\"toArray\",\"value\",\"tag\",\"mapTag\",\"func\",\"setTag\"]\n}\n"]