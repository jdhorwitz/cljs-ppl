["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/joinClasses.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$joinClasses=function(global,process,require,module,exports,shadow$shims){module.exports=function(className){className||(className=\"\");var nextClass,argLength=arguments.length;if(1<argLength)for(var ii=1;ii<argLength;ii++)(nextClass=arguments[ii])&&(className=(className?className+\" \":\"\")+nextClass);return className}}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$joinClasses\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Combines multiple className strings into one.\n * http://jsperf.com/joinclasses-args-vs-array\n *\n * @param {...?string} className\n * @return {string}\n */\n\nfunction joinClasses(className /*, ... */) {\n  if (!className) {\n    className = '';\n  }\n  var nextClass = void 0;\n  var argLength = arguments.length;\n  if (argLength > 1) {\n    for (var ii = 1; ii < argLength; ii++) {\n      nextClass = arguments[ii];\n      if (nextClass) {\n        className = (className ? className + ' ' : '') + nextClass;\n      }\n    }\n  }\n  return className;\n}\n\nmodule.exports = joinClasses;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1532351402141,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$joinClasses.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,yCAAA,CAA6D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAqC1HF,MAAAC,QAAA,CAjBAE,QAAoB,CAACC,SAAD,CAAuB,CACpCA,SAAL,GACEA,SADF,CACc,EADd,CAGA,KAAIC,SAAJ,CACIC,UAAYC,SAAAC,OAChB,IAAgB,CAAhB,CAAIF,SAAJ,CACE,IAAK,IAAIG,GAAK,CAAd,CAAiBA,EAAjB,CAAsBH,SAAtB,CAAiCG,EAAA,EAAjC,CAEE,CADAJ,SACA,CADYE,SAAA,CAAUE,EAAV,CACZ,IACEL,SADF,EACeA,SAAA,CAAYA,SAAZ,CAAwB,GAAxB,CAA8B,EAD7C,EACmDC,SADnD,CAKJ,OAAOD,UAdkC,CApB+E;\",\n\"sources\":[\"node_modules/fbjs/lib/joinClasses.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$joinClasses\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks static-only\\n */\\n\\n'use strict';\\n\\n/**\\n * Combines multiple className strings into one.\\n * http://jsperf.com/joinclasses-args-vs-array\\n *\\n * @param {...?string} className\\n * @return {string}\\n */\\n\\nfunction joinClasses(className /*, ... */) {\\n  if (!className) {\\n    className = '';\\n  }\\n  var nextClass = void 0;\\n  var argLength = arguments.length;\\n  if (argLength > 1) {\\n    for (var ii = 1; ii < argLength; ii++) {\\n      nextClass = arguments[ii];\\n      if (nextClass) {\\n        className = (className ? className + ' ' : '') + nextClass;\\n      }\\n    }\\n  }\\n  return className;\\n}\\n\\nmodule.exports = joinClasses;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"joinClasses\",\"className\",\"nextClass\",\"argLength\",\"arguments\",\"length\",\"ii\"]\n}\n"]