["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/DraftEditorLeaf.react.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$DraftEditorLeaf_react=function(global,process,require,module,exports,shadow$shims){function _inherits(subClass,superClass){if(\"function\"!==typeof superClass&&null!==superClass)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:!1,writable:!0,configurable:!0}});superClass&&(Object.setPrototypeOf?Object.setPrototypeOf(subClass,\nsuperClass):subClass.__proto__=superClass)}var _assign=require(\"module$node_modules$object_assign$index\"),DraftEditorTextNode=require(\"module$node_modules$draft_js$lib$DraftEditorTextNode_react\"),React=require(\"module$node_modules$react$index\"),ReactDOM=require(\"module$node_modules$react_dom$index\"),invariant=require(\"module$node_modules$fbjs$lib$invariant\"),setDraftEditorSelection=require(\"module$node_modules$draft_js$lib$setDraftEditorSelection\");global=function(_React$Component){function DraftEditorLeaf(){if(!(this instanceof\nDraftEditorLeaf))throw new TypeError(\"Cannot call a class as a function\");var call=_React$Component.apply(this,arguments);if(!this)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!call||\"object\"!==typeof call&&\"function\"!==typeof call?this:call}_inherits(DraftEditorLeaf,_React$Component);DraftEditorLeaf.prototype._setSelection=function(){var selection=this.props.selection;if(null!=selection&&selection.getHasFocus()){var _props=this.props,start=_props.start,\ntext=_props.text;_props=_props.block.getKey();text=start+text.length;if(selection.hasEdgeWithin(_props,start,text)){var node=ReactDOM.findDOMNode(this);node?void 0:invariant(!1,\"Missing node\");var child=node.firstChild;child?void 0:invariant(!1,\"Missing child\");child.nodeType===Node.TEXT_NODE?node=child:\"BR\"!==child.tagName&&((node=child.firstChild)?void 0:invariant(!1,\"Missing targetNode\"));setDraftEditorSelection(selection,node,_props,start,text)}}};DraftEditorLeaf.prototype.shouldComponentUpdate=\nfunction(nextProps){var leafNode=ReactDOM.findDOMNode(this.leaf);leafNode?void 0:invariant(!1,\"Missing leafNode\");return leafNode.textContent!==nextProps.text||nextProps.styleSet!==this.props.styleSet||nextProps.forceSelection};DraftEditorLeaf.prototype.componentDidUpdate=function(){this._setSelection()};DraftEditorLeaf.prototype.componentDidMount=function(){this._setSelection()};DraftEditorLeaf.prototype.render=function(){var _this2=this,block=this.props.block,text=this.props.text;text.endsWith(\"\\n\")&&\nthis.props.isLast&&(text+=\"\\n\");var _props2=this.props,customStyleMap=_props2.customStyleMap,customStyleFn=_props2.customStyleFn,offsetKey=_props2.offsetKey,styleSet=_props2.styleSet;_props2=styleSet.reduce(function(map,styleName){var mergedStyles={};styleName=customStyleMap[styleName];void 0!==styleName&&map.textDecoration!==styleName.textDecoration&&(mergedStyles.textDecoration=[map.textDecoration,styleName.textDecoration].join(\" \").trim());return _assign(map,styleName,mergedStyles)},{});customStyleFn&&\n(block=customStyleFn(styleSet,block),_props2=_assign(_props2,block));return React.createElement(\"span\",{\"data-offset-key\":offsetKey,ref:function(_ref){return _this2.leaf=_ref},style:_props2},React.createElement(DraftEditorTextNode,null,text))};return DraftEditorLeaf}(React.Component);module.exports=global}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$DraftEditorLeaf_react\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEditorLeaf.react\n * @format\n * \n */\n\n'use strict';\n\nvar _assign = require('object-assign');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DraftEditorTextNode = require('./DraftEditorTextNode.react');\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar invariant = require('fbjs/lib/invariant');\nvar setDraftEditorSelection = require('./setDraftEditorSelection');\n\n/**\n * All leaf nodes in the editor are spans with single text nodes. Leaf\n * elements are styled based on the merging of an optional custom style map\n * and a default style map.\n *\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\n * DOM Selection API. In this way, top-level components can declaratively\n * maintain the selection state.\n */\nvar DraftEditorLeaf = function (_React$Component) {\n  _inherits(DraftEditorLeaf, _React$Component);\n\n  function DraftEditorLeaf() {\n    _classCallCheck(this, DraftEditorLeaf);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  DraftEditorLeaf.prototype._setSelection = function _setSelection() {\n    var selection = this.props.selection;\n\n    // If selection state is irrelevant to the parent block, no-op.\n\n    if (selection == null || !selection.getHasFocus()) {\n      return;\n    }\n\n    var _props = this.props,\n        block = _props.block,\n        start = _props.start,\n        text = _props.text;\n\n    var blockKey = block.getKey();\n    var end = start + text.length;\n    if (!selection.hasEdgeWithin(blockKey, start, end)) {\n      return;\n    }\n\n    // Determine the appropriate target node for selection. If the child\n    // is not a text node, it is a <br /> spacer. In this case, use the\n    // <span> itself as the selection target.\n    var node = ReactDOM.findDOMNode(this);\n    !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing node') : invariant(false) : void 0;\n    var child = node.firstChild;\n    !child ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing child') : invariant(false) : void 0;\n    var targetNode = void 0;\n\n    if (child.nodeType === Node.TEXT_NODE) {\n      targetNode = child;\n    } else if (child.tagName === 'BR') {\n      targetNode = node;\n    } else {\n      targetNode = child.firstChild;\n      !targetNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing targetNode') : invariant(false) : void 0;\n    }\n\n    setDraftEditorSelection(selection, targetNode, blockKey, start, end);\n  };\n  /**\n   * By making individual leaf instances aware of their context within\n   * the text of the editor, we can set our selection range more\n   * easily than we could in the non-React world.\n   *\n   * Note that this depends on our maintaining tight control over the\n   * DOM structure of the DraftEditor component. If leaves had multiple\n   * text nodes, this would be harder.\n   */\n\n  DraftEditorLeaf.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var leafNode = ReactDOM.findDOMNode(this.leaf);\n    !leafNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing leafNode') : invariant(false) : void 0;\n    return leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\n  };\n\n  DraftEditorLeaf.prototype.componentDidUpdate = function componentDidUpdate() {\n    this._setSelection();\n  };\n\n  DraftEditorLeaf.prototype.componentDidMount = function componentDidMount() {\n    this._setSelection();\n  };\n\n  DraftEditorLeaf.prototype.render = function render() {\n    var _this2 = this;\n\n    var block = this.props.block;\n    var text = this.props.text;\n\n    // If the leaf is at the end of its block and ends in a soft newline, append\n    // an extra line feed character. Browsers collapse trailing newline\n    // characters, which leaves the cursor in the wrong place after a\n    // shift+enter. The extra character repairs this.\n\n    if (text.endsWith('\\n') && this.props.isLast) {\n      text += '\\n';\n    }\n\n    var _props2 = this.props,\n        customStyleMap = _props2.customStyleMap,\n        customStyleFn = _props2.customStyleFn,\n        offsetKey = _props2.offsetKey,\n        styleSet = _props2.styleSet;\n\n    var styleObj = styleSet.reduce(function (map, styleName) {\n      var mergedStyles = {};\n      var style = customStyleMap[styleName];\n\n      if (style !== undefined && map.textDecoration !== style.textDecoration) {\n        // .trim() is necessary for IE9/10/11 and Edge\n        mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\n      }\n\n      return _assign(map, style, mergedStyles);\n    }, {});\n\n    if (customStyleFn) {\n      var newStyles = customStyleFn(styleSet, block);\n      styleObj = _assign(styleObj, newStyles);\n    }\n\n    return React.createElement(\n      'span',\n      {\n        'data-offset-key': offsetKey,\n        ref: function ref(_ref) {\n          return _this2.leaf = _ref;\n        },\n        style: styleObj },\n      React.createElement(\n        DraftEditorTextNode,\n        null,\n        text\n      )\n    );\n  };\n\n  return DraftEditorLeaf;\n}(React.Component);\n\nmodule.exports = DraftEditorLeaf;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$draft_js$lib$DraftEditorTextNode_react","~$module$node_modules$draft_js$lib$setDraftEditorSelection","~$module$node_modules$object_assign$index","~$module$node_modules$react_dom$index","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$fbjs$lib$invariant"]],"~:properties",["^5",["textDecoration","prototype","_setSelection","configurable","style","value","leaf","enumerable","componentDidUpdate","writable","componentDidMount","shouldComponentUpdate","render","ref","__proto__","constructor"]],"~:compiled-at",1532351402139,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$DraftEditorLeaf_react.js\",\n\"lineCount\":7,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/draft-js/lib/DraftEditorLeaf.react.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$DraftEditorLeaf_react\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DraftEditorLeaf.react\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar _assign = require('object-assign');\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\"); } return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self; }\\n\\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \\\"function\\\" && superClass !== null) { throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\\n\\nvar DraftEditorTextNode = require('./DraftEditorTextNode.react');\\nvar React = require('react');\\nvar ReactDOM = require('react-dom');\\n\\nvar invariant = require('fbjs/lib/invariant');\\nvar setDraftEditorSelection = require('./setDraftEditorSelection');\\n\\n/**\\n * All leaf nodes in the editor are spans with single text nodes. Leaf\\n * elements are styled based on the merging of an optional custom style map\\n * and a default style map.\\n *\\n * `DraftEditorLeaf` also provides a wrapper for calling into the imperative\\n * DOM Selection API. In this way, top-level components can declaratively\\n * maintain the selection state.\\n */\\nvar DraftEditorLeaf = function (_React$Component) {\\n  _inherits(DraftEditorLeaf, _React$Component);\\n\\n  function DraftEditorLeaf() {\\n    _classCallCheck(this, DraftEditorLeaf);\\n\\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\\n  }\\n\\n  DraftEditorLeaf.prototype._setSelection = function _setSelection() {\\n    var selection = this.props.selection;\\n\\n    // If selection state is irrelevant to the parent block, no-op.\\n\\n    if (selection == null || !selection.getHasFocus()) {\\n      return;\\n    }\\n\\n    var _props = this.props,\\n        block = _props.block,\\n        start = _props.start,\\n        text = _props.text;\\n\\n    var blockKey = block.getKey();\\n    var end = start + text.length;\\n    if (!selection.hasEdgeWithin(blockKey, start, end)) {\\n      return;\\n    }\\n\\n    // Determine the appropriate target node for selection. If the child\\n    // is not a text node, it is a <br /> spacer. In this case, use the\\n    // <span> itself as the selection target.\\n    var node = ReactDOM.findDOMNode(this);\\n    !node ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing node') : invariant(false) : void 0;\\n    var child = node.firstChild;\\n    !child ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing child') : invariant(false) : void 0;\\n    var targetNode = void 0;\\n\\n    if (child.nodeType === Node.TEXT_NODE) {\\n      targetNode = child;\\n    } else if (child.tagName === 'BR') {\\n      targetNode = node;\\n    } else {\\n      targetNode = child.firstChild;\\n      !targetNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing targetNode') : invariant(false) : void 0;\\n    }\\n\\n    setDraftEditorSelection(selection, targetNode, blockKey, start, end);\\n  };\\n  /**\\n   * By making individual leaf instances aware of their context within\\n   * the text of the editor, we can set our selection range more\\n   * easily than we could in the non-React world.\\n   *\\n   * Note that this depends on our maintaining tight control over the\\n   * DOM structure of the DraftEditor component. If leaves had multiple\\n   * text nodes, this would be harder.\\n   */\\n\\n  DraftEditorLeaf.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\\n    var leafNode = ReactDOM.findDOMNode(this.leaf);\\n    !leafNode ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Missing leafNode') : invariant(false) : void 0;\\n    return leafNode.textContent !== nextProps.text || nextProps.styleSet !== this.props.styleSet || nextProps.forceSelection;\\n  };\\n\\n  DraftEditorLeaf.prototype.componentDidUpdate = function componentDidUpdate() {\\n    this._setSelection();\\n  };\\n\\n  DraftEditorLeaf.prototype.componentDidMount = function componentDidMount() {\\n    this._setSelection();\\n  };\\n\\n  DraftEditorLeaf.prototype.render = function render() {\\n    var _this2 = this;\\n\\n    var block = this.props.block;\\n    var text = this.props.text;\\n\\n    // If the leaf is at the end of its block and ends in a soft newline, append\\n    // an extra line feed character. Browsers collapse trailing newline\\n    // characters, which leaves the cursor in the wrong place after a\\n    // shift+enter. The extra character repairs this.\\n\\n    if (text.endsWith('\\\\n') && this.props.isLast) {\\n      text += '\\\\n';\\n    }\\n\\n    var _props2 = this.props,\\n        customStyleMap = _props2.customStyleMap,\\n        customStyleFn = _props2.customStyleFn,\\n        offsetKey = _props2.offsetKey,\\n        styleSet = _props2.styleSet;\\n\\n    var styleObj = styleSet.reduce(function (map, styleName) {\\n      var mergedStyles = {};\\n      var style = customStyleMap[styleName];\\n\\n      if (style !== undefined && map.textDecoration !== style.textDecoration) {\\n        // .trim() is necessary for IE9/10/11 and Edge\\n        mergedStyles.textDecoration = [map.textDecoration, style.textDecoration].join(' ').trim();\\n      }\\n\\n      return _assign(map, style, mergedStyles);\\n    }, {});\\n\\n    if (customStyleFn) {\\n      var newStyles = customStyleFn(styleSet, block);\\n      styleObj = _assign(styleObj, newStyles);\\n    }\\n\\n    return React.createElement(\\n      'span',\\n      {\\n        'data-offset-key': offsetKey,\\n        ref: function ref(_ref) {\\n          return _this2.leaf = _ref;\\n        },\\n        style: styleObj },\\n      React.createElement(\\n        DraftEditorTextNode,\\n        null,\\n        text\\n      )\\n    );\\n  };\\n\\n  return DraftEditorLeaf;\\n}(React.Component);\\n\\nmodule.exports = DraftEditorLeaf;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_inherits\",\"subClass\",\"superClass\",\"TypeError\",\"prototype\",\"Object\",\"create\",\"constructor\",\"value\",\"enumerable\",\"writable\",\"configurable\",\"setPrototypeOf\",\"__proto__\",\"_assign\",\"DraftEditorTextNode\",\"React\",\"ReactDOM\",\"invariant\",\"setDraftEditorSelection\",\"DraftEditorLeaf\",\"_React$Component\",\"instance\",\"apply\",\"arguments\",\"self\",\"ReferenceError\",\"call\",\"_setSelection\",\"DraftEditorLeaf.prototype._setSelection\",\"selection\",\"props\",\"getHasFocus\",\"_props\",\"start\",\"text\",\"blockKey\",\"block\",\"getKey\",\"end\",\"length\",\"hasEdgeWithin\",\"node\",\"findDOMNode\",\"child\",\"firstChild\",\"nodeType\",\"Node\",\"TEXT_NODE\",\"targetNode\",\"tagName\",\"shouldComponentUpdate\",\"DraftEditorLeaf.prototype.shouldComponentUpdate\",\"nextProps\",\"leafNode\",\"leaf\",\"textContent\",\"styleSet\",\"forceSelection\",\"componentDidUpdate\",\"DraftEditorLeaf.prototype.componentDidUpdate\",\"componentDidMount\",\"DraftEditorLeaf.prototype.componentDidMount\",\"render\",\"DraftEditorLeaf.prototype.render\",\"_this2\",\"endsWith\",\"isLast\",\"_props2\",\"customStyleMap\",\"customStyleFn\",\"offsetKey\",\"styleObj\",\"reduce\",\"map\",\"styleName\",\"mergedStyles\",\"style\",\"undefined\",\"textDecoration\",\"join\",\"trim\",\"newStyles\",\"createElement\",\"ref\",\"_ref\",\"Component\"]\n}\n"]