["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/component-classes/index.js"],"~:js","shadow$provide.module$node_modules$component_classes$index=function(global,process,require,module,exports,shadow$shims){function ClassList(el){if(!el||!el.nodeType)throw Error(\"A DOM element reference is required\");this.el=el;this.list=el.classList}try{var index=require(\"module$node_modules$component_indexof$index\")}catch(err){index=require(\"module$node_modules$component_indexof$index\")}var re=/\\s+/,toString=Object.prototype.toString;module.exports=function(el){return new ClassList(el)};ClassList.prototype.add=\nfunction(name){if(this.list)return this.list.add(name),this;var arr=this.array();~index(arr,name)||arr.push(name);this.el.className=arr.join(\" \");return this};ClassList.prototype.remove=function(name){if(\"[object RegExp]\"==toString.call(name))return this.removeMatching(name);if(this.list)return this.list.remove(name),this;var arr=this.array();name=index(arr,name);~name&&arr.splice(name,1);this.el.className=arr.join(\" \");return this};ClassList.prototype.removeMatching=function(re){for(var arr=this.array(),\ni=0;i<arr.length;i++)re.test(arr[i])&&this.remove(arr[i]);return this};ClassList.prototype.toggle=function(name,force){if(this.list)return\"undefined\"!==typeof force?force!==this.list.toggle(name,force)&&this.list.toggle(name):this.list.toggle(name),this;\"undefined\"!==typeof force?force?this.add(name):this.remove(name):this.has(name)?this.remove(name):this.add(name);return this};ClassList.prototype.array=function(){var arr=(this.el.getAttribute(\"class\")||\"\").replace(/^\\s+|\\s+$/g,\"\").split(re);\"\"===\narr[0]&&arr.shift();return arr};ClassList.prototype.has=ClassList.prototype.contains=function(name){return this.list?this.list.contains(name):!!~index(this.array(),name)}}","~:source","shadow$provide[\"module$node_modules$component_classes$index\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Module dependencies.\n */\n\ntry {\n  var index = require('indexof');\n} catch (err) {\n  var index = require('component-indexof');\n}\n\n/**\n * Whitespace regexp.\n */\n\nvar re = /\\s+/;\n\n/**\n * toString reference.\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Wrap `el` in a `ClassList`.\n *\n * @param {Element} el\n * @return {ClassList}\n * @api public\n */\n\nmodule.exports = function(el){\n  return new ClassList(el);\n};\n\n/**\n * Initialize a new ClassList for `el`.\n *\n * @param {Element} el\n * @api private\n */\n\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\n * Add class `name` if not already present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.add = function(name){\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) arr.push(name);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove class `name` when present, or\n * pass a regular expression to remove\n * any which match.\n *\n * @param {String|RegExp} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.remove = function(name){\n  if ('[object RegExp]' == toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) arr.splice(i, 1);\n  this.el.className = arr.join(' ');\n  return this;\n};\n\n/**\n * Remove all classes matching `re`.\n *\n * @param {RegExp} re\n * @return {ClassList}\n * @api private\n */\n\nClassList.prototype.removeMatching = function(re){\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\n * Toggle class `name`, can force state via `force`.\n *\n * For browsers that support classList, but do not support `force` yet,\n * the mistake will be detected and corrected.\n *\n * @param {String} name\n * @param {Boolean} force\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.toggle = function(name, force){\n  // classList\n  if (this.list) {\n    if (\"undefined\" !== typeof force) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (\"undefined\" !== typeof force) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return an array of classes.\n *\n * @return {Array}\n * @api public\n */\n\nClassList.prototype.array = function(){\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) arr.shift();\n  return arr;\n};\n\n/**\n * Check if class `name` is present.\n *\n * @param {String} name\n * @return {ClassList}\n * @api public\n */\n\nClassList.prototype.has =\nClassList.prototype.contains = function(name){\n  return this.list\n    ? this.list.contains(name)\n    : !! ~index(this.array(), name);\n};\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$component_indexof$index"]],"~:properties",["^5",["list","className","el","contains","removeMatching","remove","toggle","add","has","array"]],"~:compiled-at",1532351401778,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$component_classes$index.js\",\n\"lineCount\":4,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/component-classes/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$component_classes$index\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Module dependencies.\\n */\\n\\ntry {\\n  var index = require('indexof');\\n} catch (err) {\\n  var index = require('component-indexof');\\n}\\n\\n/**\\n * Whitespace regexp.\\n */\\n\\nvar re = /\\\\s+/;\\n\\n/**\\n * toString reference.\\n */\\n\\nvar toString = Object.prototype.toString;\\n\\n/**\\n * Wrap `el` in a `ClassList`.\\n *\\n * @param {Element} el\\n * @return {ClassList}\\n * @api public\\n */\\n\\nmodule.exports = function(el){\\n  return new ClassList(el);\\n};\\n\\n/**\\n * Initialize a new ClassList for `el`.\\n *\\n * @param {Element} el\\n * @api private\\n */\\n\\nfunction ClassList(el) {\\n  if (!el || !el.nodeType) {\\n    throw new Error('A DOM element reference is required');\\n  }\\n  this.el = el;\\n  this.list = el.classList;\\n}\\n\\n/**\\n * Add class `name` if not already present.\\n *\\n * @param {String} name\\n * @return {ClassList}\\n * @api public\\n */\\n\\nClassList.prototype.add = function(name){\\n  // classList\\n  if (this.list) {\\n    this.list.add(name);\\n    return this;\\n  }\\n\\n  // fallback\\n  var arr = this.array();\\n  var i = index(arr, name);\\n  if (!~i) arr.push(name);\\n  this.el.className = arr.join(' ');\\n  return this;\\n};\\n\\n/**\\n * Remove class `name` when present, or\\n * pass a regular expression to remove\\n * any which match.\\n *\\n * @param {String|RegExp} name\\n * @return {ClassList}\\n * @api public\\n */\\n\\nClassList.prototype.remove = function(name){\\n  if ('[object RegExp]' == toString.call(name)) {\\n    return this.removeMatching(name);\\n  }\\n\\n  // classList\\n  if (this.list) {\\n    this.list.remove(name);\\n    return this;\\n  }\\n\\n  // fallback\\n  var arr = this.array();\\n  var i = index(arr, name);\\n  if (~i) arr.splice(i, 1);\\n  this.el.className = arr.join(' ');\\n  return this;\\n};\\n\\n/**\\n * Remove all classes matching `re`.\\n *\\n * @param {RegExp} re\\n * @return {ClassList}\\n * @api private\\n */\\n\\nClassList.prototype.removeMatching = function(re){\\n  var arr = this.array();\\n  for (var i = 0; i < arr.length; i++) {\\n    if (re.test(arr[i])) {\\n      this.remove(arr[i]);\\n    }\\n  }\\n  return this;\\n};\\n\\n/**\\n * Toggle class `name`, can force state via `force`.\\n *\\n * For browsers that support classList, but do not support `force` yet,\\n * the mistake will be detected and corrected.\\n *\\n * @param {String} name\\n * @param {Boolean} force\\n * @return {ClassList}\\n * @api public\\n */\\n\\nClassList.prototype.toggle = function(name, force){\\n  // classList\\n  if (this.list) {\\n    if (\\\"undefined\\\" !== typeof force) {\\n      if (force !== this.list.toggle(name, force)) {\\n        this.list.toggle(name); // toggle again to correct\\n      }\\n    } else {\\n      this.list.toggle(name);\\n    }\\n    return this;\\n  }\\n\\n  // fallback\\n  if (\\\"undefined\\\" !== typeof force) {\\n    if (!force) {\\n      this.remove(name);\\n    } else {\\n      this.add(name);\\n    }\\n  } else {\\n    if (this.has(name)) {\\n      this.remove(name);\\n    } else {\\n      this.add(name);\\n    }\\n  }\\n\\n  return this;\\n};\\n\\n/**\\n * Return an array of classes.\\n *\\n * @return {Array}\\n * @api public\\n */\\n\\nClassList.prototype.array = function(){\\n  var className = this.el.getAttribute('class') || '';\\n  var str = className.replace(/^\\\\s+|\\\\s+$/g, '');\\n  var arr = str.split(re);\\n  if ('' === arr[0]) arr.shift();\\n  return arr;\\n};\\n\\n/**\\n * Check if class `name` is present.\\n *\\n * @param {String} name\\n * @return {ClassList}\\n * @api public\\n */\\n\\nClassList.prototype.has =\\nClassList.prototype.contains = function(name){\\n  return this.list\\n    ? this.list.contains(name)\\n    : !! ~index(this.array(), name);\\n};\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"ClassList\",\"el\",\"nodeType\",\"Error\",\"list\",\"classList\",\"index\",\"err\",\"re\",\"toString\",\"Object\",\"prototype\",\"module.exports\",\"add\",\"ClassList.prototype.add\",\"name\",\"arr\",\"array\",\"i\",\"push\",\"className\",\"join\",\"remove\",\"ClassList.prototype.remove\",\"call\",\"removeMatching\",\"splice\",\"ClassList.prototype.removeMatching\",\"length\",\"test\",\"toggle\",\"ClassList.prototype.toggle\",\"force\",\"has\",\"ClassList.prototype.array\",\"replace\",\"getAttribute\",\"str\",\"split\",\"shift\",\"contains\",\"ClassList.prototype.contains\"]\n}\n"]