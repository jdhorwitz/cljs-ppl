["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/setDraftEditorSelection.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$setDraftEditorSelection=function(global,process,require,module,exports,shadow$shims){function anonymizeTextWithin(node,getNodeLabels){var labels=void 0!==getNodeLabels?getNodeLabels(node):[];if(node.nodeType===Node.TEXT_NODE)return document.createTextNode(\"[text \"+node.textContent.length+(labels.length?\" | \"+labels.join(\", \"):\"\")+\"]\");var clone=node.cloneNode();1===clone.nodeType&&labels.length&&clone.setAttribute(\"data-labels\",labels.join(\", \"));node=\nnode.childNodes;for(labels=0;labels<node.length;labels++)clone.appendChild(anonymizeTextWithin(node[labels],getNodeLabels));return clone}function getAnonymizedEditorDOM(node,getNodeLabels){for(;node;){if(node instanceof Element&&node.hasAttribute(\"contenteditable\"))return node?(getNodeLabels=anonymizeTextWithin(node,getNodeLabels),getNodeLabels.nodeType===Node.TEXT_NODE?getNodeLabels=getNodeLabels.textContent:(getNodeLabels instanceof Element?void 0:invariant(!1,\"Node must be an Element if it is not a text node.\"),\ngetNodeLabels=getNodeLabels.outerHTML)):getNodeLabels=\"[empty]\",getNodeLabels;node=node.parentNode}return\"Could not find contentEditable parent of node\"}function addFocusToSelection(selection,node,offset,selectionState){var activeElement=getActiveElement();if(selection.extend&&containsNode(activeElement,node)){offset>(null===node.nodeValue?node.childNodes.length:node.nodeValue.length)&&DraftJsDebugLogging.logSelectionStateFailure({anonymizedDom:getAnonymizedEditorDOM(node),extraParams:JSON.stringify({offset:offset}),\nselectionState:JSON.stringify(selectionState.toJS())});var nodeWasFocus=node===selection.focusNode;try{selection.extend(node,offset)}catch(e){throw DraftJsDebugLogging.logSelectionStateFailure({anonymizedDom:getAnonymizedEditorDOM(node,function(n){var labels=[];n===activeElement&&labels.push(\"active element\");n===selection.anchorNode&&labels.push(\"selection anchor node\");n===selection.focusNode&&labels.push(\"selection focus node\");return labels}),extraParams:JSON.stringify({activeElementName:activeElement?\nactiveElement.nodeName:null,nodeIsFocus:node===selection.focusNode,nodeWasFocus:nodeWasFocus,selectionRangeCount:selection.rangeCount,selectionAnchorNodeName:selection.anchorNode?selection.anchorNode.nodeName:null,selectionAnchorOffset:selection.anchorOffset,selectionFocusNodeName:selection.focusNode?selection.focusNode.nodeName:null,selectionFocusOffset:selection.focusOffset,message:e?\"\"+e:null,offset:offset},null,2),selectionState:JSON.stringify(selectionState.toJS(),null,2)}),e;}}else selectionState=\nselection.getRangeAt(0),selectionState.setEnd(node,offset),selection.addRange(selectionState.cloneRange())}function addPointToSelection(selection,node,offset,selectionState){var range=document.createRange();offset>(null===node.nodeValue?node.childNodes.length:node.nodeValue.length)&&DraftJsDebugLogging.logSelectionStateFailure({anonymizedDom:getAnonymizedEditorDOM(node),extraParams:JSON.stringify({offset:offset}),selectionState:JSON.stringify(selectionState.toJS())});range.setStart(node,offset);selection.addRange(range)}\nvar DraftJsDebugLogging=require(\"module$node_modules$draft_js$lib$DraftJsDebugLogging\"),containsNode=require(\"module$node_modules$fbjs$lib$containsNode\"),getActiveElement=require(\"module$node_modules$fbjs$lib$getActiveElement\"),invariant=require(\"module$node_modules$fbjs$lib$invariant\");module.exports=function(selectionState,node,blockKey,nodeStart,nodeEnd){if(containsNode(document.documentElement,node)){var selection=global.getSelection(),anchorKey=selectionState.getAnchorKey(),anchorOffset=selectionState.getAnchorOffset(),\nfocusKey=selectionState.getFocusKey(),focusOffset=selectionState.getFocusOffset(),isBackward=selectionState.getIsBackward();if(!selection.extend&&isBackward){isBackward=anchorKey;var tempOffset=anchorOffset;anchorKey=focusKey;anchorOffset=focusOffset;focusKey=isBackward;focusOffset=tempOffset;isBackward=!1}anchorKey=anchorKey===blockKey&&nodeStart<=anchorOffset&&nodeEnd>=anchorOffset;blockKey=focusKey===blockKey&&nodeStart<=focusOffset&&nodeEnd>=focusOffset;anchorKey&&blockKey?(selection.removeAllRanges(),\naddPointToSelection(selection,node,anchorOffset-nodeStart,selectionState),addFocusToSelection(selection,node,focusOffset-nodeStart,selectionState)):isBackward?(blockKey&&(selection.removeAllRanges(),addPointToSelection(selection,node,focusOffset-nodeStart,selectionState)),anchorKey&&(focusOffset=selection.focusNode,blockKey=selection.focusOffset,selection.removeAllRanges(),addPointToSelection(selection,node,anchorOffset-nodeStart,selectionState),addFocusToSelection(selection,focusOffset,blockKey,\nselectionState))):(anchorKey&&(selection.removeAllRanges(),addPointToSelection(selection,node,anchorOffset-nodeStart,selectionState)),blockKey&&addFocusToSelection(selection,node,focusOffset-nodeStart,selectionState))}}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$setDraftEditorSelection\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule setDraftEditorSelection\n * @format\n * \n */\n\n'use strict';\n\nvar DraftJsDebugLogging = require('./DraftJsDebugLogging');\n\nvar containsNode = require('fbjs/lib/containsNode');\nvar getActiveElement = require('fbjs/lib/getActiveElement');\nvar invariant = require('fbjs/lib/invariant');\n\nfunction getAnonymizedDOM(node, getNodeLabels) {\n  if (!node) {\n    return '[empty]';\n  }\n\n  var anonymized = anonymizeTextWithin(node, getNodeLabels);\n  if (anonymized.nodeType === Node.TEXT_NODE) {\n    return anonymized.textContent;\n  }\n\n  !(anonymized instanceof Element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Node must be an Element if it is not a text node.') : invariant(false) : void 0;\n  return anonymized.outerHTML;\n}\n\nfunction anonymizeTextWithin(node, getNodeLabels) {\n  var labels = getNodeLabels !== undefined ? getNodeLabels(node) : [];\n\n  if (node.nodeType === Node.TEXT_NODE) {\n    var length = node.textContent.length;\n    return document.createTextNode('[text ' + length + (labels.length ? ' | ' + labels.join(', ') : '') + ']');\n  }\n\n  var clone = node.cloneNode();\n  if (clone.nodeType === 1 && labels.length) {\n    clone.setAttribute('data-labels', labels.join(', '));\n  }\n  var childNodes = node.childNodes;\n  for (var ii = 0; ii < childNodes.length; ii++) {\n    clone.appendChild(anonymizeTextWithin(childNodes[ii], getNodeLabels));\n  }\n\n  return clone;\n}\n\nfunction getAnonymizedEditorDOM(node, getNodeLabels) {\n  // grabbing the DOM content of the Draft editor\n  var currentNode = node;\n  while (currentNode) {\n    if (currentNode instanceof Element && currentNode.hasAttribute('contenteditable')) {\n      // found the Draft editor container\n      return getAnonymizedDOM(currentNode, getNodeLabels);\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n  return 'Could not find contentEditable parent of node';\n}\n\nfunction getNodeLength(node) {\n  return node.nodeValue === null ? node.childNodes.length : node.nodeValue.length;\n}\n\n/**\n * In modern non-IE browsers, we can support both forward and backward\n * selections.\n *\n * Note: IE10+ supports the Selection object, but it does not support\n * the `extend` method, which means that even in modern IE, it's not possible\n * to programatically create a backward selection. Thus, for all IE\n * versions, we use the old IE API to create our selections.\n */\nfunction setDraftEditorSelection(selectionState, node, blockKey, nodeStart, nodeEnd) {\n  // It's possible that the editor has been removed from the DOM but\n  // our selection code doesn't know it yet. Forcing selection in\n  // this case may lead to errors, so just bail now.\n  if (!containsNode(document.documentElement, node)) {\n    return;\n  }\n\n  var selection = global.getSelection();\n  var anchorKey = selectionState.getAnchorKey();\n  var anchorOffset = selectionState.getAnchorOffset();\n  var focusKey = selectionState.getFocusKey();\n  var focusOffset = selectionState.getFocusOffset();\n  var isBackward = selectionState.getIsBackward();\n\n  // IE doesn't support backward selection. Swap key/offset pairs.\n  if (!selection.extend && isBackward) {\n    var tempKey = anchorKey;\n    var tempOffset = anchorOffset;\n    anchorKey = focusKey;\n    anchorOffset = focusOffset;\n    focusKey = tempKey;\n    focusOffset = tempOffset;\n    isBackward = false;\n  }\n\n  var hasAnchor = anchorKey === blockKey && nodeStart <= anchorOffset && nodeEnd >= anchorOffset;\n\n  var hasFocus = focusKey === blockKey && nodeStart <= focusOffset && nodeEnd >= focusOffset;\n\n  // If the selection is entirely bound within this node, set the selection\n  // and be done.\n  if (hasAnchor && hasFocus) {\n    selection.removeAllRanges();\n    addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\n    addFocusToSelection(selection, node, focusOffset - nodeStart, selectionState);\n    return;\n  }\n\n  if (!isBackward) {\n    // If the anchor is within this node, set the range start.\n    if (hasAnchor) {\n      selection.removeAllRanges();\n      addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\n    }\n\n    // If the focus is within this node, we can assume that we have\n    // already set the appropriate start range on the selection, and\n    // can simply extend the selection.\n    if (hasFocus) {\n      addFocusToSelection(selection, node, focusOffset - nodeStart, selectionState);\n    }\n  } else {\n    // If this node has the focus, set the selection range to be a\n    // collapsed range beginning here. Later, when we encounter the anchor,\n    // we'll use this information to extend the selection.\n    if (hasFocus) {\n      selection.removeAllRanges();\n      addPointToSelection(selection, node, focusOffset - nodeStart, selectionState);\n    }\n\n    // If this node has the anchor, we may assume that the correct\n    // focus information is already stored on the selection object.\n    // We keep track of it, reset the selection range, and extend it\n    // back to the focus point.\n    if (hasAnchor) {\n      var storedFocusNode = selection.focusNode;\n      var storedFocusOffset = selection.focusOffset;\n\n      selection.removeAllRanges();\n      addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\n      addFocusToSelection(selection, storedFocusNode, storedFocusOffset, selectionState);\n    }\n  }\n}\n\n/**\n * Extend selection towards focus point.\n */\nfunction addFocusToSelection(selection, node, offset, selectionState) {\n  var activeElement = getActiveElement();\n  if (selection.extend && containsNode(activeElement, node)) {\n    // If `extend` is called while another element has focus, an error is\n    // thrown. We therefore disable `extend` if the active element is somewhere\n    // other than the node we are selecting. This should only occur in Firefox,\n    // since it is the only browser to support multiple selections.\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=921444.\n\n    // logging to catch bug that is being reported in t16250795\n    if (offset > getNodeLength(node)) {\n      // the call to 'selection.extend' is about to throw\n      DraftJsDebugLogging.logSelectionStateFailure({\n        anonymizedDom: getAnonymizedEditorDOM(node),\n        extraParams: JSON.stringify({ offset: offset }),\n        selectionState: JSON.stringify(selectionState.toJS())\n      });\n    }\n\n    // logging to catch bug that is being reported in t18110632\n    var nodeWasFocus = node === selection.focusNode;\n    try {\n      selection.extend(node, offset);\n    } catch (e) {\n      DraftJsDebugLogging.logSelectionStateFailure({\n        anonymizedDom: getAnonymizedEditorDOM(node, function (n) {\n          var labels = [];\n          if (n === activeElement) {\n            labels.push('active element');\n          }\n          if (n === selection.anchorNode) {\n            labels.push('selection anchor node');\n          }\n          if (n === selection.focusNode) {\n            labels.push('selection focus node');\n          }\n          return labels;\n        }),\n        extraParams: JSON.stringify({\n          activeElementName: activeElement ? activeElement.nodeName : null,\n          nodeIsFocus: node === selection.focusNode,\n          nodeWasFocus: nodeWasFocus,\n          selectionRangeCount: selection.rangeCount,\n          selectionAnchorNodeName: selection.anchorNode ? selection.anchorNode.nodeName : null,\n          selectionAnchorOffset: selection.anchorOffset,\n          selectionFocusNodeName: selection.focusNode ? selection.focusNode.nodeName : null,\n          selectionFocusOffset: selection.focusOffset,\n          message: e ? '' + e : null,\n          offset: offset\n        }, null, 2),\n        selectionState: JSON.stringify(selectionState.toJS(), null, 2)\n      });\n      // allow the error to be thrown -\n      // better than continuing in a broken state\n      throw e;\n    }\n  } else {\n    // IE doesn't support extend. This will mean no backward selection.\n    // Extract the existing selection range and add focus to it.\n    // Additionally, clone the selection range. IE11 throws an\n    // InvalidStateError when attempting to access selection properties\n    // after the range is detached.\n    var range = selection.getRangeAt(0);\n    range.setEnd(node, offset);\n    selection.addRange(range.cloneRange());\n  }\n}\n\nfunction addPointToSelection(selection, node, offset, selectionState) {\n  var range = document.createRange();\n  // logging to catch bug that is being reported in t16250795\n  if (offset > getNodeLength(node)) {\n    // in this case we know that the call to 'range.setStart' is about to throw\n    DraftJsDebugLogging.logSelectionStateFailure({\n      anonymizedDom: getAnonymizedEditorDOM(node),\n      extraParams: JSON.stringify({ offset: offset }),\n      selectionState: JSON.stringify(selectionState.toJS())\n    });\n  }\n  range.setStart(node, offset);\n  selection.addRange(range);\n}\n\nmodule.exports = setDraftEditorSelection;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$fbjs$lib$getActiveElement","~$module$node_modules$fbjs$lib$containsNode","~$shadow.js","~$module$node_modules$draft_js$lib$DraftJsDebugLogging","~$module$node_modules$fbjs$lib$invariant"]],"~:properties",["^5",["message","anonymizedDom","offset","activeElementName","selectionRangeCount","selectionAnchorOffset","extraParams","selectionAnchorNodeName","selectionFocusNodeName","nodeIsFocus","selectionFocusOffset","selectionState","nodeWasFocus"]],"~:compiled-at",1532351402139,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$setDraftEditorSelection.js\",\n\"lineCount\":10,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/draft-js/lib/setDraftEditorSelection.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$setDraftEditorSelection\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule setDraftEditorSelection\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar DraftJsDebugLogging = require('./DraftJsDebugLogging');\\n\\nvar containsNode = require('fbjs/lib/containsNode');\\nvar getActiveElement = require('fbjs/lib/getActiveElement');\\nvar invariant = require('fbjs/lib/invariant');\\n\\nfunction getAnonymizedDOM(node, getNodeLabels) {\\n  if (!node) {\\n    return '[empty]';\\n  }\\n\\n  var anonymized = anonymizeTextWithin(node, getNodeLabels);\\n  if (anonymized.nodeType === Node.TEXT_NODE) {\\n    return anonymized.textContent;\\n  }\\n\\n  !(anonymized instanceof Element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Node must be an Element if it is not a text node.') : invariant(false) : void 0;\\n  return anonymized.outerHTML;\\n}\\n\\nfunction anonymizeTextWithin(node, getNodeLabels) {\\n  var labels = getNodeLabels !== undefined ? getNodeLabels(node) : [];\\n\\n  if (node.nodeType === Node.TEXT_NODE) {\\n    var length = node.textContent.length;\\n    return document.createTextNode('[text ' + length + (labels.length ? ' | ' + labels.join(', ') : '') + ']');\\n  }\\n\\n  var clone = node.cloneNode();\\n  if (clone.nodeType === 1 && labels.length) {\\n    clone.setAttribute('data-labels', labels.join(', '));\\n  }\\n  var childNodes = node.childNodes;\\n  for (var ii = 0; ii < childNodes.length; ii++) {\\n    clone.appendChild(anonymizeTextWithin(childNodes[ii], getNodeLabels));\\n  }\\n\\n  return clone;\\n}\\n\\nfunction getAnonymizedEditorDOM(node, getNodeLabels) {\\n  // grabbing the DOM content of the Draft editor\\n  var currentNode = node;\\n  while (currentNode) {\\n    if (currentNode instanceof Element && currentNode.hasAttribute('contenteditable')) {\\n      // found the Draft editor container\\n      return getAnonymizedDOM(currentNode, getNodeLabels);\\n    } else {\\n      currentNode = currentNode.parentNode;\\n    }\\n  }\\n  return 'Could not find contentEditable parent of node';\\n}\\n\\nfunction getNodeLength(node) {\\n  return node.nodeValue === null ? node.childNodes.length : node.nodeValue.length;\\n}\\n\\n/**\\n * In modern non-IE browsers, we can support both forward and backward\\n * selections.\\n *\\n * Note: IE10+ supports the Selection object, but it does not support\\n * the `extend` method, which means that even in modern IE, it's not possible\\n * to programatically create a backward selection. Thus, for all IE\\n * versions, we use the old IE API to create our selections.\\n */\\nfunction setDraftEditorSelection(selectionState, node, blockKey, nodeStart, nodeEnd) {\\n  // It's possible that the editor has been removed from the DOM but\\n  // our selection code doesn't know it yet. Forcing selection in\\n  // this case may lead to errors, so just bail now.\\n  if (!containsNode(document.documentElement, node)) {\\n    return;\\n  }\\n\\n  var selection = global.getSelection();\\n  var anchorKey = selectionState.getAnchorKey();\\n  var anchorOffset = selectionState.getAnchorOffset();\\n  var focusKey = selectionState.getFocusKey();\\n  var focusOffset = selectionState.getFocusOffset();\\n  var isBackward = selectionState.getIsBackward();\\n\\n  // IE doesn't support backward selection. Swap key/offset pairs.\\n  if (!selection.extend && isBackward) {\\n    var tempKey = anchorKey;\\n    var tempOffset = anchorOffset;\\n    anchorKey = focusKey;\\n    anchorOffset = focusOffset;\\n    focusKey = tempKey;\\n    focusOffset = tempOffset;\\n    isBackward = false;\\n  }\\n\\n  var hasAnchor = anchorKey === blockKey && nodeStart <= anchorOffset && nodeEnd >= anchorOffset;\\n\\n  var hasFocus = focusKey === blockKey && nodeStart <= focusOffset && nodeEnd >= focusOffset;\\n\\n  // If the selection is entirely bound within this node, set the selection\\n  // and be done.\\n  if (hasAnchor && hasFocus) {\\n    selection.removeAllRanges();\\n    addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\\n    addFocusToSelection(selection, node, focusOffset - nodeStart, selectionState);\\n    return;\\n  }\\n\\n  if (!isBackward) {\\n    // If the anchor is within this node, set the range start.\\n    if (hasAnchor) {\\n      selection.removeAllRanges();\\n      addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\\n    }\\n\\n    // If the focus is within this node, we can assume that we have\\n    // already set the appropriate start range on the selection, and\\n    // can simply extend the selection.\\n    if (hasFocus) {\\n      addFocusToSelection(selection, node, focusOffset - nodeStart, selectionState);\\n    }\\n  } else {\\n    // If this node has the focus, set the selection range to be a\\n    // collapsed range beginning here. Later, when we encounter the anchor,\\n    // we'll use this information to extend the selection.\\n    if (hasFocus) {\\n      selection.removeAllRanges();\\n      addPointToSelection(selection, node, focusOffset - nodeStart, selectionState);\\n    }\\n\\n    // If this node has the anchor, we may assume that the correct\\n    // focus information is already stored on the selection object.\\n    // We keep track of it, reset the selection range, and extend it\\n    // back to the focus point.\\n    if (hasAnchor) {\\n      var storedFocusNode = selection.focusNode;\\n      var storedFocusOffset = selection.focusOffset;\\n\\n      selection.removeAllRanges();\\n      addPointToSelection(selection, node, anchorOffset - nodeStart, selectionState);\\n      addFocusToSelection(selection, storedFocusNode, storedFocusOffset, selectionState);\\n    }\\n  }\\n}\\n\\n/**\\n * Extend selection towards focus point.\\n */\\nfunction addFocusToSelection(selection, node, offset, selectionState) {\\n  var activeElement = getActiveElement();\\n  if (selection.extend && containsNode(activeElement, node)) {\\n    // If `extend` is called while another element has focus, an error is\\n    // thrown. We therefore disable `extend` if the active element is somewhere\\n    // other than the node we are selecting. This should only occur in Firefox,\\n    // since it is the only browser to support multiple selections.\\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=921444.\\n\\n    // logging to catch bug that is being reported in t16250795\\n    if (offset > getNodeLength(node)) {\\n      // the call to 'selection.extend' is about to throw\\n      DraftJsDebugLogging.logSelectionStateFailure({\\n        anonymizedDom: getAnonymizedEditorDOM(node),\\n        extraParams: JSON.stringify({ offset: offset }),\\n        selectionState: JSON.stringify(selectionState.toJS())\\n      });\\n    }\\n\\n    // logging to catch bug that is being reported in t18110632\\n    var nodeWasFocus = node === selection.focusNode;\\n    try {\\n      selection.extend(node, offset);\\n    } catch (e) {\\n      DraftJsDebugLogging.logSelectionStateFailure({\\n        anonymizedDom: getAnonymizedEditorDOM(node, function (n) {\\n          var labels = [];\\n          if (n === activeElement) {\\n            labels.push('active element');\\n          }\\n          if (n === selection.anchorNode) {\\n            labels.push('selection anchor node');\\n          }\\n          if (n === selection.focusNode) {\\n            labels.push('selection focus node');\\n          }\\n          return labels;\\n        }),\\n        extraParams: JSON.stringify({\\n          activeElementName: activeElement ? activeElement.nodeName : null,\\n          nodeIsFocus: node === selection.focusNode,\\n          nodeWasFocus: nodeWasFocus,\\n          selectionRangeCount: selection.rangeCount,\\n          selectionAnchorNodeName: selection.anchorNode ? selection.anchorNode.nodeName : null,\\n          selectionAnchorOffset: selection.anchorOffset,\\n          selectionFocusNodeName: selection.focusNode ? selection.focusNode.nodeName : null,\\n          selectionFocusOffset: selection.focusOffset,\\n          message: e ? '' + e : null,\\n          offset: offset\\n        }, null, 2),\\n        selectionState: JSON.stringify(selectionState.toJS(), null, 2)\\n      });\\n      // allow the error to be thrown -\\n      // better than continuing in a broken state\\n      throw e;\\n    }\\n  } else {\\n    // IE doesn't support extend. This will mean no backward selection.\\n    // Extract the existing selection range and add focus to it.\\n    // Additionally, clone the selection range. IE11 throws an\\n    // InvalidStateError when attempting to access selection properties\\n    // after the range is detached.\\n    var range = selection.getRangeAt(0);\\n    range.setEnd(node, offset);\\n    selection.addRange(range.cloneRange());\\n  }\\n}\\n\\nfunction addPointToSelection(selection, node, offset, selectionState) {\\n  var range = document.createRange();\\n  // logging to catch bug that is being reported in t16250795\\n  if (offset > getNodeLength(node)) {\\n    // in this case we know that the call to 'range.setStart' is about to throw\\n    DraftJsDebugLogging.logSelectionStateFailure({\\n      anonymizedDom: getAnonymizedEditorDOM(node),\\n      extraParams: JSON.stringify({ offset: offset }),\\n      selectionState: JSON.stringify(selectionState.toJS())\\n    });\\n  }\\n  range.setStart(node, offset);\\n  selection.addRange(range);\\n}\\n\\nmodule.exports = setDraftEditorSelection;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"anonymizeTextWithin\",\"node\",\"getNodeLabels\",\"labels\",\"undefined\",\"nodeType\",\"Node\",\"TEXT_NODE\",\"document\",\"createTextNode\",\"textContent\",\"length\",\"join\",\"clone\",\"cloneNode\",\"setAttribute\",\"childNodes\",\"ii\",\"appendChild\",\"getAnonymizedEditorDOM\",\"currentNode\",\"Element\",\"hasAttribute\",\"anonymized\",\"invariant\",\"outerHTML\",\"parentNode\",\"addFocusToSelection\",\"selection\",\"offset\",\"selectionState\",\"activeElement\",\"getActiveElement\",\"extend\",\"containsNode\",\"nodeValue\",\"DraftJsDebugLogging\",\"logSelectionStateFailure\",\"anonymizedDom\",\"extraParams\",\"JSON\",\"stringify\",\"toJS\",\"nodeWasFocus\",\"focusNode\",\"e\",\"n\",\"push\",\"anchorNode\",\"activeElementName\",\"nodeName\",\"nodeIsFocus\",\"selectionRangeCount\",\"rangeCount\",\"selectionAnchorNodeName\",\"selectionAnchorOffset\",\"anchorOffset\",\"selectionFocusNodeName\",\"selectionFocusOffset\",\"focusOffset\",\"message\",\"range\",\"getRangeAt\",\"setEnd\",\"addRange\",\"cloneRange\",\"addPointToSelection\",\"createRange\",\"setStart\",\"setDraftEditorSelection\",\"blockKey\",\"nodeStart\",\"nodeEnd\",\"documentElement\",\"getSelection\",\"anchorKey\",\"getAnchorKey\",\"getAnchorOffset\",\"focusKey\",\"getFocusKey\",\"getFocusOffset\",\"isBackward\",\"getIsBackward\",\"tempKey\",\"tempOffset\",\"hasAnchor\",\"hasFocus\",\"removeAllRanges\",\"storedFocusNode\",\"storedFocusOffset\"]\n}\n"]