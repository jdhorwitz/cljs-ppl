["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_baseKeys.js"],"~:js","shadow$provide.module$node_modules$lodash$_baseKeys=function(global,process,require,module,exports,shadow$shims){var isPrototype=require(\"module$node_modules$lodash$_isPrototype\"),nativeKeys=require(\"module$node_modules$lodash$_nativeKeys\"),hasOwnProperty=Object.prototype.hasOwnProperty;module.exports=function(object){if(!isPrototype(object))return nativeKeys(object);var result=[],key;for(key in Object(object))hasOwnProperty.call(object,key)&&\"constructor\"!=key&&result.push(key);return result}}","~:source","shadow$provide[\"module$node_modules$lodash$_baseKeys\"] = function(global,process,require,module,exports,shadow$shims) {\nvar isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$lodash$_nativeKeys","~$module$node_modules$lodash$_isPrototype"]],"~:properties",["^5",[]],"~:compiled-at",1532351402159,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_baseKeys.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,qCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IAClHC,YAAcJ,OAAA,CAAQ,yCAAR,CADoG,CAElHK,WAAaL,OAAA,CAAQ,wCAAR,CAFqG,CAQlHM,eAHcC,MAAAC,UAGGF,eAsBrBL,OAAAC,QAAA,CAbAO,QAAiB,CAACC,MAAD,CAAS,CACxB,GAAI,CAACN,WAAA,CAAYM,MAAZ,CAAL,CACE,MAAOL,WAAA,CAAWK,MAAX,CAET,KAAIC,OAAS,EAAb,CACSC,GAAT,KAASA,GAAT,GAAgBL,OAAA,CAAOG,MAAP,CAAhB,CACMJ,cAAAO,KAAA,CAAoBH,MAApB,CAA4BE,GAA5B,CAAJ,EAA+C,aAA/C,EAAwCA,GAAxC,EACED,MAAAG,KAAA,CAAYF,GAAZ,CAGJ,OAAOD,OAViB,CAjB4F;\",\n\"sources\":[\"node_modules/lodash/_baseKeys.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_baseKeys\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar isPrototype = require('./_isPrototype'),\\n    nativeKeys = require('./_nativeKeys');\\n\\n/** Used for built-in method references. */\\nvar objectProto = Object.prototype;\\n\\n/** Used to check objects for own properties. */\\nvar hasOwnProperty = objectProto.hasOwnProperty;\\n\\n/**\\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\\n *\\n * @private\\n * @param {Object} object The object to query.\\n * @returns {Array} Returns the array of property names.\\n */\\nfunction baseKeys(object) {\\n  if (!isPrototype(object)) {\\n    return nativeKeys(object);\\n  }\\n  var result = [];\\n  for (var key in Object(object)) {\\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\\n      result.push(key);\\n    }\\n  }\\n  return result;\\n}\\n\\nmodule.exports = baseKeys;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"isPrototype\",\"nativeKeys\",\"hasOwnProperty\",\"Object\",\"prototype\",\"baseKeys\",\"object\",\"result\",\"key\",\"call\",\"push\"]\n}\n"]