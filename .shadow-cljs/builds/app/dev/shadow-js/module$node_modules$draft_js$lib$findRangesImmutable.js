["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/findRangesImmutable.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$findRangesImmutable=function(global,process,require,module,exports,shadow$shims){module.exports=function(haystack,areEqualFn,filterFn,foundFn){if(haystack.size){var cursor=0;haystack.reduce(function(value,nextValue,nextIndex){areEqualFn(value,nextValue)||(filterFn(value)&&foundFn(cursor,nextIndex),cursor=nextIndex);return nextValue});filterFn(haystack.last())&&foundFn(cursor,haystack.count())}}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$findRangesImmutable\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule findRangesImmutable\n * @format\n * \n */\n\n'use strict';\n\n/**\n * Search through an array to find contiguous stretches of elements that\n * match a specified filter function.\n *\n * When ranges are found, execute a specified `found` function to supply\n * the values to the caller.\n */\nfunction findRangesImmutable(haystack, areEqualFn, filterFn, foundFn) {\n  if (!haystack.size) {\n    return;\n  }\n\n  var cursor = 0;\n\n  haystack.reduce(function (value, nextValue, nextIndex) {\n    if (!areEqualFn(value, nextValue)) {\n      if (filterFn(value)) {\n        foundFn(cursor, nextIndex);\n      }\n      cursor = nextIndex;\n    }\n    return nextValue;\n  });\n\n  filterFn(haystack.last()) && foundFn(cursor, haystack.count());\n}\n\nmodule.exports = findRangesImmutable;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1532351402125,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$findRangesImmutable.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA2CtIF,MAAAC,QAAA,CApBAE,QAA4B,CAACC,QAAD,CAAWC,UAAX,CAAuBC,QAAvB,CAAiCC,OAAjC,CAA0C,CACpE,GAAKH,QAAAI,KAAL,CAAA,CAIA,IAAIC,OAAS,CAEbL,SAAAM,OAAA,CAAgB,QAAS,CAACC,KAAD,CAAQC,SAAR,CAAmBC,SAAnB,CAA8B,CAChDR,UAAA,CAAWM,KAAX,CAAkBC,SAAlB,CAAL,GACMN,QAAA,CAASK,KAAT,CAGJ,EAFEJ,OAAA,CAAQE,MAAR,CAAgBI,SAAhB,CAEF,CAAAJ,MAAA,CAASI,SAJX,CAMA,OAAOD,UAP8C,CAAvD,CAUAN,SAAA,CAASF,QAAAU,KAAA,EAAT,CAAA,EAA6BP,OAAA,CAAQE,MAAR,CAAgBL,QAAAW,MAAA,EAAhB,CAhB7B,CADoE,CAvBgE;\",\n\"sources\":[\"node_modules/draft-js/lib/findRangesImmutable.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$findRangesImmutable\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule findRangesImmutable\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\n/**\\n * Search through an array to find contiguous stretches of elements that\\n * match a specified filter function.\\n *\\n * When ranges are found, execute a specified `found` function to supply\\n * the values to the caller.\\n */\\nfunction findRangesImmutable(haystack, areEqualFn, filterFn, foundFn) {\\n  if (!haystack.size) {\\n    return;\\n  }\\n\\n  var cursor = 0;\\n\\n  haystack.reduce(function (value, nextValue, nextIndex) {\\n    if (!areEqualFn(value, nextValue)) {\\n      if (filterFn(value)) {\\n        foundFn(cursor, nextIndex);\\n      }\\n      cursor = nextIndex;\\n    }\\n    return nextValue;\\n  });\\n\\n  filterFn(haystack.last()) && foundFn(cursor, haystack.count());\\n}\\n\\nmodule.exports = findRangesImmutable;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"findRangesImmutable\",\"haystack\",\"areEqualFn\",\"filterFn\",\"foundFn\",\"size\",\"cursor\",\"reduce\",\"value\",\"nextValue\",\"nextIndex\",\"last\",\"count\"]\n}\n"]