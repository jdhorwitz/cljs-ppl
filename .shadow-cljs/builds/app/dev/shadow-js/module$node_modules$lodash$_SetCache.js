["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_SetCache.js"],"~:js","shadow$provide.module$node_modules$lodash$_SetCache=function(global,process,require,module,exports,shadow$shims){function SetCache(values){var index=-1,length=null==values?0:values.length;for(this.__data__=new MapCache;++index<length;)this.add(values[index])}var MapCache=require(\"module$node_modules$lodash$_MapCache\");global=require(\"module$node_modules$lodash$_setCacheAdd\");require=require(\"module$node_modules$lodash$_setCacheHas\");SetCache.prototype.add=SetCache.prototype.push=global;SetCache.prototype.has=\nrequire;module.exports=SetCache}","~:source","shadow$provide[\"module$node_modules$lodash$_SetCache\"] = function(global,process,require,module,exports,shadow$shims) {\nvar MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_setCacheHas","~$shadow.js","~$module$node_modules$lodash$_setCacheAdd","~$module$node_modules$lodash$_MapCache"]],"~:properties",["^5",["push","add","has","__data__"]],"~:compiled-at",1532351402169,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_SetCache.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,qCAAA,CAAyD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAatHC,QAASA,SAAQ,CAACC,MAAD,CAAS,CAAA,IACpBC,MAAS,EADW,CAEpBC,OAAmB,IAAV,EAAAF,MAAA,CAAiB,CAAjB,CAAqBA,MAAAE,OAGlC,KADA,IAAAC,SACA,CADgB,IAAIC,QACpB,CAAO,EAAEH,KAAT,CAAiBC,MAAjB,CAAA,CACE,IAAAG,IAAA,CAASL,MAAA,CAAOC,KAAP,CAAT,CANsB,CAb4F,IAClHG,SAAWT,OAAA,CAAQ,sCAAR,CACXW,OAAAA,CAAcX,OAAA,CAAQ,yCAAR,CACdY,QAAAA,CAAcZ,OAAA,CAAQ,yCAAR,CAqBlBI,SAAAS,UAAAH,IAAA,CAAyBN,QAAAS,UAAAC,KAAzB,CAAmDH,MACnDP,SAAAS,UAAAE,IAAA;AAAyBH,OAEzBX,OAAAC,QAAA,CAAiBE,QA3BqG;\",\n\"sources\":[\"node_modules/lodash/_SetCache.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_SetCache\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar MapCache = require('./_MapCache'),\\n    setCacheAdd = require('./_setCacheAdd'),\\n    setCacheHas = require('./_setCacheHas');\\n\\n/**\\n *\\n * Creates an array cache object to store unique values.\\n *\\n * @private\\n * @constructor\\n * @param {Array} [values] The values to cache.\\n */\\nfunction SetCache(values) {\\n  var index = -1,\\n      length = values == null ? 0 : values.length;\\n\\n  this.__data__ = new MapCache;\\n  while (++index < length) {\\n    this.add(values[index]);\\n  }\\n}\\n\\n// Add methods to `SetCache`.\\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\\nSetCache.prototype.has = setCacheHas;\\n\\nmodule.exports = SetCache;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"SetCache\",\"values\",\"index\",\"length\",\"__data__\",\"MapCache\",\"add\",\"setCacheAdd\",\"setCacheHas\",\"prototype\",\"push\",\"has\"]\n}\n"]