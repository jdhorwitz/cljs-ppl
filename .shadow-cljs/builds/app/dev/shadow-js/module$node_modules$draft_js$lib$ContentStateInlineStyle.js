["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/ContentStateInlineStyle.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$ContentStateInlineStyle=function(global,process,require,module,exports,shadow$shims){function modifyInlineStyle(contentState,selectionState,inlineStyle,addOrRemove){var blockMap=contentState.getBlockMap(),startKey=selectionState.getStartKey(),startOffset=selectionState.getStartOffset(),endKey=selectionState.getEndKey(),endOffset=selectionState.getEndOffset(),newBlocks=blockMap.skipUntil(function(_,k){return k===startKey}).takeUntil(function(_,k){return k===\nendKey}).concat(Map([[endKey,blockMap.get(endKey)]])).map(function(block,blockKey){if(startKey===endKey){var sliceStart=startOffset;blockKey=endOffset}else sliceStart=blockKey===startKey?startOffset:0,blockKey=blockKey===endKey?endOffset:block.getLength();for(var chars=block.getCharacterList(),current;sliceStart<blockKey;)current=chars.get(sliceStart),chars=chars.set(sliceStart,addOrRemove?CharacterMetadata.applyStyle(current,inlineStyle):CharacterMetadata.removeStyle(current,inlineStyle)),sliceStart++;\nreturn block.set(\"characterList\",chars)});return contentState.merge({blockMap:blockMap.merge(newBlocks),selectionBefore:selectionState,selectionAfter:selectionState})}var CharacterMetadata=require(\"module$node_modules$draft_js$lib$CharacterMetadata\"),Map=require(\"module$node_modules$immutable$dist$immutable\").Map;module.exports={add:function(contentState,selectionState,inlineStyle){return modifyInlineStyle(contentState,selectionState,inlineStyle,!0)},remove:function(contentState,selectionState,inlineStyle){return modifyInlineStyle(contentState,\nselectionState,inlineStyle,!1)}}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$ContentStateInlineStyle\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ContentStateInlineStyle\n * @format\n * \n */\n\n'use strict';\n\nvar CharacterMetadata = require('./CharacterMetadata');\n\nvar _require = require('immutable'),\n    Map = _require.Map;\n\nvar ContentStateInlineStyle = {\n  add: function add(contentState, selectionState, inlineStyle) {\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, true);\n  },\n\n  remove: function remove(contentState, selectionState, inlineStyle) {\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, false);\n  }\n};\n\nfunction modifyInlineStyle(contentState, selectionState, inlineStyle, addOrRemove) {\n  var blockMap = contentState.getBlockMap();\n  var startKey = selectionState.getStartKey();\n  var startOffset = selectionState.getStartOffset();\n  var endKey = selectionState.getEndKey();\n  var endOffset = selectionState.getEndOffset();\n\n  var newBlocks = blockMap.skipUntil(function (_, k) {\n    return k === startKey;\n  }).takeUntil(function (_, k) {\n    return k === endKey;\n  }).concat(Map([[endKey, blockMap.get(endKey)]])).map(function (block, blockKey) {\n    var sliceStart;\n    var sliceEnd;\n\n    if (startKey === endKey) {\n      sliceStart = startOffset;\n      sliceEnd = endOffset;\n    } else {\n      sliceStart = blockKey === startKey ? startOffset : 0;\n      sliceEnd = blockKey === endKey ? endOffset : block.getLength();\n    }\n\n    var chars = block.getCharacterList();\n    var current;\n    while (sliceStart < sliceEnd) {\n      current = chars.get(sliceStart);\n      chars = chars.set(sliceStart, addOrRemove ? CharacterMetadata.applyStyle(current, inlineStyle) : CharacterMetadata.removeStyle(current, inlineStyle));\n      sliceStart++;\n    }\n\n    return block.set('characterList', chars);\n  });\n\n  return contentState.merge({\n    blockMap: blockMap.merge(newBlocks),\n    selectionBefore: selectionState,\n    selectionAfter: selectionState\n  });\n}\n\nmodule.exports = ContentStateInlineStyle;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$immutable$dist$immutable","~$module$node_modules$draft_js$lib$CharacterMetadata"]],"~:properties",["^5",["selectionBefore","selectionAfter","remove","blockMap","add"]],"~:compiled-at",1532351402126,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$ContentStateInlineStyle.js\",\n\"lineCount\":4,\n\"mappings\":\"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CA+B1IC,QAASA,kBAAiB,CAACC,YAAD,CAAeC,cAAf,CAA+BC,WAA/B,CAA4CC,WAA5C,CAAyD,CACjF,IAAIC,SAAWJ,YAAAK,YAAA,EAAf,CACIC,SAAWL,cAAAM,YAAA,EADf,CAEIC,YAAcP,cAAAQ,eAAA,EAFlB,CAGIC,OAAST,cAAAU,UAAA,EAHb,CAIIC,UAAYX,cAAAY,aAAA,EAJhB,CAMIC,UAAYV,QAAAW,UAAA,CAAmB,QAAS,CAACC,CAAD,CAAIC,CAAJ,CAAO,CACjD,MAAOA,EAAP,GAAaX,QADoC,CAAnC,CAAAY,UAAA,CAEH,QAAS,CAACF,CAAD,CAAIC,CAAJ,CAAO,CAC3B,MAAOA,EAAP;AAAaP,MADc,CAFb,CAAAS,OAAA,CAINC,GAAA,CAAI,CAAC,CAACV,MAAD,CAASN,QAAAiB,IAAA,CAAaX,MAAb,CAAT,CAAD,CAAJ,CAJM,CAAAY,IAAA,CAIqC,QAAS,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAI9E,GAAIlB,QAAJ,GAAiBI,MAAjB,CAAyB,CACvB,IAAAe,WAAajB,WACbkB,SAAA,CAAWd,SAFY,CAAzB,IAIEa,WACA,CADaD,QAAA,GAAalB,QAAb,CAAwBE,WAAxB,CAAsC,CACnD,CAAAkB,QAAA,CAAWF,QAAA,GAAad,MAAb,CAAsBE,SAAtB,CAAkCW,KAAAI,UAAA,EAK/C,KAFA,IAAIC,MAAQL,KAAAM,iBAAA,EAAZ,CACIC,OACJ,CAAOL,UAAP,CAAoBC,QAApB,CAAA,CACEI,OAEA,CAFUF,KAAAP,IAAA,CAAUI,UAAV,CAEV,CADAG,KACA,CADQA,KAAAG,IAAA,CAAUN,UAAV,CAAsBtB,WAAA,CAAc6B,iBAAAC,WAAA,CAA6BH,OAA7B,CAAsC5B,WAAtC,CAAd,CAAmE8B,iBAAAE,YAAA,CAA8BJ,OAA9B,CAAuC5B,WAAvC,CAAzF,CACR,CAAAuB,UAAA,EAGF;MAAOF,MAAAQ,IAAA,CAAU,eAAV,CAA2BH,KAA3B,CApBuE,CAJhE,CA2BhB,OAAO5B,aAAAmC,MAAA,CAAmB,CACxB/B,SAAUA,QAAA+B,MAAA,CAAerB,SAAf,CADc,CAExBsB,gBAAiBnC,cAFO,CAGxBoC,eAAgBpC,cAHQ,CAAnB,CAlC0E,CAfnF,IAAI+B,kBAAoBrC,OAAA,CAAQ,oDAAR,CAAxB,CAGIyB,IADWzB,OAAA2C,CAAQ,8CAARA,CACLlB,IAqDVxB,OAAAC,QAAA,CAnD8B0C,CAC5BC,IAAKA,QAAY,CAACxC,YAAD,CAAeC,cAAf,CAA+BC,WAA/B,CAA4C,CAC3D,MAAOH,kBAAA,CAAkBC,YAAlB,CAAgCC,cAAhC,CAAgDC,WAAhD,CAA6D,CAAA,CAA7D,CADoD,CADjCqC,CAK5BE,OAAQA,QAAe,CAACzC,YAAD,CAAeC,cAAf,CAA+BC,WAA/B,CAA4C,CACjE,MAAOH,kBAAA,CAAkBC,YAAlB;AAAgCC,cAAhC,CAAgDC,WAAhD,CAA6D,CAAA,CAA7D,CAD0D,CALvCqC,CArB4G;\",\n\"sources\":[\"node_modules/draft-js/lib/ContentStateInlineStyle.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$ContentStateInlineStyle\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ContentStateInlineStyle\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar CharacterMetadata = require('./CharacterMetadata');\\n\\nvar _require = require('immutable'),\\n    Map = _require.Map;\\n\\nvar ContentStateInlineStyle = {\\n  add: function add(contentState, selectionState, inlineStyle) {\\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, true);\\n  },\\n\\n  remove: function remove(contentState, selectionState, inlineStyle) {\\n    return modifyInlineStyle(contentState, selectionState, inlineStyle, false);\\n  }\\n};\\n\\nfunction modifyInlineStyle(contentState, selectionState, inlineStyle, addOrRemove) {\\n  var blockMap = contentState.getBlockMap();\\n  var startKey = selectionState.getStartKey();\\n  var startOffset = selectionState.getStartOffset();\\n  var endKey = selectionState.getEndKey();\\n  var endOffset = selectionState.getEndOffset();\\n\\n  var newBlocks = blockMap.skipUntil(function (_, k) {\\n    return k === startKey;\\n  }).takeUntil(function (_, k) {\\n    return k === endKey;\\n  }).concat(Map([[endKey, blockMap.get(endKey)]])).map(function (block, blockKey) {\\n    var sliceStart;\\n    var sliceEnd;\\n\\n    if (startKey === endKey) {\\n      sliceStart = startOffset;\\n      sliceEnd = endOffset;\\n    } else {\\n      sliceStart = blockKey === startKey ? startOffset : 0;\\n      sliceEnd = blockKey === endKey ? endOffset : block.getLength();\\n    }\\n\\n    var chars = block.getCharacterList();\\n    var current;\\n    while (sliceStart < sliceEnd) {\\n      current = chars.get(sliceStart);\\n      chars = chars.set(sliceStart, addOrRemove ? CharacterMetadata.applyStyle(current, inlineStyle) : CharacterMetadata.removeStyle(current, inlineStyle));\\n      sliceStart++;\\n    }\\n\\n    return block.set('characterList', chars);\\n  });\\n\\n  return contentState.merge({\\n    blockMap: blockMap.merge(newBlocks),\\n    selectionBefore: selectionState,\\n    selectionAfter: selectionState\\n  });\\n}\\n\\nmodule.exports = ContentStateInlineStyle;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"modifyInlineStyle\",\"contentState\",\"selectionState\",\"inlineStyle\",\"addOrRemove\",\"blockMap\",\"getBlockMap\",\"startKey\",\"getStartKey\",\"startOffset\",\"getStartOffset\",\"endKey\",\"getEndKey\",\"endOffset\",\"getEndOffset\",\"newBlocks\",\"skipUntil\",\"_\",\"k\",\"takeUntil\",\"concat\",\"Map\",\"get\",\"map\",\"block\",\"blockKey\",\"sliceStart\",\"sliceEnd\",\"getLength\",\"chars\",\"getCharacterList\",\"current\",\"set\",\"CharacterMetadata\",\"applyStyle\",\"removeStyle\",\"merge\",\"selectionBefore\",\"selectionAfter\",\"_require\",\"ContentStateInlineStyle\",\"add\",\"remove\"]\n}\n"]