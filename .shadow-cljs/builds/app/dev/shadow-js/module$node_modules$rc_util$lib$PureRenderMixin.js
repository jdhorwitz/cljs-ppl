["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-util/lib/PureRenderMixin.js"],"~:js","shadow$provide.module$node_modules$rc_util$lib$PureRenderMixin=function(global,process,require,module,exports,shadow$shims){var shallowEqual=require(\"module$node_modules$shallowequal$index\");module.exports={shouldComponentUpdate:function(nextProps,nextState){return!shallowEqual(this.props,nextProps)||!shallowEqual(this.state,nextState)}}}","~:source","shadow$provide[\"module$node_modules$rc_util$lib$PureRenderMixin\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\n/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentWithPureRenderMixin\n */\n\nvar shallowEqual = require('shallowequal');\n\nfunction shallowCompare(instance, nextProps, nextState) {\n  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);\n}\n\n/**\n * If your React component's render function is \"pure\", e.g. it will render the\n * same result given the same props and state, provide this mixin for a\n * considerable performance boost.\n *\n * Most React components have pure render functions.\n *\n * Example:\n *\n *   var ReactComponentWithPureRenderMixin =\n *     require('ReactComponentWithPureRenderMixin');\n *   React.createClass({\n *     mixins: [ReactComponentWithPureRenderMixin],\n *\n *     render: function() {\n *       return <div className={this.props.className}>foo</div>;\n *     }\n *   });\n *\n * Note: This only checks shallow equality for props and state. If these contain\n * complex data structures this mixin may have false-negatives for deeper\n * differences. Only mixin to components which have simple props and state, or\n * use `forceUpdate()` when you know deep data structures have changed.\n *\n * See https://facebook.github.io/react/docs/pure-render-mixin.html\n */\nvar ReactComponentWithPureRenderMixin = {\n  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\n    return shallowCompare(this, nextProps, nextState);\n  }\n};\n\nmodule.exports = ReactComponentWithPureRenderMixin;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$shallowequal$index","~$shadow.js"]],"~:properties",["^5",["shouldComponentUpdate"]],"~:compiled-at",1532351401886,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_util$lib$PureRenderMixin.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,gDAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAcjI,IAAIC,aAAeJ,OAAA,CAAQ,wCAAR,CAsCnBC,OAAAC,QAAA,CANwCG,CACtCC,sBAAuBA,QAA8B,CAACC,SAAD,CAAYC,SAAZ,CAAuB,CAC1E,MA/BK,CAACJ,YAAA,CA+BgBK,IA/BHC,MAAb,CA+BsBH,SA/BtB,CA+BN,EA/BiD,CAACH,YAAA,CA+B5BK,IA/ByCE,MAAb,CA+BXH,SA/BW,CA8BwB,CADtCH,CA9CyF;\",\n\"sources\":[\"node_modules/rc-util/lib/PureRenderMixin.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_util$lib$PureRenderMixin\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\n/**\\n * Copyright 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule ReactComponentWithPureRenderMixin\\n */\\n\\nvar shallowEqual = require('shallowequal');\\n\\nfunction shallowCompare(instance, nextProps, nextState) {\\n  return !shallowEqual(instance.props, nextProps) || !shallowEqual(instance.state, nextState);\\n}\\n\\n/**\\n * If your React component's render function is \\\"pure\\\", e.g. it will render the\\n * same result given the same props and state, provide this mixin for a\\n * considerable performance boost.\\n *\\n * Most React components have pure render functions.\\n *\\n * Example:\\n *\\n *   var ReactComponentWithPureRenderMixin =\\n *     require('ReactComponentWithPureRenderMixin');\\n *   React.createClass({\\n *     mixins: [ReactComponentWithPureRenderMixin],\\n *\\n *     render: function() {\\n *       return <div className={this.props.className}>foo</div>;\\n *     }\\n *   });\\n *\\n * Note: This only checks shallow equality for props and state. If these contain\\n * complex data structures this mixin may have false-negatives for deeper\\n * differences. Only mixin to components which have simple props and state, or\\n * use `forceUpdate()` when you know deep data structures have changed.\\n *\\n * See https://facebook.github.io/react/docs/pure-render-mixin.html\\n */\\nvar ReactComponentWithPureRenderMixin = {\\n  shouldComponentUpdate: function shouldComponentUpdate(nextProps, nextState) {\\n    return shallowCompare(this, nextProps, nextState);\\n  }\\n};\\n\\nmodule.exports = ReactComponentWithPureRenderMixin;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"shallowEqual\",\"ReactComponentWithPureRenderMixin\",\"shouldComponentUpdate\",\"nextProps\",\"nextState\",\"instance\",\"props\",\"state\"]\n}\n"]