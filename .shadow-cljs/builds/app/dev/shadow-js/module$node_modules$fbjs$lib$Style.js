["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/Style.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$Style=function(global,process,require,module,exports,shadow$shims){function _isNodeScrollable(element,name){element=Style.get(element,name);return\"auto\"===element||\"scroll\"===element}var Style={get:require(\"module$node_modules$fbjs$lib$getStyleProperty\"),getScrollParent:function(node){if(!node)return null;for(var ownerDocument=node.ownerDocument;node&&node!==ownerDocument.body;){if(_isNodeScrollable(node,\"overflow\")||_isNodeScrollable(node,\"overflowY\")||\n_isNodeScrollable(node,\"overflowX\"))return node;node=node.parentNode}return ownerDocument.defaultView||ownerDocument.parentWindow}};module.exports=Style}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$Style\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\nvar getStyleProperty = require('./getStyleProperty');\n\n/**\n * @param {DOMNode} element [description]\n * @param {string} name Overflow style property name.\n * @return {boolean} True if the supplied ndoe is scrollable.\n */\nfunction _isNodeScrollable(element, name) {\n  var overflow = Style.get(element, name);\n  return overflow === 'auto' || overflow === 'scroll';\n}\n\n/**\n * Utilities for querying and mutating style properties.\n */\nvar Style = {\n  /**\n   * Gets the style property for the supplied node. This will return either the\n   * computed style, if available, or the declared style.\n   *\n   * @param {DOMNode} node\n   * @param {string} name Style property name.\n   * @return {?string} Style property value.\n   */\n  get: getStyleProperty,\n\n  /**\n   * Determines the nearest ancestor of a node that is scrollable.\n   *\n   * NOTE: This can be expensive if used repeatedly or on a node nested deeply.\n   *\n   * @param {?DOMNode} node Node from which to start searching.\n   * @return {?DOMWindow|DOMElement} Scroll parent of the supplied node.\n   */\n  getScrollParent: function getScrollParent(node) {\n    if (!node) {\n      return null;\n    }\n    var ownerDocument = node.ownerDocument;\n    while (node && node !== ownerDocument.body) {\n      if (_isNodeScrollable(node, 'overflow') || _isNodeScrollable(node, 'overflowY') || _isNodeScrollable(node, 'overflowX')) {\n        return node;\n      }\n      node = node.parentNode;\n    }\n    return ownerDocument.defaultView || ownerDocument.parentWindow;\n  }\n\n};\n\nmodule.exports = Style;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$getStyleProperty"]],"~:properties",["^5",["get","getScrollParent"]],"~:compiled-at",1532351402140,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$Style.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAmBpHC,QAASA,kBAAiB,CAACC,OAAD,CAAUC,IAAV,CAAgB,CACpCC,OAAAA,CAAWC,KAAAC,IAAA,CAAUJ,OAAV,CAAmBC,IAAnB,CACf,OAAoB,MAApB,GAAOC,OAAP,EAA2C,QAA3C,GAA8BA,OAFU,CAQ1C,IAAIC,MAAQ,CASVC,IAxBqBT,OAAAU,CAAQ,+CAARA,CAeX,CAmBVC,gBAAiBA,QAAwB,CAACC,IAAD,CAAO,CAC9C,GAAI,CAACA,IAAL,CACE,MAAO,KAGT,KADA,IAAIC,cAAgBD,IAAAC,cACpB,CAAOD,IAAP,EAAeA,IAAf,GAAwBC,aAAAC,KAAxB,CAAA,CAA4C,CAC1C,GAAIV,iBAAA,CAAkBQ,IAAlB,CAAwB,UAAxB,CAAJ,EAA2CR,iBAAA,CAAkBQ,IAAlB,CAAwB,WAAxB,CAA3C;AAAmFR,iBAAA,CAAkBQ,IAAlB,CAAwB,WAAxB,CAAnF,CACE,MAAOA,KAETA,KAAA,CAAOA,IAAAG,WAJmC,CAM5C,MAAOF,cAAAG,YAAP,EAAoCH,aAAAI,aAXU,CAnBtC,CAmCZhB,OAAAC,QAAA,CAAiBM,KA9DmG;\",\n\"sources\":[\"node_modules/fbjs/lib/Style.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$Style\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n */\\n\\nvar getStyleProperty = require('./getStyleProperty');\\n\\n/**\\n * @param {DOMNode} element [description]\\n * @param {string} name Overflow style property name.\\n * @return {boolean} True if the supplied ndoe is scrollable.\\n */\\nfunction _isNodeScrollable(element, name) {\\n  var overflow = Style.get(element, name);\\n  return overflow === 'auto' || overflow === 'scroll';\\n}\\n\\n/**\\n * Utilities for querying and mutating style properties.\\n */\\nvar Style = {\\n  /**\\n   * Gets the style property for the supplied node. This will return either the\\n   * computed style, if available, or the declared style.\\n   *\\n   * @param {DOMNode} node\\n   * @param {string} name Style property name.\\n   * @return {?string} Style property value.\\n   */\\n  get: getStyleProperty,\\n\\n  /**\\n   * Determines the nearest ancestor of a node that is scrollable.\\n   *\\n   * NOTE: This can be expensive if used repeatedly or on a node nested deeply.\\n   *\\n   * @param {?DOMNode} node Node from which to start searching.\\n   * @return {?DOMWindow|DOMElement} Scroll parent of the supplied node.\\n   */\\n  getScrollParent: function getScrollParent(node) {\\n    if (!node) {\\n      return null;\\n    }\\n    var ownerDocument = node.ownerDocument;\\n    while (node && node !== ownerDocument.body) {\\n      if (_isNodeScrollable(node, 'overflow') || _isNodeScrollable(node, 'overflowY') || _isNodeScrollable(node, 'overflowX')) {\\n        return node;\\n      }\\n      node = node.parentNode;\\n    }\\n    return ownerDocument.defaultView || ownerDocument.parentWindow;\\n  }\\n\\n};\\n\\nmodule.exports = Style;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_isNodeScrollable\",\"element\",\"name\",\"overflow\",\"Style\",\"get\",\"getStyleProperty\",\"getScrollParent\",\"node\",\"ownerDocument\",\"body\",\"parentNode\",\"defaultView\",\"parentWindow\"]\n}\n"]