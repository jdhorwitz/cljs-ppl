["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/async-validator/lib/index.js"],"~:js","shadow$provide.module$node_modules$async_validator$lib$index=function(global,process,require,module,exports,shadow$shims){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}function Schema(descriptor){this.rules=null;this._messages=_messages2.messages;this.define(descriptor)}Object.defineProperty(exports,\"__esModule\",{value:!0});global=require(\"module$node_modules$babel_runtime$helpers$extends\");var _extends3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$typeof\");\nvar _typeof3=_interopRequireDefault(global),_util=require(\"module$node_modules$async_validator$lib$util\");global=require(\"module$node_modules$async_validator$lib$validator$index\");var _validator2=_interopRequireDefault(global),_messages2=require(\"module$node_modules$async_validator$lib$messages\");Schema.prototype={messages:function(_messages){_messages&&(this._messages=(0,_util.deepMerge)((0,_messages2.newMessages)(),_messages));return this._messages},define:function(rules){if(!rules)throw Error(\"Cannot configure a schema with no rules\");\nif(\"object\"!==(\"undefined\"===typeof rules?\"undefined\":(0,_typeof3[\"default\"])(rules))||Array.isArray(rules))throw Error(\"Rules must be an object\");this.rules={};var z=void 0;for(z in rules)if(rules.hasOwnProperty(z)){var item=rules[z];this.rules[z]=Array.isArray(item)?item:[item]}},validate:function(source_){var _this=this,source=source_,options=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},callback=arguments[2];\"function\"===typeof options&&(callback=options,options={});if(this.rules&&\n0!==Object.keys(this.rules).length){if(options.messages){var messages=this.messages();messages===_messages2.messages&&(messages=(0,_messages2.newMessages)());(0,_util.deepMerge)(messages,options.messages);options.messages=messages}else options.messages=this.messages();var arr=void 0,value=void 0,series={};(options.keys||Object.keys(this.rules)).forEach(function(z){arr=_this.rules[z];value=source[z];arr.forEach(function(r){\"function\"===typeof r.transform&&(source===source_&&(source=(0,_extends3[\"default\"])({},\nsource)),value=source[z]=r.transform(value));r=\"function\"===typeof r?{validator:r}:(0,_extends3[\"default\"])({},r);r.validator=_this.getValidationMethod(r);r.field=z;r.fullField=r.fullField||z;r.type=_this.getType(r);r.validator&&(series[z]=series[z]||[],series[z].push({rule:r,value:value,source:source,field:z}))})});(0,_util.asyncMap)(series,options,function(data,doIt){function addFullfield(key,schema){return(0,_extends3[\"default\"])({},schema,{fullField:rule.fullField+\".\"+key})}function cb(){var errors=\n0<arguments.length&&void 0!==arguments[0]?arguments[0]:[];Array.isArray(errors)||(errors=[errors]);errors.length&&(0,_util.warning)(\"async-validator:\",errors);errors.length&&rule.message&&(errors=[].concat(rule.message));errors=errors.map((0,_util.complementError)(rule));if(options.first&&errors.length)return doIt(errors);if(deep){if(rule.required&&!data.value)return errors=rule.message?[].concat(rule.message).map((0,_util.complementError)(rule)):options.error?[options.error(rule,(0,_util.format)(options.messages.required,\nrule.field))]:[],doIt(errors);var fieldsSchema={};if(rule.defaultField)for(var k in data.value)data.value.hasOwnProperty(k)&&(fieldsSchema[k]=rule.defaultField);fieldsSchema=(0,_extends3[\"default\"])({},fieldsSchema,data.rule.fields);for(var f in fieldsSchema)fieldsSchema.hasOwnProperty(f)&&(k=Array.isArray(fieldsSchema[f])?fieldsSchema[f]:[fieldsSchema[f]],fieldsSchema[f]=k.map(addFullfield.bind(null,f)));fieldsSchema=new Schema(fieldsSchema);fieldsSchema.messages(options.messages);data.rule.options&&\n(data.rule.options.messages=options.messages,data.rule.options.error=options.error);fieldsSchema.validate(data.value,data.rule.options||options,function(errs){doIt(errs&&errs.length?errors.concat(errs):errs)})}else doIt(errors)}var rule=data.rule,deep=(\"object\"===rule.type||\"array\"===rule.type)&&(\"object\"===(0,_typeof3[\"default\"])(rule.fields)||\"object\"===(0,_typeof3[\"default\"])(rule.defaultField));deep=deep&&(rule.required||!rule.required&&data.value);rule.field=data.field;var res=rule.validator(rule,\ndata.value,cb,data.source,options);res&&res.then&&res.then(function(){return cb()},function(e){return cb(e)})},function(results){var i,errors=[],fields={};for(i=0;i<results.length;i++){var e=results[i];Array.isArray(e)?errors=errors.concat.apply(errors,e):errors.push(e)}if(errors.length)for(i=0;i<errors.length;i++)results=errors[i].field,fields[results]=fields[results]||[],fields[results].push(errors[i]);else fields=errors=null;callback(errors,fields)})}else callback&&callback()},getType:function(rule){void 0===\nrule.type&&rule.pattern instanceof RegExp&&(rule.type=\"pattern\");if(\"function\"!==typeof rule.validator&&rule.type&&!_validator2[\"default\"].hasOwnProperty(rule.type))throw Error((0,_util.format)(\"Unknown rule type %s\",rule.type));return rule.type||\"string\"},getValidationMethod:function(rule){if(\"function\"===typeof rule.validator)return rule.validator;var keys=Object.keys(rule),messageIndex=keys.indexOf(\"message\");-1!==messageIndex&&keys.splice(messageIndex,1);return 1===keys.length&&\"required\"===keys[0]?\n_validator2[\"default\"].required:_validator2[\"default\"][this.getType(rule)]||!1}};Schema.register=function(type,validator){if(\"function\"!==typeof validator)throw Error(\"Cannot register a validator by type, validator is not a function\");_validator2[\"default\"][type]=validator};Schema.messages=_messages2.messages;exports[\"default\"]=Schema;module.exports=exports[\"default\"]}","~:source","shadow$provide[\"module$node_modules$async_validator$lib$index\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _typeof2 = require('babel-runtime/helpers/typeof');\n\nvar _typeof3 = _interopRequireDefault(_typeof2);\n\nvar _util = require('./util');\n\nvar _validator = require('./validator/');\n\nvar _validator2 = _interopRequireDefault(_validator);\n\nvar _messages2 = require('./messages');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nfunction Schema(descriptor) {\n  this.rules = null;\n  this._messages = _messages2.messages;\n  this.define(descriptor);\n}\n\nSchema.prototype = {\n  messages: function messages(_messages) {\n    if (_messages) {\n      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);\n    }\n    return this._messages;\n  },\n  define: function define(rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if ((typeof rules === 'undefined' ? 'undefined' : (0, _typeof3['default'])(rules)) !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n    var z = void 0;\n    var item = void 0;\n    for (z in rules) {\n      if (rules.hasOwnProperty(z)) {\n        item = rules[z];\n        this.rules[z] = Array.isArray(item) ? item : [item];\n      }\n    }\n  },\n  validate: function validate(source_) {\n    var _this = this;\n\n    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var oc = arguments[2];\n\n    var source = source_;\n    var options = o;\n    var callback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback();\n      }\n      return;\n    }\n    function complete(results) {\n      var i = void 0;\n      var field = void 0;\n      var errors = [];\n      var fields = {};\n\n      function add(e) {\n        if (Array.isArray(e)) {\n          errors = errors.concat.apply(errors, e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        errors = null;\n        fields = null;\n      } else {\n        for (i = 0; i < errors.length; i++) {\n          field = errors[i].field;\n          fields[field] = fields[field] || [];\n          fields[field].push(errors[i]);\n        }\n      }\n      callback(errors, fields);\n    }\n\n    if (options.messages) {\n      var messages = this.messages();\n      if (messages === _messages2.messages) {\n        messages = (0, _messages2.newMessages)();\n      }\n      (0, _util.deepMerge)(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n    var arr = void 0;\n    var value = void 0;\n    var series = {};\n    var keys = options.keys || Object.keys(this.rules);\n    keys.forEach(function (z) {\n      arr = _this.rules[z];\n      value = source[z];\n      arr.forEach(function (r) {\n        var rule = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = (0, _extends3['default'])({}, source);\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule\n          };\n        } else {\n          rule = (0, _extends3['default'])({}, rule);\n        }\n        rule.validator = _this.getValidationMethod(rule);\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = _this.getType(rule);\n        if (!rule.validator) {\n          return;\n        }\n        series[z] = series[z] || [];\n        series[z].push({\n          rule: rule,\n          value: value,\n          source: source,\n          field: z\n        });\n      });\n    });\n    var errorFields = {};\n    (0, _util.asyncMap)(series, options, function (data, doIt) {\n      var rule = data.rule;\n      var deep = (rule.type === 'object' || rule.type === 'array') && ((0, _typeof3['default'])(rule.fields) === 'object' || (0, _typeof3['default'])(rule.defaultField) === 'object');\n      deep = deep && (rule.required || !rule.required && data.value);\n      rule.field = data.field;\n      function addFullfield(key, schema) {\n        return (0, _extends3['default'])({}, schema, {\n          fullField: rule.fullField + '.' + key\n        });\n      }\n\n      function cb() {\n        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n        var errors = e;\n        if (!Array.isArray(errors)) {\n          errors = [errors];\n        }\n        if (errors.length) {\n          (0, _util.warning)('async-validator:', errors);\n        }\n        if (errors.length && rule.message) {\n          errors = [].concat(rule.message);\n        }\n\n        errors = errors.map((0, _util.complementError)(rule));\n\n        if (options.first && errors.length) {\n          errorFields[rule.field] = 1;\n          return doIt(errors);\n        }\n        if (!deep) {\n          doIt(errors);\n        } else {\n          // if rule is required but the target object\n          // does not exist fail at the rule level and don't\n          // go deeper\n          if (rule.required && !data.value) {\n            if (rule.message) {\n              errors = [].concat(rule.message).map((0, _util.complementError)(rule));\n            } else if (options.error) {\n              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];\n            } else {\n              errors = [];\n            }\n            return doIt(errors);\n          }\n\n          var fieldsSchema = {};\n          if (rule.defaultField) {\n            for (var k in data.value) {\n              if (data.value.hasOwnProperty(k)) {\n                fieldsSchema[k] = rule.defaultField;\n              }\n            }\n          }\n          fieldsSchema = (0, _extends3['default'])({}, fieldsSchema, data.rule.fields);\n          for (var f in fieldsSchema) {\n            if (fieldsSchema.hasOwnProperty(f)) {\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\n            }\n          }\n          var schema = new Schema(fieldsSchema);\n          schema.messages(options.messages);\n          if (data.rule.options) {\n            data.rule.options.messages = options.messages;\n            data.rule.options.error = options.error;\n          }\n          schema.validate(data.value, data.rule.options || options, function (errs) {\n            doIt(errs && errs.length ? errors.concat(errs) : errs);\n          });\n        }\n      }\n\n      var res = rule.validator(rule, data.value, cb, data.source, options);\n      if (res && res.then) {\n        res.then(function () {\n          return cb();\n        }, function (e) {\n          return cb(e);\n        });\n      }\n    }, function (results) {\n      complete(results);\n    });\n  },\n  getType: function getType(rule) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\n      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  },\n  getValidationMethod: function getValidationMethod(rule) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    var keys = Object.keys(rule);\n    var messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return _validator2['default'].required;\n    }\n    return _validator2['default'][this.getType(rule)] || false;\n  }\n};\n\nSchema.register = function register(type, validator) {\n  if (typeof validator !== 'function') {\n    throw new Error('Cannot register a validator by type, validator is not a function');\n  }\n  _validator2['default'][type] = validator;\n};\n\nSchema.messages = _messages2.messages;\n\nexports['default'] = Schema;\nmodule.exports = exports['default'];\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$async_validator$lib$util","~$shadow.js","~$module$node_modules$async_validator$lib$messages","~$module$node_modules$babel_runtime$helpers$extends","~$module$node_modules$async_validator$lib$validator$index","~$module$node_modules$babel_runtime$helpers$typeof"]],"~:properties",["^5",["rule","fullField","getType","prototype","validate","__esModule","error","value","rules","field","define","_messages","register","source","type","validator","messages","getValidationMethod","default"]],"~:compiled-at",1532351402018,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$async_validator$lib$index.js\",\n\"lineCount\":11,\n\"mappings\":\"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAuB/HC,QAASA,uBAAsB,CAACC,GAAD,CAAM,CAAE,MAAOA,IAAA,EAAOA,GAAAC,WAAP,CAAwBD,GAAxB,CAA8B,CAAE,UAAWA,GAAb,CAAvC,CAQrCE,QAASA,OAAM,CAACC,UAAD,CAAa,CAC1B,IAAAC,MAAA,CAAa,IACb,KAAAC,UAAA,CAAiBC,UAAAC,SACjB,KAAAC,OAAA,CAAYL,UAAZ,CAH0B,CA5B5BM,MAAAC,eAAA,CAAsBb,OAAtB,CAA+B,YAA/B,CAA6C,CAC3Cc,MAAO,CAAA,CADoC,CAA7C,CAIIC,OAAAA,CAAYjB,OAAA,CAAQ,mDAAR,CAEhB,KAAIkB,UAAYd,sBAAA,CAAuBa,MAAvB,CAEZE,OAAAA,CAAWnB,OAAA,CAAQ,kDAAR,CAEf;IAAIoB,SAAWhB,sBAAA,CAAuBe,MAAvB,CAAf,CAEIE,MAAQrB,OAAA,CAAQ,8CAAR,CAERsB,OAAAA,CAAatB,OAAA,CAAQ,yDAAR,CAEjB,KAAIuB,YAAcnB,sBAAA,CAAuBkB,MAAvB,CAAlB,CAEIX,WAAaX,OAAA,CAAQ,kDAAR,CAgBjBO,OAAAiB,UAAA,CAAmB,CACjBZ,SAAUA,QAAiB,CAACF,SAAD,CAAY,CACjCA,SAAJ,GACE,IAAAA,UADF,CACmB,CAAC,CAAA,CAAGW,KAAAI,UAAJ,EAAqB,CAAC,CAAA,CAAGd,UAAAe,YAAJ,GAArB,CAAoDhB,SAApD,CADnB,CAGA,OAAO,KAAAA,UAJ8B,CADtB,CAOjBG,OAAQA,QAAe,CAACJ,KAAD,CAAQ,CAC7B,GAAI,CAACA,KAAL,CACE,KAAUkB,MAAJ,CAAU,yCAAV,CAAN;AAEF,GAAuF,QAAvF,IAAsB,WAAjB,GAAA,MAAOlB,MAAP,CAA+B,WAA/B,CAA6C,CAAC,CAAA,CAAGW,QAAA,CAAS,SAAT,CAAJ,EAAyBX,KAAzB,CAAlD,GAAmGmB,KAAAC,QAAA,CAAcpB,KAAd,CAAnG,CACE,KAAUkB,MAAJ,CAAU,yBAAV,CAAN,CAEF,IAAAlB,MAAA,CAAa,EACb,KAAIqB,EAAI,IAAK,EAEb,KAAKA,CAAL,GAAUrB,MAAV,CACE,GAAIA,KAAAsB,eAAA,CAAqBD,CAArB,CAAJ,CAA6B,CAC3B,IAAAE,KAAOvB,KAAA,CAAMqB,CAAN,CACP,KAAArB,MAAA,CAAWqB,CAAX,CAAA,CAAgBF,KAAAC,QAAA,CAAcG,IAAd,CAAA,CAAsBA,IAAtB,CAA6B,CAACA,IAAD,CAFlB,CAXF,CAPd,CAwBjBC,SAAUA,QAAiB,CAACC,OAAD,CAAU,CACnC,IAAIC,MAAQ,IAAZ,CAKIC,OAASF,OALb,CAMIG,QAJuB,CAAnBC,CAAAC,SAAAC,OAAAF,EAAyCG,IAAAA,EAAzCH,GAAwBC,SAAA,CAAU,CAAV,CAAxBD,CAAqDC,SAAA,CAAU,CAAV,CAArDD,CAAoE,EAF5E,CAOII,SAJKH,SAAAI,CAAU,CAAVA,CAKc,WAAvB,GAAI,MAAON,QAAX,GACEK,QACA,CADWL,OACX,CAAAA,OAAA,CAAU,EAFZ,CAIA,IAAK,IAAA5B,MAAL;AAAsD,CAAtD,GAAmBK,MAAA8B,KAAA,CAAY,IAAAnC,MAAZ,CAAA+B,OAAnB,CAAA,CAoCA,GAAIH,OAAAzB,SAAJ,CAAsB,CACpB,IAAIA,SAAW,IAAAA,SAAA,EACXA,SAAJ,GAAiBD,UAAAC,SAAjB,GACEA,QADF,CACa,CAAC,CAAA,CAAGD,UAAAe,YAAJ,GADb,CAGA,EAAC,CAAA,CAAGL,KAAAI,UAAJ,EAAqBb,QAArB,CAA+ByB,OAAAzB,SAA/B,CACAyB,QAAAzB,SAAA,CAAmBA,QANC,CAAtB,IAQEyB,QAAAzB,SAAA,CAAmB,IAAAA,SAAA,EAErB,KAAIiC,IAAM,IAAK,EAAf,CACI7B,MAAQ,IAAK,EADjB,CAEI8B,OAAS,EAEbC,EADWV,OAAAO,KACXG,EAD2BjC,MAAA8B,KAAA,CAAY,IAAAnC,MAAZ,CAC3BsC,SAAA,CAAa,QAAS,CAACjB,CAAD,CAAI,CACxBe,GAAA,CAAMV,KAAA1B,MAAA,CAAYqB,CAAZ,CACNd,MAAA,CAAQoB,MAAA,CAAON,CAAP,CACRe,IAAAE,QAAA,CAAY,QAAS,CAACC,CAAD,CAAI,CAEO,UAA9B,GAAI,MAAOC,EAAAC,UAAX,GACMd,MAGJ,GAHeF,OAGf,GAFEE,MAEF,CAFW,CAAC,CAAA,CAAGlB,SAAA,CAAU,SAAV,CAAJ,EAA0B,EAA1B;AAA8BkB,MAA9B,CAEX,EAAApB,KAAA,CAAQoB,MAAA,CAAON,CAAP,CAAR,CAAoBmB,CAAAC,UAAA,CAAelC,KAAf,CAJtB,CAOEiC,EAAA,CADkB,UAApB,GAAI,MAAOA,EAAX,CACS,CACLE,UAAWF,CADN,CADT,CAKS,CAAC,CAAA,CAAG/B,SAAA,CAAU,SAAV,CAAJ,EAA0B,EAA1B,CAA8B+B,CAA9B,CAETA,EAAAE,UAAA,CAAiBhB,KAAAiB,oBAAA,CAA0BH,CAA1B,CACjBA,EAAAI,MAAA,CAAavB,CACbmB,EAAAK,UAAA,CAAiBL,CAAAK,UAAjB,EAAmCxB,CACnCmB,EAAAM,KAAA,CAAYpB,KAAAqB,QAAA,CAAcP,CAAd,CACPA,EAAAE,UAAL,GAGAL,MAAA,CAAOhB,CAAP,CACA,CADYgB,MAAA,CAAOhB,CAAP,CACZ,EADyB,EACzB,CAAAgB,MAAA,CAAOhB,CAAP,CAAA2B,KAAA,CAAe,CACbR,KAAMA,CADO,CAEbjC,MAAOA,KAFM,CAGboB,OAAQA,MAHK,CAIbiB,MAAOvB,CAJM,CAAf,CAJA,CAnBuB,CAAzB,CAHwB,CAA1B,CAmCA,EAAC,CAAA,CAAGT,KAAAqC,SAAJ,EAAoBZ,MAApB,CAA4BT,OAA5B,CAAqC,QAAS,CAACsB,IAAD,CAAOC,IAAP,CAAa,CAKzDC,QAASA,aAAY,CAACC,GAAD,CAAMC,MAAN,CAAc,CACjC,MAAO,CAAC,CAAA,CAAG7C,SAAA,CAAU,SAAV,CAAJ,EAA0B,EAA1B,CAA8B6C,MAA9B,CAAsC,CAC3CT,UAAWL,IAAAK,UAAXA,CAA4B,GAA5BA,CAAkCQ,GADS,CAAtC,CAD0B,CAMnCE,QAASA,GAAE,EAAG,CAGZ,IAAIC;AAFuB,CAAnBC,CAAA3B,SAAAC,OAAA0B,EAAyCzB,IAAAA,EAAzCyB,GAAwB3B,SAAA,CAAU,CAAV,CAAxB2B,CAAqD3B,SAAA,CAAU,CAAV,CAArD2B,CAAoE,EAGvEtC,MAAAC,QAAA,CAAcoC,MAAd,CAAL,GACEA,MADF,CACW,CAACA,MAAD,CADX,CAGIA,OAAAzB,OAAJ,EACE,CAAC,CAAA,CAAGnB,KAAA8C,QAAJ,EAAmB,kBAAnB,CAAuCF,MAAvC,CAEEA,OAAAzB,OAAJ,EAAqBS,IAAAmB,QAArB,GACEH,MADF,CACW,EAAAI,OAAA,CAAUpB,IAAAmB,QAAV,CADX,CAIAH,OAAA,CAASA,MAAAK,IAAA,CAAW,CAAC,CAAA,CAAGjD,KAAAkD,gBAAJ,EAA2BtB,IAA3B,CAAX,CAET,IAAIZ,OAAAmC,MAAJ,EAAqBP,MAAAzB,OAArB,CAEE,MAAOoB,KAAA,CAAKK,MAAL,CAET,IAAKQ,IAAL,CAEO,CAIL,GAAIxB,IAAAyB,SAAJ,EAAqB,CAACf,IAAA3C,MAAtB,CAQE,MANEiD,OAMK,CAPHhB,IAAAmB,QAAJ,CACW,EAAAC,OAAA,CAAUpB,IAAAmB,QAAV,CAAAE,IAAA,CAA4B,CAAC,CAAA,CAAGjD,KAAAkD,gBAAJ,EAA2BtB,IAA3B,CAA5B,CADX,CAEWZ,OAAAsC,MAAJ,CACI,CAACtC,OAAAsC,MAAA,CAAc1B,IAAd,CAAoB,CAAC,CAAA,CAAG5B,KAAAuD,OAAJ,EAAkBvC,OAAAzB,SAAA8D,SAAlB;AAA6CzB,IAAAI,MAA7C,CAApB,CAAD,CADJ,CAGI,EAEJ,CAAAO,IAAA,CAAKK,MAAL,CAGT,KAAIY,aAAe,EACnB,IAAI5B,IAAA6B,aAAJ,CACE,IAAKC,IAAIA,CAAT,GAAcpB,KAAA3C,MAAd,CACM2C,IAAA3C,MAAAe,eAAA,CAA0BgD,CAA1B,CAAJ,GACEF,YAAA,CAAaE,CAAb,CADF,CACoB9B,IAAA6B,aADpB,CAKJD,aAAA,CAAe,CAAC,CAAA,CAAG3D,SAAA,CAAU,SAAV,CAAJ,EAA0B,EAA1B,CAA8B2D,YAA9B,CAA4ClB,IAAAV,KAAA+B,OAA5C,CACf,KAAKC,IAAIA,CAAT,GAAcJ,aAAd,CACMA,YAAA9C,eAAA,CAA4BkD,CAA5B,CAAJ,GACMC,CACJ,CADkBtD,KAAAC,QAAA,CAAcgD,YAAA,CAAaI,CAAb,CAAd,CAAA,CAAiCJ,YAAA,CAAaI,CAAb,CAAjC,CAAmD,CAACJ,YAAA,CAAaI,CAAb,CAAD,CACrE,CAAAJ,YAAA,CAAaI,CAAb,CAAA,CAAkBC,CAAAZ,IAAA,CAAgBT,YAAAsB,KAAA,CAAkB,IAAlB,CAAwBF,CAAxB,CAAhB,CAFpB,CAKElB,aAAAA,CAAS,IAAIxD,MAAJ,CAAWsE,YAAX,CACbd,aAAAnD,SAAA,CAAgByB,OAAAzB,SAAhB,CACI+C,KAAAV,KAAAZ,QAAJ;CACEsB,IAAAV,KAAAZ,QAAAzB,SACA,CAD6ByB,OAAAzB,SAC7B,CAAA+C,IAAAV,KAAAZ,QAAAsC,MAAA,CAA0BtC,OAAAsC,MAF5B,CAIAZ,aAAA9B,SAAA,CAAgB0B,IAAA3C,MAAhB,CAA4B2C,IAAAV,KAAAZ,QAA5B,EAAiDA,OAAjD,CAA0D,QAAS,CAAC+C,IAAD,CAAO,CACxExB,IAAA,CAAKwB,IAAA,EAAQA,IAAA5C,OAAR,CAAsByB,MAAAI,OAAA,CAAce,IAAd,CAAtB,CAA4CA,IAAjD,CADwE,CAA1E,CApCK,CAFP,IACExB,KAAA,CAAKK,MAAL,CArBU,CAVd,IAAIhB,KAAOU,IAAAV,KAAX,CACIwB,MAAsB,QAAtBA,GAAQxB,IAAAM,KAARkB,EAAgD,OAAhDA,GAAkCxB,IAAAM,KAAlCkB,IAAuG,QAAvGA,GAA6D,CAAC,CAAA,CAAGrD,QAAA,CAAS,SAAT,CAAJ,EAAyB6B,IAAA+B,OAAzB,CAA7DP,EAAmK,QAAnKA,GAAmH,CAAC,CAAA,CAAGrD,QAAA,CAAS,SAAT,CAAJ,EAAyB6B,IAAA6B,aAAzB,CAAnHL,CACJA,KAAA,CAAOA,IAAP,GAAgBxB,IAAAyB,SAAhB,EAAiC,CAACzB,IAAAyB,SAAlC,EAAmDf,IAAA3C,MAAnD,CACAiC,KAAAI,MAAA,CAAaM,IAAAN,MAuEb,KAAIgC,IAAMpC,IAAAE,UAAA,CAAeF,IAAf;AAAqBU,IAAA3C,MAArB,CAAiCgD,EAAjC,CAAqCL,IAAAvB,OAArC,CAAkDC,OAAlD,CACNgD,IAAJ,EAAWA,GAAAC,KAAX,EACED,GAAAC,KAAA,CAAS,QAAS,EAAG,CACnB,MAAOtB,GAAA,EADY,CAArB,CAEG,QAAS,CAACE,CAAD,CAAI,CACd,MAAOF,GAAA,CAAGE,CAAH,CADO,CAFhB,CA7EuD,CAA3D,CAmFG,QAAS,CAACqB,OAAD,CAAU,CAjKpB,IAAIC,CAAJ,CAEIvB,OAAS,EAFb,CAGIe,OAAS,EAUb,KAAKQ,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAqJSD,OArJO/C,OAAhB,CAAgCgD,CAAA,EAAhC,CAAqC,CAC/B,IAAA,EAoJGD,OApJH,CAAQC,CAAR,CARA5D,MAAAC,QAAA,CAAcqC,CAAd,CAAJ,CACED,MADF,CACWA,MAAAI,OAAAoB,MAAA,CAAoBxB,MAApB,CAA4BC,CAA5B,CADX,CAGED,MAAAR,KAAA,CAAYS,CAAZ,CAIiC,CAGrC,GAAKD,MAAAzB,OAAL,CAIE,IAAKgD,CAAL,CAAS,CAAT,CAAYA,CAAZ,CAAgBvB,MAAAzB,OAAhB,CAA+BgD,CAAA,EAA/B,CACEnC,OAEA,CAFQY,MAAA,CAAOuB,CAAP,CAAAnC,MAER,CADA2B,MAAA,CAAO3B,OAAP,CACA,CADgB2B,MAAA,CAAO3B,OAAP,CAChB,EADiC,EACjC,CAAA2B,MAAA,CAAO3B,OAAP,CAAAI,KAAA,CAAmBQ,MAAA,CAAOuB,CAAP,CAAnB,CAPJ,KAEER,OAAA,CADAf,MACA,CADS,IASXvB,SAAA,CAASuB,MAAT,CAAiBe,MAAjB,CAuIoB,CAnFtB,CArFA,CAAA,IACMtC,SAAJ,EACEA,QAAA,EAf+B,CAxBpB,CAiNjBc,QAASA,QAAgB,CAACP,IAAD,CAAO,CACZR,IAAAA,EAAlB;AAAIQ,IAAAM,KAAJ,EAA+BN,IAAAyC,QAA/B,WAAuDC,OAAvD,GACE1C,IAAAM,KADF,CACc,SADd,CAGA,IAA8B,UAA9B,GAAI,MAAON,KAAAE,UAAX,EAA4CF,IAAAM,KAA5C,EAAyD,CAAChC,WAAA,CAAY,SAAZ,CAAAQ,eAAA,CAAsCkB,IAAAM,KAAtC,CAA1D,CACE,KAAU5B,MAAJ,CAAU,CAAC,CAAA,CAAGN,KAAAuD,OAAJ,EAAkB,sBAAlB,CAA0C3B,IAAAM,KAA1C,CAAV,CAAN,CAEF,MAAON,KAAAM,KAAP,EAAoB,QAPU,CAjNf,CA0NjBH,oBAAqBA,QAA4B,CAACH,IAAD,CAAO,CACtD,GAA8B,UAA9B,GAAI,MAAOA,KAAAE,UAAX,CACE,MAAOF,KAAAE,UAET,KAAIP,KAAO9B,MAAA8B,KAAA,CAAYK,IAAZ,CAAX,CACI2C,aAAehD,IAAAiD,QAAA,CAAa,SAAb,CACG,GAAtB,GAAID,YAAJ,EACEhD,IAAAkD,OAAA,CAAYF,YAAZ,CAA0B,CAA1B,CAEF,OAAoB,EAApB,GAAIhD,IAAAJ,OAAJ,EAAqC,UAArC,GAAyBI,IAAA,CAAK,CAAL,CAAzB;AACSrB,WAAA,CAAY,SAAZ,CAAAmD,SADT,CAGOnD,WAAA,CAAY,SAAZ,CAAA,CAAuB,IAAAiC,QAAA,CAAaP,IAAb,CAAvB,CAHP,EAGqD,CAAA,CAZC,CA1NvC,CA0OnB1C,OAAAwF,SAAA,CAAkBC,QAAiB,CAACzC,IAAD,CAAOJ,SAAP,CAAkB,CACnD,GAAyB,UAAzB,GAAI,MAAOA,UAAX,CACE,KAAUxB,MAAJ,CAAU,kEAAV,CAAN,CAEFJ,WAAA,CAAY,SAAZ,CAAA,CAAuBgC,IAAvB,CAAA,CAA+BJ,SAJoB,CAOrD5C,OAAAK,SAAA,CAAkBD,UAAAC,SAElBV,QAAA,CAAQ,SAAR,CAAA,CAAqBK,MACrBN,OAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CAzR8G;\",\n\"sources\":[\"node_modules/async-validator/lib/index.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$async_validator$lib$index\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\n\\nvar _extends2 = require('babel-runtime/helpers/extends');\\n\\nvar _extends3 = _interopRequireDefault(_extends2);\\n\\nvar _typeof2 = require('babel-runtime/helpers/typeof');\\n\\nvar _typeof3 = _interopRequireDefault(_typeof2);\\n\\nvar _util = require('./util');\\n\\nvar _validator = require('./validator/');\\n\\nvar _validator2 = _interopRequireDefault(_validator);\\n\\nvar _messages2 = require('./messages');\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\\n\\n/**\\n *  Encapsulates a validation schema.\\n *\\n *  @param descriptor An object declaring validation rules\\n *  for this schema.\\n */\\nfunction Schema(descriptor) {\\n  this.rules = null;\\n  this._messages = _messages2.messages;\\n  this.define(descriptor);\\n}\\n\\nSchema.prototype = {\\n  messages: function messages(_messages) {\\n    if (_messages) {\\n      this._messages = (0, _util.deepMerge)((0, _messages2.newMessages)(), _messages);\\n    }\\n    return this._messages;\\n  },\\n  define: function define(rules) {\\n    if (!rules) {\\n      throw new Error('Cannot configure a schema with no rules');\\n    }\\n    if ((typeof rules === 'undefined' ? 'undefined' : (0, _typeof3['default'])(rules)) !== 'object' || Array.isArray(rules)) {\\n      throw new Error('Rules must be an object');\\n    }\\n    this.rules = {};\\n    var z = void 0;\\n    var item = void 0;\\n    for (z in rules) {\\n      if (rules.hasOwnProperty(z)) {\\n        item = rules[z];\\n        this.rules[z] = Array.isArray(item) ? item : [item];\\n      }\\n    }\\n  },\\n  validate: function validate(source_) {\\n    var _this = this;\\n\\n    var o = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\\n    var oc = arguments[2];\\n\\n    var source = source_;\\n    var options = o;\\n    var callback = oc;\\n    if (typeof options === 'function') {\\n      callback = options;\\n      options = {};\\n    }\\n    if (!this.rules || Object.keys(this.rules).length === 0) {\\n      if (callback) {\\n        callback();\\n      }\\n      return;\\n    }\\n    function complete(results) {\\n      var i = void 0;\\n      var field = void 0;\\n      var errors = [];\\n      var fields = {};\\n\\n      function add(e) {\\n        if (Array.isArray(e)) {\\n          errors = errors.concat.apply(errors, e);\\n        } else {\\n          errors.push(e);\\n        }\\n      }\\n\\n      for (i = 0; i < results.length; i++) {\\n        add(results[i]);\\n      }\\n      if (!errors.length) {\\n        errors = null;\\n        fields = null;\\n      } else {\\n        for (i = 0; i < errors.length; i++) {\\n          field = errors[i].field;\\n          fields[field] = fields[field] || [];\\n          fields[field].push(errors[i]);\\n        }\\n      }\\n      callback(errors, fields);\\n    }\\n\\n    if (options.messages) {\\n      var messages = this.messages();\\n      if (messages === _messages2.messages) {\\n        messages = (0, _messages2.newMessages)();\\n      }\\n      (0, _util.deepMerge)(messages, options.messages);\\n      options.messages = messages;\\n    } else {\\n      options.messages = this.messages();\\n    }\\n    var arr = void 0;\\n    var value = void 0;\\n    var series = {};\\n    var keys = options.keys || Object.keys(this.rules);\\n    keys.forEach(function (z) {\\n      arr = _this.rules[z];\\n      value = source[z];\\n      arr.forEach(function (r) {\\n        var rule = r;\\n        if (typeof rule.transform === 'function') {\\n          if (source === source_) {\\n            source = (0, _extends3['default'])({}, source);\\n          }\\n          value = source[z] = rule.transform(value);\\n        }\\n        if (typeof rule === 'function') {\\n          rule = {\\n            validator: rule\\n          };\\n        } else {\\n          rule = (0, _extends3['default'])({}, rule);\\n        }\\n        rule.validator = _this.getValidationMethod(rule);\\n        rule.field = z;\\n        rule.fullField = rule.fullField || z;\\n        rule.type = _this.getType(rule);\\n        if (!rule.validator) {\\n          return;\\n        }\\n        series[z] = series[z] || [];\\n        series[z].push({\\n          rule: rule,\\n          value: value,\\n          source: source,\\n          field: z\\n        });\\n      });\\n    });\\n    var errorFields = {};\\n    (0, _util.asyncMap)(series, options, function (data, doIt) {\\n      var rule = data.rule;\\n      var deep = (rule.type === 'object' || rule.type === 'array') && ((0, _typeof3['default'])(rule.fields) === 'object' || (0, _typeof3['default'])(rule.defaultField) === 'object');\\n      deep = deep && (rule.required || !rule.required && data.value);\\n      rule.field = data.field;\\n      function addFullfield(key, schema) {\\n        return (0, _extends3['default'])({}, schema, {\\n          fullField: rule.fullField + '.' + key\\n        });\\n      }\\n\\n      function cb() {\\n        var e = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\\n\\n        var errors = e;\\n        if (!Array.isArray(errors)) {\\n          errors = [errors];\\n        }\\n        if (errors.length) {\\n          (0, _util.warning)('async-validator:', errors);\\n        }\\n        if (errors.length && rule.message) {\\n          errors = [].concat(rule.message);\\n        }\\n\\n        errors = errors.map((0, _util.complementError)(rule));\\n\\n        if (options.first && errors.length) {\\n          errorFields[rule.field] = 1;\\n          return doIt(errors);\\n        }\\n        if (!deep) {\\n          doIt(errors);\\n        } else {\\n          // if rule is required but the target object\\n          // does not exist fail at the rule level and don't\\n          // go deeper\\n          if (rule.required && !data.value) {\\n            if (rule.message) {\\n              errors = [].concat(rule.message).map((0, _util.complementError)(rule));\\n            } else if (options.error) {\\n              errors = [options.error(rule, (0, _util.format)(options.messages.required, rule.field))];\\n            } else {\\n              errors = [];\\n            }\\n            return doIt(errors);\\n          }\\n\\n          var fieldsSchema = {};\\n          if (rule.defaultField) {\\n            for (var k in data.value) {\\n              if (data.value.hasOwnProperty(k)) {\\n                fieldsSchema[k] = rule.defaultField;\\n              }\\n            }\\n          }\\n          fieldsSchema = (0, _extends3['default'])({}, fieldsSchema, data.rule.fields);\\n          for (var f in fieldsSchema) {\\n            if (fieldsSchema.hasOwnProperty(f)) {\\n              var fieldSchema = Array.isArray(fieldsSchema[f]) ? fieldsSchema[f] : [fieldsSchema[f]];\\n              fieldsSchema[f] = fieldSchema.map(addFullfield.bind(null, f));\\n            }\\n          }\\n          var schema = new Schema(fieldsSchema);\\n          schema.messages(options.messages);\\n          if (data.rule.options) {\\n            data.rule.options.messages = options.messages;\\n            data.rule.options.error = options.error;\\n          }\\n          schema.validate(data.value, data.rule.options || options, function (errs) {\\n            doIt(errs && errs.length ? errors.concat(errs) : errs);\\n          });\\n        }\\n      }\\n\\n      var res = rule.validator(rule, data.value, cb, data.source, options);\\n      if (res && res.then) {\\n        res.then(function () {\\n          return cb();\\n        }, function (e) {\\n          return cb(e);\\n        });\\n      }\\n    }, function (results) {\\n      complete(results);\\n    });\\n  },\\n  getType: function getType(rule) {\\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\\n      rule.type = 'pattern';\\n    }\\n    if (typeof rule.validator !== 'function' && rule.type && !_validator2['default'].hasOwnProperty(rule.type)) {\\n      throw new Error((0, _util.format)('Unknown rule type %s', rule.type));\\n    }\\n    return rule.type || 'string';\\n  },\\n  getValidationMethod: function getValidationMethod(rule) {\\n    if (typeof rule.validator === 'function') {\\n      return rule.validator;\\n    }\\n    var keys = Object.keys(rule);\\n    var messageIndex = keys.indexOf('message');\\n    if (messageIndex !== -1) {\\n      keys.splice(messageIndex, 1);\\n    }\\n    if (keys.length === 1 && keys[0] === 'required') {\\n      return _validator2['default'].required;\\n    }\\n    return _validator2['default'][this.getType(rule)] || false;\\n  }\\n};\\n\\nSchema.register = function register(type, validator) {\\n  if (typeof validator !== 'function') {\\n    throw new Error('Cannot register a validator by type, validator is not a function');\\n  }\\n  _validator2['default'][type] = validator;\\n};\\n\\nSchema.messages = _messages2.messages;\\n\\nexports['default'] = Schema;\\nmodule.exports = exports['default'];\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"Schema\",\"descriptor\",\"rules\",\"_messages\",\"_messages2\",\"messages\",\"define\",\"Object\",\"defineProperty\",\"value\",\"_extends2\",\"_extends3\",\"_typeof2\",\"_typeof3\",\"_util\",\"_validator\",\"_validator2\",\"prototype\",\"deepMerge\",\"newMessages\",\"Error\",\"Array\",\"isArray\",\"z\",\"hasOwnProperty\",\"item\",\"validate\",\"source_\",\"_this\",\"source\",\"options\",\"o\",\"arguments\",\"length\",\"undefined\",\"callback\",\"oc\",\"keys\",\"arr\",\"series\",\"forEach\",\"r\",\"rule\",\"transform\",\"validator\",\"getValidationMethod\",\"field\",\"fullField\",\"type\",\"getType\",\"push\",\"asyncMap\",\"data\",\"doIt\",\"addFullfield\",\"key\",\"schema\",\"cb\",\"errors\",\"e\",\"warning\",\"message\",\"concat\",\"map\",\"complementError\",\"first\",\"deep\",\"required\",\"error\",\"format\",\"fieldsSchema\",\"defaultField\",\"k\",\"fields\",\"f\",\"fieldSchema\",\"bind\",\"errs\",\"res\",\"then\",\"results\",\"i\",\"apply\",\"pattern\",\"RegExp\",\"messageIndex\",\"indexOf\",\"splice\",\"register\",\"Schema.register\"]\n}\n"]