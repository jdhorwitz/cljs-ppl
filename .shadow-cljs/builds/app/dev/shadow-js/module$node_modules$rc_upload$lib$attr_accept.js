["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-upload/lib/attr-accept.js"],"~:js","shadow$provide.module$node_modules$rc_upload$lib$attr_accept=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,\"__esModule\",{value:!0});exports[\"default\"]=function(file,acceptedFiles){if(file&&acceptedFiles){acceptedFiles=Array.isArray(acceptedFiles)?acceptedFiles:acceptedFiles.split(\",\");var fileName=file.name||\"\",mimeType=file.type||\"\",baseMimeType=mimeType.replace(/\\/.*$/,\"\");return acceptedFiles.some(function(type){var validType=type.trim();return\".\"===\nvalidType.charAt(0)?(type=fileName.toLowerCase(),validType=validType.toLowerCase(),-1!==type.indexOf(validType,type.length-validType.length)):/\\/\\*$/.test(validType)?baseMimeType===validType.replace(/\\/.*$/,\"\"):mimeType===validType})}return!0};module.exports=exports[\"default\"]}","~:source","shadow$provide[\"module$node_modules$rc_upload$lib$attr_accept\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction endsWith(str, suffix) {\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\n}\n\nexports['default'] = function (file, acceptedFiles) {\n  if (file && acceptedFiles) {\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\n    var fileName = file.name || '';\n    var mimeType = file.type || '';\n    var baseMimeType = mimeType.replace(/\\/.*$/, '');\n\n    return acceptedFilesArray.some(function (type) {\n      var validType = type.trim();\n      if (validType.charAt(0) === '.') {\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\n      } else if (/\\/\\*$/.test(validType)) {\n        // This is something like a image/* mime type\n        return baseMimeType === validType.replace(/\\/.*$/, '');\n      }\n      return mimeType === validType;\n    });\n  }\n  return true;\n};\n\nmodule.exports = exports['default'];\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value"]],"~:compiled-at",1532351402167,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_upload$lib$attr_accept.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,8CAAA,CAAkE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG/HC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CI,MAAO,CAAA,CADoC,CAA7C,CAOAJ,QAAA,CAAQ,SAAR,CAAA,CAAqB,QAAS,CAACK,IAAD,CAAOC,aAAP,CAAsB,CAClD,GAAID,IAAJ,EAAYC,aAAZ,CAA2B,CACrBC,aAAAA,CAAqBC,KAAAC,QAAA,CAAcH,aAAd,CAAA,CAA+BA,aAA/B,CAA+CA,aAAAI,MAAA,CAAoB,GAApB,CACxE,KAAIC,SAAWN,IAAAO,KAAXD,EAAwB,EAA5B,CACIE,SAAWR,IAAAS,KAAXD,EAAwB,EAD5B,CAEIE,aAAeF,QAAAG,QAAA,CAAiB,OAAjB,CAA0B,EAA1B,CAEnB,OAAOT,cAAAU,KAAA,CAAwB,QAAS,CAACH,IAAD,CAAO,CAC7C,IAAII,UAAYJ,IAAAK,KAAA,EAChB,OAA4B,GAA5B;AAAID,SAAAE,OAAA,CAAiB,CAAjB,CAAJ,EACkB,IAbf,CAaeT,QAAAU,YAAA,EAbf,CAauC,SAbvC,CAauCH,SAAAG,YAAA,EAbvC,CAAqD,EAArD,GAAAC,IAAAC,QAAA,CAAYC,SAAZ,CAAoBF,IAAAG,OAApB,CAAiCD,SAAAC,OAAjC,CAYH,EAEW,OAAAC,KAAA,CAAaR,SAAb,CAAJ,CAEEH,YAFF,GAEmBG,SAAAF,QAAA,CAAkB,OAAlB,CAA2B,EAA3B,CAFnB,CAIAH,QAJA,GAIaK,SARyB,CAAxC,CANkB,CAiB3B,MAAO,CAAA,CAlB2C,CAqBpDnB,OAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CA/B8G;\",\n\"sources\":[\"node_modules/rc-upload/lib/attr-accept.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_upload$lib$attr_accept\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nfunction endsWith(str, suffix) {\\n  return str.indexOf(suffix, str.length - suffix.length) !== -1;\\n}\\n\\nexports['default'] = function (file, acceptedFiles) {\\n  if (file && acceptedFiles) {\\n    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');\\n    var fileName = file.name || '';\\n    var mimeType = file.type || '';\\n    var baseMimeType = mimeType.replace(/\\\\/.*$/, '');\\n\\n    return acceptedFilesArray.some(function (type) {\\n      var validType = type.trim();\\n      if (validType.charAt(0) === '.') {\\n        return endsWith(fileName.toLowerCase(), validType.toLowerCase());\\n      } else if (/\\\\/\\\\*$/.test(validType)) {\\n        // This is something like a image/* mime type\\n        return baseMimeType === validType.replace(/\\\\/.*$/, '');\\n      }\\n      return mimeType === validType;\\n    });\\n  }\\n  return true;\\n};\\n\\nmodule.exports = exports['default'];\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Object\",\"defineProperty\",\"value\",\"file\",\"acceptedFiles\",\"acceptedFilesArray\",\"Array\",\"isArray\",\"split\",\"fileName\",\"name\",\"mimeType\",\"type\",\"baseMimeType\",\"replace\",\"some\",\"validType\",\"trim\",\"charAt\",\"toLowerCase\",\"str\",\"indexOf\",\"suffix\",\"length\",\"test\"]\n}\n"]