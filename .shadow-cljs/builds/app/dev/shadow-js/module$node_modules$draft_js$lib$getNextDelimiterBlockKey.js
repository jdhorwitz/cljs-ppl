["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/getNextDelimiterBlockKey.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$getNextDelimiterBlockKey=function(global,process,require,module,exports,shadow$shims){var ContentBlockNode=require(\"module$node_modules$draft_js$lib$ContentBlockNode\");module.exports=function(block,blockMap){if(!(block instanceof ContentBlockNode))return null;var nextSiblingKey=block.getNextSiblingKey();if(nextSiblingKey)return nextSiblingKey;block=block.getParentKey();if(!block)return null;for(block=blockMap.get(block);block&&!block.getNextSiblingKey();)block=\n(block=block.getParentKey())?blockMap.get(block):null;return block?block.getNextSiblingKey():null}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$getNextDelimiterBlockKey\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNextDelimiterBlockKey\n * @format\n * \n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\n\nvar ContentBlockNode = require('./ContentBlockNode');\n\nvar getNextDelimiterBlockKey = function getNextDelimiterBlockKey(block, blockMap) {\n  var isExperimentalTreeBlock = block instanceof ContentBlockNode;\n\n  if (!isExperimentalTreeBlock) {\n    return null;\n  }\n\n  var nextSiblingKey = block.getNextSiblingKey();\n\n  if (nextSiblingKey) {\n    return nextSiblingKey;\n  }\n\n  var parent = block.getParentKey();\n\n  if (!parent) {\n    return null;\n  }\n\n  var nextNonDescendantBlock = blockMap.get(parent);\n  while (nextNonDescendantBlock && !nextNonDescendantBlock.getNextSiblingKey()) {\n    var parentKey = nextNonDescendantBlock.getParentKey();\n    nextNonDescendantBlock = parentKey ? blockMap.get(parentKey) : null;\n  }\n\n  if (!nextNonDescendantBlock) {\n    return null;\n  }\n\n  return nextNonDescendantBlock.getNextSiblingKey();\n};\n\nmodule.exports = getNextDelimiterBlockKey;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$draft_js$lib$ContentBlockNode"]],"~:properties",["^5",[]],"~:compiled-at",1532351402129,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$getNextDelimiterBlockKey.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,0DAAA,CAA8E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAmB3I,IAAIC,iBAAmBJ,OAAA,CAAQ,mDAAR,CAkCvBC,OAAAC,QAAA,CAhC+BG,QAAiC,CAACC,KAAD,CAAQC,QAAR,CAAkB,CAGhF,GAAI,EAF0BD,KAE1B,WAF2CF,iBAE3C,CAAJ,CACE,MAAO,KAGT,KAAII,eAAiBF,KAAAG,kBAAA,EAErB,IAAID,cAAJ,CACE,MAAOA,eAGLE,MAAAA,CAASJ,KAAAK,aAAA,EAEb,IAAI,CAACD,KAAL,CACE,MAAO,KAIT,KADIE,KACJ,CAD6BL,QAAAM,IAAA,CAAaH,KAAb,CAC7B,CAAOE,KAAP,EAAiC,CAACA,KAAAH,kBAAA,EAAlC,CAAA,CAEEG,KAAA;AAAyB,CADrBE,KACqB,CADTF,KAAAD,aAAA,EACS,EAAYJ,QAAAM,IAAA,CAAaC,KAAb,CAAZ,CAAsC,IAGjE,OAAKF,MAAL,CAIOA,KAAAH,kBAAA,EAJP,CACS,IA1BuE,CArByD;\",\n\"sources\":[\"node_modules/draft-js/lib/getNextDelimiterBlockKey.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$getNextDelimiterBlockKey\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule getNextDelimiterBlockKey\\n * @format\\n * \\n *\\n * This is unstable and not part of the public API and should not be used by\\n * production systems. This file may be update/removed without notice.\\n */\\n\\nvar ContentBlockNode = require('./ContentBlockNode');\\n\\nvar getNextDelimiterBlockKey = function getNextDelimiterBlockKey(block, blockMap) {\\n  var isExperimentalTreeBlock = block instanceof ContentBlockNode;\\n\\n  if (!isExperimentalTreeBlock) {\\n    return null;\\n  }\\n\\n  var nextSiblingKey = block.getNextSiblingKey();\\n\\n  if (nextSiblingKey) {\\n    return nextSiblingKey;\\n  }\\n\\n  var parent = block.getParentKey();\\n\\n  if (!parent) {\\n    return null;\\n  }\\n\\n  var nextNonDescendantBlock = blockMap.get(parent);\\n  while (nextNonDescendantBlock && !nextNonDescendantBlock.getNextSiblingKey()) {\\n    var parentKey = nextNonDescendantBlock.getParentKey();\\n    nextNonDescendantBlock = parentKey ? blockMap.get(parentKey) : null;\\n  }\\n\\n  if (!nextNonDescendantBlock) {\\n    return null;\\n  }\\n\\n  return nextNonDescendantBlock.getNextSiblingKey();\\n};\\n\\nmodule.exports = getNextDelimiterBlockKey;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"ContentBlockNode\",\"getNextDelimiterBlockKey\",\"block\",\"blockMap\",\"nextSiblingKey\",\"getNextSiblingKey\",\"parent\",\"getParentKey\",\"nextNonDescendantBlock\",\"get\",\"parentKey\"]\n}\n"]