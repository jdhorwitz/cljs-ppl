["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/DraftEntitySegments.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$DraftEntitySegments=function(global,process,require,module,exports,shadow$shims){module.exports={getRemovalRange:function(selectionStart,selectionEnd,text,entityStart,direction){var segments=text.split(\" \");segments=segments.map(function(segment,ii){if(\"forward\"===direction){if(0<ii)return\" \"+segment}else if(ii<segments.length-1)return segment+\" \";return segment});for(var segmentStart=entityStart,segmentEnd,removalStart=null,removalEnd=null,jj=0;jj<\nsegments.length;jj++){segmentEnd=segments[jj];segmentEnd=segmentStart+segmentEnd.length;if(selectionStart<segmentEnd&&segmentStart<selectionEnd)null===removalStart&&(removalStart=segmentStart),removalEnd=segmentEnd;else if(null!==removalStart)break;segmentStart=segmentEnd}selectionStart=entityStart+text.length;selectionEnd=removalStart===entityStart;text=removalEnd===selectionStart;if(!selectionEnd&&text||selectionEnd&&!text)\"forward\"===direction?removalEnd!==selectionStart&&removalEnd++:removalStart!==\nentityStart&&removalStart--;return{start:removalStart,end:removalEnd}}}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$DraftEntitySegments\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule DraftEntitySegments\n * @format\n * \n */\n\n'use strict';\n\n/**\n * Identify the range to delete from a segmented entity.\n *\n * Rules:\n *\n *  Example: 'John F. Kennedy'\n *\n *   - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\n *     will return the range of that text.\n *\n *       'John F. Kennedy' -> 'John F.'\n *                  ^\n *\n *   - Forward deletion of whitespace will remove the following section:\n *\n *       'John F. Kennedy' -> 'John Kennedy'\n *            ^\n *\n *   - Backward deletion of whitespace will remove the previous section:\n *\n *       'John F. Kennedy' -> 'F. Kennedy'\n *            ^\n */\nvar DraftEntitySegments = {\n  getRemovalRange: function getRemovalRange(selectionStart, selectionEnd, text, entityStart, direction) {\n    var segments = text.split(' ');\n    segments = segments.map(function ( /*string*/segment, /*number*/ii) {\n      if (direction === 'forward') {\n        if (ii > 0) {\n          return ' ' + segment;\n        }\n      } else if (ii < segments.length - 1) {\n        return segment + ' ';\n      }\n      return segment;\n    });\n\n    var segmentStart = entityStart;\n    var segmentEnd;\n    var segment;\n    var removalStart = null;\n    var removalEnd = null;\n\n    for (var jj = 0; jj < segments.length; jj++) {\n      segment = segments[jj];\n      segmentEnd = segmentStart + segment.length;\n\n      // Our selection overlaps this segment.\n      if (selectionStart < segmentEnd && segmentStart < selectionEnd) {\n        if (removalStart !== null) {\n          removalEnd = segmentEnd;\n        } else {\n          removalStart = segmentStart;\n          removalEnd = segmentEnd;\n        }\n      } else if (removalStart !== null) {\n        break;\n      }\n\n      segmentStart = segmentEnd;\n    }\n\n    var entityEnd = entityStart + text.length;\n    var atStart = removalStart === entityStart;\n    var atEnd = removalEnd === entityEnd;\n\n    if (!atStart && atEnd || atStart && !atEnd) {\n      if (direction === 'forward') {\n        if (removalEnd !== entityEnd) {\n          removalEnd++;\n        }\n      } else if (removalStart !== entityStart) {\n        removalStart--;\n      }\n    }\n\n    return {\n      start: removalStart,\n      end: removalEnd\n    };\n  }\n};\n\nmodule.exports = DraftEntitySegments;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["start","getRemovalRange","end"]],"~:compiled-at",1532351402127,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$DraftEntitySegments.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,qDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAmGtIF,MAAAC,QAAA,CA5D0BE,CACxBC,gBAAiBA,QAAwB,CAACC,cAAD,CAAiBC,YAAjB,CAA+BC,IAA/B,CAAqCC,WAArC,CAAkDC,SAAlD,CAA6D,CACpG,IAAIC,SAAWH,IAAAI,MAAA,CAAW,GAAX,CACfD,SAAA,CAAWA,QAAAE,IAAA,CAAa,QAAS,CAAYC,OAAZ,CAA+BC,EAA/B,CAAmC,CAClE,GAAkB,SAAlB,GAAIL,SAAJ,CACE,IAAS,CAAT,CAAIK,EAAJ,CACE,MAAO,GAAP,CAAaD,OADf,CADF,IAIO,IAAIC,EAAJ,CAASJ,QAAAK,OAAT,CAA2B,CAA3B,CACL,MAAOF,QAAP,CAAiB,GAEnB,OAAOA,QAR2D,CAAzD,CAiBX,KANA,IAAIG,aAAeR,WAAnB,CACIS,UADJ,CAGIC,aAAe,IAHnB,CAIIC,WAAa,IAJjB,CAMSC,GAAK,CAAd,CAAiBA,EAAjB;AAAsBV,QAAAK,OAAtB,CAAuCK,EAAA,EAAvC,CAA6C,CAC3CP,UAAA,CAAUH,QAAA,CAASU,EAAT,CACVH,WAAA,CAAaD,YAAb,CAA4BH,UAAAE,OAG5B,IAAIV,cAAJ,CAAqBY,UAArB,EAAmCD,YAAnC,CAAkDV,YAAlD,CACuB,IACnB,GADEY,YACF,GAEAA,YAFA,CAEeF,YAFf,EAAAG,UAAA,CAAaF,UAFjB,KAOO,IAAqB,IAArB,GAAIC,YAAJ,CACL,KAGFF,aAAA,CAAeC,UAhB4B,CAmBzCI,cAAAA,CAAYb,WAAZa,CAA0Bd,IAAAQ,OAC1BO,aAAAA,CAAUJ,YAAVI,GAA2Bd,WAC3Be,KAAAA,CAAQJ,UAARI,GAAuBF,cAE3B,IAAI,CAACC,YAAL,EAAgBC,IAAhB,EAAyBD,YAAzB,EAAoC,CAACC,IAArC,CACoB,SAAlB,GAAId,SAAJ,CACMU,UADN,GACqBE,cADrB,EAEIF,UAAA,EAFJ,CAIWD,YAJX;AAI4BV,WAJ5B,EAKEU,YAAA,EAIJ,OAAO,CACLM,MAAON,YADF,CAELO,IAAKN,UAFA,CApD6F,CAD9EhB,CAvC4G;\",\n\"sources\":[\"node_modules/draft-js/lib/DraftEntitySegments.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$DraftEntitySegments\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule DraftEntitySegments\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\n/**\\n * Identify the range to delete from a segmented entity.\\n *\\n * Rules:\\n *\\n *  Example: 'John F. Kennedy'\\n *\\n *   - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\\n *     will return the range of that text.\\n *\\n *       'John F. Kennedy' -> 'John F.'\\n *                  ^\\n *\\n *   - Forward deletion of whitespace will remove the following section:\\n *\\n *       'John F. Kennedy' -> 'John Kennedy'\\n *            ^\\n *\\n *   - Backward deletion of whitespace will remove the previous section:\\n *\\n *       'John F. Kennedy' -> 'F. Kennedy'\\n *            ^\\n */\\nvar DraftEntitySegments = {\\n  getRemovalRange: function getRemovalRange(selectionStart, selectionEnd, text, entityStart, direction) {\\n    var segments = text.split(' ');\\n    segments = segments.map(function ( /*string*/segment, /*number*/ii) {\\n      if (direction === 'forward') {\\n        if (ii > 0) {\\n          return ' ' + segment;\\n        }\\n      } else if (ii < segments.length - 1) {\\n        return segment + ' ';\\n      }\\n      return segment;\\n    });\\n\\n    var segmentStart = entityStart;\\n    var segmentEnd;\\n    var segment;\\n    var removalStart = null;\\n    var removalEnd = null;\\n\\n    for (var jj = 0; jj < segments.length; jj++) {\\n      segment = segments[jj];\\n      segmentEnd = segmentStart + segment.length;\\n\\n      // Our selection overlaps this segment.\\n      if (selectionStart < segmentEnd && segmentStart < selectionEnd) {\\n        if (removalStart !== null) {\\n          removalEnd = segmentEnd;\\n        } else {\\n          removalStart = segmentStart;\\n          removalEnd = segmentEnd;\\n        }\\n      } else if (removalStart !== null) {\\n        break;\\n      }\\n\\n      segmentStart = segmentEnd;\\n    }\\n\\n    var entityEnd = entityStart + text.length;\\n    var atStart = removalStart === entityStart;\\n    var atEnd = removalEnd === entityEnd;\\n\\n    if (!atStart && atEnd || atStart && !atEnd) {\\n      if (direction === 'forward') {\\n        if (removalEnd !== entityEnd) {\\n          removalEnd++;\\n        }\\n      } else if (removalStart !== entityStart) {\\n        removalStart--;\\n      }\\n    }\\n\\n    return {\\n      start: removalStart,\\n      end: removalEnd\\n    };\\n  }\\n};\\n\\nmodule.exports = DraftEntitySegments;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"DraftEntitySegments\",\"getRemovalRange\",\"selectionStart\",\"selectionEnd\",\"text\",\"entityStart\",\"direction\",\"segments\",\"split\",\"map\",\"segment\",\"ii\",\"length\",\"segmentStart\",\"segmentEnd\",\"removalStart\",\"removalEnd\",\"jj\",\"entityEnd\",\"atStart\",\"atEnd\",\"start\",\"end\"]\n}\n"]