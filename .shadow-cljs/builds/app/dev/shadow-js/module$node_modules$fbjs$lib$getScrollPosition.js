["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/fbjs/lib/getScrollPosition.js"],"~:js","shadow$provide.module$node_modules$fbjs$lib$getScrollPosition=function(global,process,require,module,exports,shadow$shims){var getDocumentScrollElement=require(\"module$node_modules$fbjs$lib$getDocumentScrollElement\"),getUnboundedScrollPosition=require(\"module$node_modules$fbjs$lib$getUnboundedScrollPosition\");module.exports=function(scrollable){var documentScrollElement=getDocumentScrollElement(scrollable.ownerDocument||scrollable.document);scrollable.Window&&scrollable instanceof scrollable.Window&&\n(scrollable=documentScrollElement);var scrollPosition=getUnboundedScrollPosition(scrollable);documentScrollElement=scrollable===documentScrollElement?scrollable.ownerDocument.documentElement:scrollable;var yMax=scrollable.scrollHeight-documentScrollElement.clientHeight;scrollPosition.x=Math.max(0,Math.min(scrollPosition.x,scrollable.scrollWidth-documentScrollElement.clientWidth));scrollPosition.y=Math.max(0,Math.min(scrollPosition.y,yMax));return scrollPosition}}","~:source","shadow$provide[\"module$node_modules$fbjs$lib$getScrollPosition\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @typechecks\n */\n\n'use strict';\n\nvar getDocumentScrollElement = require('./getDocumentScrollElement');\nvar getUnboundedScrollPosition = require('./getUnboundedScrollPosition');\n\n/**\n * Gets the scroll position of the supplied element or window.\n *\n * The return values are bounded. This means that if the scroll position is\n * negative or exceeds the element boundaries (which is possible using inertial\n * scrolling), you will get zero or the maximum scroll position, respectively.\n *\n * If you need the unbound scroll position, use `getUnboundedScrollPosition`.\n *\n * @param {DOMWindow|DOMElement} scrollable\n * @return {object} Map with `x` and `y` keys.\n */\nfunction getScrollPosition(scrollable) {\n  var documentScrollElement = getDocumentScrollElement(scrollable.ownerDocument || scrollable.document);\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\n    scrollable = documentScrollElement;\n  }\n  var scrollPosition = getUnboundedScrollPosition(scrollable);\n\n  var viewport = scrollable === documentScrollElement ? scrollable.ownerDocument.documentElement : scrollable;\n\n  var xMax = scrollable.scrollWidth - viewport.clientWidth;\n  var yMax = scrollable.scrollHeight - viewport.clientHeight;\n\n  scrollPosition.x = Math.max(0, Math.min(scrollPosition.x, xMax));\n  scrollPosition.y = Math.max(0, Math.min(scrollPosition.y, yMax));\n\n  return scrollPosition;\n}\n\nmodule.exports = getScrollPosition;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$getUnboundedScrollPosition","~$module$node_modules$fbjs$lib$getDocumentScrollElement"]],"~:properties",["^5",["x","y"]],"~:compiled-at",1532351402140,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$fbjs$lib$getScrollPosition.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,+CAAA,CAAmE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAYhI,IAAIC,yBAA2BJ,OAAA,CAAQ,uDAAR,CAA/B,CACIK,2BAA6BL,OAAA,CAAQ,yDAAR,CAgCjCC,OAAAC,QAAA,CAlBAI,QAA0B,CAACC,UAAD,CAAa,CACrC,IAAIC,sBAAwBJ,wBAAA,CAAyBG,UAAAE,cAAzB,EAAqDF,UAAAG,SAArD,CACxBH,WAAAI,OAAJ,EAAyBJ,UAAzB,WAA+CA,WAAAI,OAA/C;CACEJ,UADF,CACeC,qBADf,CAGA,KAAII,eAAiBP,0BAAA,CAA2BE,UAA3B,CAEjBM,sBAAAA,CAAWN,UAAA,GAAeC,qBAAf,CAAuCD,UAAAE,cAAAK,gBAAvC,CAAkFP,UAGjG,KAAIQ,KAAOR,UAAAS,aAAPD,CAAiCF,qBAAAI,aAErCL,eAAAM,EAAA,CAAmBC,IAAAC,IAAA,CAAS,CAAT,CAAYD,IAAAE,IAAA,CAAST,cAAAM,EAAT,CAHpBX,UAAAe,YAGoB,CAHKT,qBAAAU,YAGL,CAAZ,CACnBX,eAAAY,EAAA,CAAmBL,IAAAC,IAAA,CAAS,CAAT,CAAYD,IAAAE,IAAA,CAAST,cAAAY,EAAT,CAA2BT,IAA3B,CAAZ,CAEnB,OAAOH,eAf8B,CA3ByF;\",\n\"sources\":[\"node_modules/fbjs/lib/getScrollPosition.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$fbjs$lib$getScrollPosition\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n *\\n * This source code is licensed under the MIT license found in the\\n * LICENSE file in the root directory of this source tree.\\n *\\n * @typechecks\\n */\\n\\n'use strict';\\n\\nvar getDocumentScrollElement = require('./getDocumentScrollElement');\\nvar getUnboundedScrollPosition = require('./getUnboundedScrollPosition');\\n\\n/**\\n * Gets the scroll position of the supplied element or window.\\n *\\n * The return values are bounded. This means that if the scroll position is\\n * negative or exceeds the element boundaries (which is possible using inertial\\n * scrolling), you will get zero or the maximum scroll position, respectively.\\n *\\n * If you need the unbound scroll position, use `getUnboundedScrollPosition`.\\n *\\n * @param {DOMWindow|DOMElement} scrollable\\n * @return {object} Map with `x` and `y` keys.\\n */\\nfunction getScrollPosition(scrollable) {\\n  var documentScrollElement = getDocumentScrollElement(scrollable.ownerDocument || scrollable.document);\\n  if (scrollable.Window && scrollable instanceof scrollable.Window) {\\n    scrollable = documentScrollElement;\\n  }\\n  var scrollPosition = getUnboundedScrollPosition(scrollable);\\n\\n  var viewport = scrollable === documentScrollElement ? scrollable.ownerDocument.documentElement : scrollable;\\n\\n  var xMax = scrollable.scrollWidth - viewport.clientWidth;\\n  var yMax = scrollable.scrollHeight - viewport.clientHeight;\\n\\n  scrollPosition.x = Math.max(0, Math.min(scrollPosition.x, xMax));\\n  scrollPosition.y = Math.max(0, Math.min(scrollPosition.y, yMax));\\n\\n  return scrollPosition;\\n}\\n\\nmodule.exports = getScrollPosition;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"getDocumentScrollElement\",\"getUnboundedScrollPosition\",\"getScrollPosition\",\"scrollable\",\"documentScrollElement\",\"ownerDocument\",\"document\",\"Window\",\"scrollPosition\",\"viewport\",\"documentElement\",\"yMax\",\"scrollHeight\",\"clientHeight\",\"x\",\"Math\",\"max\",\"min\",\"scrollWidth\",\"clientWidth\",\"y\"]\n}\n"]