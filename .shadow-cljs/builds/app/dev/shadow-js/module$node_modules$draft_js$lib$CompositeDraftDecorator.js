["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/CompositeDraftDecorator.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$CompositeDraftDecorator=function(global,process,require,module,exports,shadow$shims){var List=require(\"module$node_modules$immutable$dist$immutable\").List;global=function(){function CompositeDraftDecorator(decorators){if(!(this instanceof CompositeDraftDecorator))throw new TypeError(\"Cannot call a class as a function\");this._decorators=decorators.slice()}CompositeDraftDecorator.prototype.getDecorations=function(block,contentState){var decorations=Array(block.getText().length).fill(null);\nthis._decorators.forEach(function(decorator,ii){var counter=0;decorator=decorator.strategy;decorator(block,function(start,end){var JSCompiler_inline_result;a:{for(JSCompiler_inline_result=start;JSCompiler_inline_result<end;JSCompiler_inline_result++)if(null!=decorations[JSCompiler_inline_result]){JSCompiler_inline_result=!1;break a}JSCompiler_inline_result=!0}if(JSCompiler_inline_result){for(JSCompiler_inline_result=ii+\".\"+counter;start<end;start++)decorations[start]=JSCompiler_inline_result;counter++}},\ncontentState)});return List(decorations)};CompositeDraftDecorator.prototype.getComponentForKey=function(key){key=parseInt(key.split(\".\")[0],10);return this._decorators[key].component};CompositeDraftDecorator.prototype.getPropsForKey=function(key){key=parseInt(key.split(\".\")[0],10);return this._decorators[key].props};return CompositeDraftDecorator}();module.exports=global}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$CompositeDraftDecorator\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule CompositeDraftDecorator\n * @format\n * \n */\n\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Immutable = require('immutable');\n\nvar List = Immutable.List;\n\n\nvar DELIMITER = '.';\n\n/**\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\n * instances to identify sections of a ContentBlock that should be rendered\n * in a \"decorated\" manner. For example, hashtags, mentions, and links may\n * be intended to stand out visually, be rendered as anchors, etc.\n *\n * The list of decorators supplied to the constructor will be used in the\n * order they are provided. This allows the caller to specify a priority for\n * string matching, in case of match collisions among decorators.\n *\n * For instance, I may have a link with a `#` in its text. Though this section\n * of text may match our hashtag decorator, it should not be treated as a\n * hashtag. I should therefore list my link DraftDecorator\n * before my hashtag DraftDecorator when constructing this composite\n * decorator instance.\n *\n * Thus, when a collision like this is encountered, the earlier match is\n * preserved and the new match is discarded.\n */\n\nvar CompositeDraftDecorator = function () {\n  function CompositeDraftDecorator(decorators) {\n    _classCallCheck(this, CompositeDraftDecorator);\n\n    // Copy the decorator array, since we use this array order to determine\n    // precedence of decoration matching. If the array is mutated externally,\n    // we don't want to be affected here.\n    this._decorators = decorators.slice();\n  }\n\n  CompositeDraftDecorator.prototype.getDecorations = function getDecorations(block, contentState) {\n    var decorations = Array(block.getText().length).fill(null);\n\n    this._decorators.forEach(function ( /*object*/decorator, /*number*/ii) {\n      var counter = 0;\n      var strategy = decorator.strategy;\n      var callback = function callback( /*number*/start, /*number*/end) {\n        // Find out if any of our matching range is already occupied\n        // by another decorator. If so, discard the match. Otherwise, store\n        // the component key for rendering.\n        if (canOccupySlice(decorations, start, end)) {\n          occupySlice(decorations, start, end, ii + DELIMITER + counter);\n          counter++;\n        }\n      };\n      strategy(block, callback, contentState);\n    });\n\n    return List(decorations);\n  };\n\n  CompositeDraftDecorator.prototype.getComponentForKey = function getComponentForKey(key) {\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n    return this._decorators[componentKey].component;\n  };\n\n  CompositeDraftDecorator.prototype.getPropsForKey = function getPropsForKey(key) {\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\n    return this._decorators[componentKey].props;\n  };\n\n  return CompositeDraftDecorator;\n}();\n\n/**\n * Determine whether we can occupy the specified slice of the decorations\n * array.\n */\n\n\nfunction canOccupySlice(decorations, start, end) {\n  for (var ii = start; ii < end; ii++) {\n    if (decorations[ii] != null) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Splice the specified component into our decoration array at the desired\n * range.\n */\nfunction occupySlice(targetArr, start, end, componentKey) {\n  for (var ii = start; ii < end; ii++) {\n    targetArr[ii] = componentKey;\n  }\n}\n\nmodule.exports = CompositeDraftDecorator;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$immutable$dist$immutable"]],"~:properties",["^5",["getPropsForKey","getComponentForKey","getDecorations","_decorators"]],"~:compiled-at",1532351402134,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$CompositeDraftDecorator.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,yDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAoB1I,IAAIC,KAFYJ,OAAAK,CAAQ,8CAARA,CAELD,KAyBPE,OAAAA,CAA0B,QAAS,EAAG,CACxCA,QAASA,wBAAuB,CAACC,UAAD,CAAa,CA9BG,GAAI,EA+BlCC,IA/BkC,WA+B5BF,wBA/B4B,CAAJ,CAA0C,KAAM,KAAIG,SAAJ,CAAc,mCAAd,CAAN,CAoCxF,IAAAC,YAAA,CAAmBH,UAAAI,MAAA,EANwB,CAS7CL,uBAAAM,UAAAC,eAAA,CAAmDC,QAAuB,CAACC,KAAD,CAAQC,YAAR,CAAsB,CAC9F,IAAIC,YAAcC,KAAA,CAAMH,KAAAI,QAAA,EAAAC,OAAN,CAAAC,KAAA,CAAmC,IAAnC,CAElB;IAAAX,YAAAY,QAAA,CAAyB,QAAS,CAAYC,SAAZ,CAAiCC,EAAjC,CAAqC,CACrE,IAAIC,QAAU,CACVC,UAAAA,CAAWH,SAAAG,SAUfA,UAAA,CAASX,KAAT,CATeY,QAAiB,CAAYC,KAAZ,CAA6BC,GAA7B,CAAkC,CAI5D,IAAA,wBA8BqC,EAAA,CAAA,CAC/C,IAASL,wBAAT,CA/BsCI,KA+BtC,CAAqBJ,wBAArB,CA/B6CK,GA+B7C,CAA+BL,wBAAA,EAA/B,CACE,GAAuB,IAAvB,EAhCuBP,WAgCnB,CAAYO,wBAAZ,CAAJ,CAA6B,CAC3B,wBAAA,CAAO,CAAA,CAAP,OAAA,CAD2B,CAI/B,wBAAA,CAAO,CAAA,CANwC,CA9BzC,GAAI,wBAAJ,CAA6C,CA4CnD,IA3C6C,wBA2C7C,CA3C6CA,EA2C7C,CAtFcM,GAsFd,CA3C8DL,OA2C9D,CAAqBD,KAArB,CA3CwCK,GA2CxC,CAA+BL,KAAA,EAA/B,CA3CoBP,WA4ClB,CAAUO,KAAV,CAAA,CAAgBO,wBA3CVN,QAAA,EAF2C,CAJmB,CASlE;AAA0BT,YAA1B,CAZqE,CAAvE,CAeA,OAAOZ,KAAA,CAAKa,WAAL,CAlBuF,CAqBhGX,wBAAAM,UAAAoB,mBAAA,CAAuDC,QAA2B,CAACC,GAAD,CAAM,CAClFH,GAAAA,CAAeI,QAAA,CAASD,GAAAE,MAAA,CAtDhBN,GAsDgB,CAAA,CAAqB,CAArB,CAAT,CAAkC,EAAlC,CACnB,OAAO,KAAApB,YAAA,CAAiBqB,GAAjB,CAAAM,UAF+E,CAKxF/B,wBAAAM,UAAA0B,eAAA,CAAmDC,QAAuB,CAACL,GAAD,CAAM,CAC1EH,GAAAA,CAAeI,QAAA,CAASD,GAAAE,MAAA,CA3DhBN,GA2DgB,CAAA,CAAqB,CAArB,CAAT,CAAkC,EAAlC,CACnB,OAAO,KAAApB,YAAA,CAAiBqB,GAAjB,CAAAS,MAFuE,CAKhF,OAAOlC,wBAzCiC,CAAZ,EAqE9BL,OAAAC,QAAA,CAAiBI,MAlHyH;\",\n\"sources\":[\"node_modules/draft-js/lib/CompositeDraftDecorator.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$CompositeDraftDecorator\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule CompositeDraftDecorator\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\\\"Cannot call a class as a function\\\"); } }\\n\\nvar Immutable = require('immutable');\\n\\nvar List = Immutable.List;\\n\\n\\nvar DELIMITER = '.';\\n\\n/**\\n * A CompositeDraftDecorator traverses through a list of DraftDecorator\\n * instances to identify sections of a ContentBlock that should be rendered\\n * in a \\\"decorated\\\" manner. For example, hashtags, mentions, and links may\\n * be intended to stand out visually, be rendered as anchors, etc.\\n *\\n * The list of decorators supplied to the constructor will be used in the\\n * order they are provided. This allows the caller to specify a priority for\\n * string matching, in case of match collisions among decorators.\\n *\\n * For instance, I may have a link with a `#` in its text. Though this section\\n * of text may match our hashtag decorator, it should not be treated as a\\n * hashtag. I should therefore list my link DraftDecorator\\n * before my hashtag DraftDecorator when constructing this composite\\n * decorator instance.\\n *\\n * Thus, when a collision like this is encountered, the earlier match is\\n * preserved and the new match is discarded.\\n */\\n\\nvar CompositeDraftDecorator = function () {\\n  function CompositeDraftDecorator(decorators) {\\n    _classCallCheck(this, CompositeDraftDecorator);\\n\\n    // Copy the decorator array, since we use this array order to determine\\n    // precedence of decoration matching. If the array is mutated externally,\\n    // we don't want to be affected here.\\n    this._decorators = decorators.slice();\\n  }\\n\\n  CompositeDraftDecorator.prototype.getDecorations = function getDecorations(block, contentState) {\\n    var decorations = Array(block.getText().length).fill(null);\\n\\n    this._decorators.forEach(function ( /*object*/decorator, /*number*/ii) {\\n      var counter = 0;\\n      var strategy = decorator.strategy;\\n      var callback = function callback( /*number*/start, /*number*/end) {\\n        // Find out if any of our matching range is already occupied\\n        // by another decorator. If so, discard the match. Otherwise, store\\n        // the component key for rendering.\\n        if (canOccupySlice(decorations, start, end)) {\\n          occupySlice(decorations, start, end, ii + DELIMITER + counter);\\n          counter++;\\n        }\\n      };\\n      strategy(block, callback, contentState);\\n    });\\n\\n    return List(decorations);\\n  };\\n\\n  CompositeDraftDecorator.prototype.getComponentForKey = function getComponentForKey(key) {\\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\\n    return this._decorators[componentKey].component;\\n  };\\n\\n  CompositeDraftDecorator.prototype.getPropsForKey = function getPropsForKey(key) {\\n    var componentKey = parseInt(key.split(DELIMITER)[0], 10);\\n    return this._decorators[componentKey].props;\\n  };\\n\\n  return CompositeDraftDecorator;\\n}();\\n\\n/**\\n * Determine whether we can occupy the specified slice of the decorations\\n * array.\\n */\\n\\n\\nfunction canOccupySlice(decorations, start, end) {\\n  for (var ii = start; ii < end; ii++) {\\n    if (decorations[ii] != null) {\\n      return false;\\n    }\\n  }\\n  return true;\\n}\\n\\n/**\\n * Splice the specified component into our decoration array at the desired\\n * range.\\n */\\nfunction occupySlice(targetArr, start, end, componentKey) {\\n  for (var ii = start; ii < end; ii++) {\\n    targetArr[ii] = componentKey;\\n  }\\n}\\n\\nmodule.exports = CompositeDraftDecorator;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"List\",\"Immutable\",\"CompositeDraftDecorator\",\"decorators\",\"instance\",\"TypeError\",\"_decorators\",\"slice\",\"prototype\",\"getDecorations\",\"CompositeDraftDecorator.prototype.getDecorations\",\"block\",\"contentState\",\"decorations\",\"Array\",\"getText\",\"length\",\"fill\",\"forEach\",\"decorator\",\"ii\",\"counter\",\"strategy\",\"callback\",\"start\",\"end\",\"DELIMITER\",\"componentKey\",\"getComponentForKey\",\"CompositeDraftDecorator.prototype.getComponentForKey\",\"key\",\"parseInt\",\"split\",\"component\",\"getPropsForKey\",\"CompositeDraftDecorator.prototype.getPropsForKey\",\"props\"]\n}\n"]