["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-tree-select/lib/Select.js"],"~:js","shadow$provide.module$node_modules$rc_tree_select$lib$Select=function(global,process,require,module,exports,shadow$shims){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}exports.__esModule=!0;global=require(\"module$node_modules$babel_runtime$helpers$extends\");var _extends3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$classCallCheck\");var _classCallCheck3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$possibleConstructorReturn\");\nvar _possibleConstructorReturn3=_interopRequireDefault(global);global=require(\"module$node_modules$babel_runtime$helpers$inherits\");var _inherits3=_interopRequireDefault(global);global=require(\"module$node_modules$react$index\");var _react2=_interopRequireDefault(global);global=require(\"module$node_modules$prop_types$index\");global=_interopRequireDefault(global);process=require(\"module$node_modules$react_lifecycles_compat$react_lifecycles_compat_cjs\");shadow$shims=require(\"module$node_modules$rc_util$lib$KeyCode\");\nvar _KeyCode2=_interopRequireDefault(shadow$shims),_util=require(\"module$node_modules$rc_tree$lib$util\");shadow$shims=require(\"module$node_modules$shallowequal$index\");var _shallowequal2=_interopRequireDefault(shadow$shims);shadow$shims=require(\"module$node_modules$raf$index\");var _raf2=_interopRequireDefault(shadow$shims);shadow$shims=require(\"module$node_modules$rc_tree_select$lib$SelectTrigger\");var _SelectTrigger2=_interopRequireDefault(shadow$shims);shadow$shims=require(\"module$node_modules$rc_tree_select$lib$Base$BaseSelector\");\nvar _BasePopup=require(\"module$node_modules$rc_tree_select$lib$Base$BasePopup\"),_SingleSelector=require(\"module$node_modules$rc_tree_select$lib$Selector$SingleSelector\"),_SingleSelector2=_interopRequireDefault(_SingleSelector);_SingleSelector=require(\"module$node_modules$rc_tree_select$lib$Selector$MultipleSelector$index\");var _MultipleSelector2=_interopRequireDefault(_SingleSelector),_SinglePopup=require(\"module$node_modules$rc_tree_select$lib$Popup$SinglePopup\"),_SinglePopup2=_interopRequireDefault(_SinglePopup);\n_SinglePopup=require(\"module$node_modules$rc_tree_select$lib$Popup$MultiplePopup\");var _MultiplePopup2=_interopRequireDefault(_SinglePopup);_SinglePopup=require(\"module$node_modules$rc_tree_select$lib$strategies\");var _util2=require(\"module$node_modules$rc_tree_select$lib$util\"),_propTypes3=require(\"module$node_modules$rc_tree_select$lib$propTypes\");require=require(\"module$node_modules$rc_tree_select$lib$SelectNode\");require=_interopRequireDefault(require);var Select$jscomp$0=function(_React$Component){function Select(props){(0,\n_classCallCheck3[\"default\"])(this,Select);var _this=(0,_possibleConstructorReturn3[\"default\"])(this,_React$Component.call(this,props));_initialiseProps.call(_this);var prefixAria=props.prefixAria,defaultOpen=props.defaultOpen;_this.state={open:props.open||defaultOpen,valueList:[],missValueList:[],selectorValueList:[],valueEntities:{},keyEntities:{},searchValue:\"\",init:!0};_this.selectorRef=(0,_util2.createRef)();_this.selectTriggerRef=(0,_util2.createRef)();_this.ariaId=(0,_util2.generateAriaId)(prefixAria+\n\"-list\");return _this}(0,_inherits3[\"default\"])(Select,_React$Component);Select.prototype.getChildContext=function(){return{rcTreeSelect:{onSelectorFocus:this.onSelectorFocus,onSelectorBlur:this.onSelectorBlur,onSelectorKeyDown:this.onComponentKeyDown,onSelectorClear:this.onSelectorClear,onMultipleSelectorRemove:this.onMultipleSelectorRemove,onTreeNodeSelect:this.onTreeNodeSelect,onTreeNodeCheck:this.onTreeNodeCheck,onPopupKeyDown:this.onComponentKeyDown,onSearchInputChange:this.onSearchInputChange,\nonSearchInputKeyDown:this.onSearchInputKeyDown}}};Select.getDerivedStateFromProps=function(nextProps,prevState){function processState(propName,updater){return prevProps[propName]!==nextProps[propName]?(updater(nextProps[propName],prevProps[propName]),!0):!1}var _prevState$prevProps=prevState.prevProps,prevProps=void 0===_prevState$prevProps?{}:_prevState$prevProps,treeCheckable=nextProps.treeCheckable,treeCheckStrictly=nextProps.treeCheckStrictly;_prevState$prevProps=nextProps.filterTreeNode;var treeNodeFilterProp=\nnextProps.treeNodeFilterProp,treeDataSimpleMode=nextProps.treeDataSimpleMode,newState={prevProps:nextProps,init:!1},valueRefresh=!1;processState(\"open\",function(propValue){newState.open=propValue});var treeData=void 0,treeDataChanged=!1,treeDataModeChanged=!1;processState(\"treeData\",function(propValue){treeData=propValue;treeDataChanged=!0});processState(\"treeDataSimpleMode\",function(propValue,prevValue){propValue&&(prevValue=prevValue&&!0!==prevValue?prevValue:{},(0,_shallowequal2[\"default\"])(propValue,\nprevValue)||(treeDataModeChanged=!0))});treeDataSimpleMode&&(treeDataChanged||treeDataModeChanged)&&(treeDataSimpleMode=(0,_extends3[\"default\"])({id:\"id\",pId:\"pId\",rootPId:null},!0!==treeDataSimpleMode?treeDataSimpleMode:{}),treeData=(0,_util2.parseSimpleTreeData)(nextProps.treeData,treeDataSimpleMode));nextProps.treeData||processState(\"children\",function(propValue){treeData=(0,_util2.convertTreeToData)(propValue)});if(treeData){treeDataSimpleMode=(0,_util2.convertDataToEntities)(treeData);var valueEntities=\ntreeDataSimpleMode.valueEntities,keyEntities=treeDataSimpleMode.keyEntities;newState.treeNodes=treeDataSimpleMode.treeNodes;newState.valueEntities=valueEntities;newState.keyEntities=keyEntities;valueRefresh=!0}prevState.init&&processState(\"defaultValue\",function(propValue){newState.valueList=(0,_util2.formatInternalValue)(propValue,nextProps);valueRefresh=!0});processState(\"value\",function(propValue){newState.valueList=(0,_util2.formatInternalValue)(propValue,nextProps);valueRefresh=!0});if(valueRefresh){var missValueList=\n[],filteredValueList=[],keyList=[];(newState.valueList||prevState.valueList).forEach(function(wrapperValue){var entity=(newState.valueEntities||prevState.valueEntities)[wrapperValue.value];entity?(keyList.push(entity.key),filteredValueList.push(wrapperValue)):missValueList.push(wrapperValue)});treeCheckable&&!treeCheckStrictly?(treeCheckable=(0,_util.calcCheckStateConduct)(newState.treeNodes||prevState.treeNodes,keyList).checkedKeys,newState.valueList=treeCheckable.map(function(key){return{value:(newState.keyEntities||\nprevState.keyEntities)[key].value}})):newState.valueList=filteredValueList;newState.missValueList=missValueList;newState.selectorValueList=(0,_util2.formatSelectorValue)(newState.valueList,nextProps,newState.valueEntities||prevState.valueEntities)}processState(\"inputValue\",function(propValue){null!==propValue&&(newState.searchValue=propValue)});processState(\"searchValue\",function(propValue){newState.searchValue=propValue});if(void 0!==newState.searchValue){var upperSearchValue=String(newState.searchValue).toUpperCase();\ntreeCheckable=_prevState$prevProps;!1===_prevState$prevProps?treeCheckable=function(){return!0}:\"function\"!==typeof treeCheckable&&(treeCheckable=function(_,node){return-1!==String(node.props[treeNodeFilterProp]).toUpperCase().indexOf(upperSearchValue)});newState.filteredTreeNodes=(0,_util2.getFilterTree)(newState.treeNodes||prevState.treeNodes,newState.searchValue,treeCheckable)}processState(\"showCheckedStrategy\",function(){newState.selectorValueList=newState.selectorValueList||(0,_util2.formatSelectorValue)(newState.valueList||\nprevState.valueList,nextProps,newState.valueEntities||prevState.valueEntities)});return newState};Select.prototype.componentDidMount=function(){var _props=this.props,disabled=_props.disabled;_props.autoFocus&&!disabled&&this.focus()};Select.prototype.componentDidUpdate=function(_,prevState){prevState.valueList!==this.state.valueList&&this.forcePopupAlign()};Select.prototype.focus=function(){this.selectorRef.current.focus()};Select.prototype.blur=function(){this.selectorRef.current.blur()};Select.prototype.render=\nfunction(){var _state=this.state,valueList=_state.valueList,missValueList=_state.missValueList,selectorValueList=_state.selectorValueList,valueEntities=_state.valueEntities,keyEntities=_state.keyEntities,searchValue=_state.searchValue,open=_state.open,focused=_state.focused,treeNodes=_state.treeNodes,filteredTreeNodes=_state.filteredTreeNodes,prefixCls=this.props.prefixCls;_state=this.isMultiple();valueList=(0,_extends3[\"default\"])({},this.props,{isMultiple:_state,valueList:valueList,selectorValueList:[].concat(missValueList,\nselectorValueList),valueEntities:valueEntities,keyEntities:keyEntities,searchValue:searchValue,upperSearchValue:(searchValue||\"\").toUpperCase(),open:open,focused:focused,dropdownPrefixCls:prefixCls+\"-dropdown\",ariaId:this.ariaId});treeNodes=_react2[\"default\"].createElement(_state?_MultiplePopup2[\"default\"]:_SinglePopup2[\"default\"],(0,_extends3[\"default\"])({},valueList,{onTreeExpanded:this.delayForcePopupAlign,treeNodes:treeNodes,filteredTreeNodes:filteredTreeNodes}));_state=_react2[\"default\"].createElement(_state?\n_MultipleSelector2[\"default\"]:_SingleSelector2[\"default\"],(0,_extends3[\"default\"])({},valueList,{ref:this.selectorRef,onChoiceAnimationLeave:this.forcePopupAlign}));return _react2[\"default\"].createElement(_SelectTrigger2[\"default\"],(0,_extends3[\"default\"])({},valueList,{ref:this.selectTriggerRef,popupElement:treeNodes,onKeyDown:this.onKeyDown,onDropdownVisibleChange:this.onDropdownVisibleChange}),_state)};return Select}(_react2[\"default\"].Component);Select$jscomp$0.propTypes={prefixCls:global[\"default\"].string,\nprefixAria:global[\"default\"].string,multiple:global[\"default\"].bool,showArrow:global[\"default\"].bool,open:global[\"default\"].bool,value:_propTypes3.valueProp,autoFocus:global[\"default\"].bool,defaultOpen:global[\"default\"].bool,defaultValue:_propTypes3.valueProp,showSearch:global[\"default\"].bool,placeholder:global[\"default\"].node,inputValue:global[\"default\"].string,searchValue:global[\"default\"].string,autoClearSearchValue:global[\"default\"].bool,searchPlaceholder:global[\"default\"].node,disabled:global[\"default\"].bool,\nchildren:global[\"default\"].node,labelInValue:global[\"default\"].bool,maxTagCount:global[\"default\"].number,maxTagPlaceholder:global[\"default\"].oneOfType([global[\"default\"].node,global[\"default\"].func]),maxTagTextLength:global[\"default\"].number,showCheckedStrategy:global[\"default\"].oneOf([_SinglePopup.SHOW_ALL,_SinglePopup.SHOW_PARENT,_SinglePopup.SHOW_CHILD]),dropdownMatchSelectWidth:global[\"default\"].bool,treeData:global[\"default\"].array,treeDataSimpleMode:global[\"default\"].oneOfType([global[\"default\"].bool,\nglobal[\"default\"].object]),treeNodeFilterProp:global[\"default\"].string,treeNodeLabelProp:global[\"default\"].string,treeCheckable:global[\"default\"].oneOfType([global[\"default\"].bool,global[\"default\"].node]),treeCheckStrictly:global[\"default\"].bool,treeIcon:global[\"default\"].bool,treeLine:global[\"default\"].bool,treeDefaultExpandAll:global[\"default\"].bool,treeDefaultExpandedKeys:global[\"default\"].array,loadData:global[\"default\"].func,filterTreeNode:global[\"default\"].oneOfType([global[\"default\"].func,\nglobal[\"default\"].bool]),notFoundContent:global[\"default\"].string,onSearch:global[\"default\"].func,onSelect:global[\"default\"].func,onDeselect:global[\"default\"].func,onChange:global[\"default\"].func,onDropdownVisibleChange:global[\"default\"].func};Select$jscomp$0.childContextTypes={rcTreeSelect:global[\"default\"].shape((0,_extends3[\"default\"])({},shadow$shims.selectorContextTypes,_SingleSelector.multipleSelectorContextTypes,_BasePopup.popupContextTypes,{onSearchInputChange:global[\"default\"].func,onSearchInputKeyDown:global[\"default\"].func}))};\nSelect$jscomp$0.defaultProps={prefixCls:\"rc-tree-select\",prefixAria:\"rc-tree-select\",showArrow:!0,showSearch:!0,autoClearSearchValue:!0,showCheckedStrategy:_SinglePopup.SHOW_CHILD,treeNodeFilterProp:\"value\",treeNodeLabelProp:\"title\",treeIcon:!1,notFoundContent:\"Not Found\"};var _initialiseProps=function(){var _this2=this;this.onSelectorFocus=function(){_this2.setState({focused:!0})};this.onSelectorBlur=function(){_this2.setState({focused:!1})};this.onComponentKeyDown=function(event){var keyCode=event.keyCode;\n_this2.state.open?_KeyCode2[\"default\"].ESC===keyCode?_this2.setOpenState(!1):-1!==[_KeyCode2[\"default\"].UP,_KeyCode2[\"default\"].DOWN,_KeyCode2[\"default\"].LEFT,_KeyCode2[\"default\"].RIGHT].indexOf(keyCode)&&event.stopPropagation():-1!==[_KeyCode2[\"default\"].ENTER,_KeyCode2[\"default\"].DOWN].indexOf(keyCode)&&_this2.setOpenState(!0)};this.onDeselect=function(wrappedValue,node,nodeEventInfo){var onDeselect=_this2.props.onDeselect;onDeselect&&onDeselect(wrappedValue,node,nodeEventInfo)};this.onSelectorClear=\nfunction(event){_this2.props.disabled||(_this2.triggerChange([],[]),_this2.isSearchValueControlled()||_this2.setUncontrolledState({searchValue:\"\",filteredTreeNodes:null}),event.stopPropagation())};this.onMultipleSelectorRemove=function(event,removeValue){event.stopPropagation();event=_this2.state;var valueList=event.valueList,missValueList=event.missValueList,valueEntities=event.valueEntities,_props2=_this2.props,treeCheckable=_props2.treeCheckable,treeCheckStrictly=_props2.treeCheckStrictly;event=\n_props2.treeNodeLabelProp;if(!_props2.disabled){var triggerEntity=valueEntities[removeValue];_props2=valueList;triggerEntity&&(_props2=treeCheckable&&!treeCheckStrictly?valueList.filter(function(_ref){_ref=valueEntities[_ref.value];return!(0,_util2.isPosRelated)(_ref.pos,triggerEntity.pos)}):valueList.filter(function(_ref2){return _ref2.value!==removeValue}));valueList=triggerEntity?triggerEntity.node:null;var extraInfo={triggerValue:removeValue,triggerNode:valueList},deselectInfo={node:valueList};\ntreeCheckable?(treeCheckable=_props2.map(function(_ref3){return valueEntities[_ref3.value]}),deselectInfo.event=\"check\",deselectInfo.checked=!1,deselectInfo.checkedNodes=treeCheckable.map(function(_ref4){return _ref4.node}),deselectInfo.checkedNodesPositions=treeCheckable.map(function(_ref5){return{node:_ref5.node,pos:_ref5.pos}}),extraInfo.allCheckedNodes=treeCheckStrictly?deselectInfo.checkedNodes:(0,_util2.flatToHierarchy)(treeCheckable).map(function(_ref6){return _ref6.node})):(deselectInfo.event=\n\"select\",deselectInfo.selected=!1,deselectInfo.selectedNodes=_props2.map(function(_ref7){return(valueEntities[_ref7.value]||{}).node}));missValueList=missValueList.filter(function(_ref8){return _ref8.value!==removeValue});treeCheckStrictly=void 0;treeCheckStrictly=_this2.isLabelInValue()?{label:valueList?valueList.props[event]:null,value:removeValue}:removeValue;_this2.onDeselect(treeCheckStrictly,valueList,deselectInfo);_this2.triggerChange(missValueList,_props2,extraInfo)}};this.onValueTrigger=\nfunction(isAdd,nodeList,nodeEventInfo,nodeExtraInfo){var node=nodeEventInfo.node,value=node.props.value,_state3=_this2.state,missValueList=_state3.missValueList,valueEntities=_state3.valueEntities,keyEntities=_state3.keyEntities;_state3=_state3.treeNodes;var _props3=_this2.props,inputValue=_props3.inputValue,treeNodeLabelProp=_props3.treeNodeLabelProp,onSelect=_props3.onSelect,treeCheckable=_props3.treeCheckable,treeCheckStrictly=_props3.treeCheckStrictly,autoClearSearchValue=_props3.autoClearSearchValue,\nlabel=node.props[treeNodeLabelProp];if(!_props3.disabled){_props3=void 0;_props3=_this2.isLabelInValue()?{value:value,label:label}:value;if(isAdd)onSelect&&onSelect(_props3,node,nodeEventInfo);else _this2.onDeselect(_props3,node,nodeEventInfo);nodeList=nodeList.map(function(_ref9){_ref9=_ref9.props;return{value:_ref9.value,label:_ref9[treeNodeLabelProp]}});treeCheckable&&!treeCheckStrictly&&(nodeList=nodeList.map(function(_ref10){return valueEntities[_ref10.value].key}),nodeList=isAdd?(0,_util.calcCheckStateConduct)(_state3,\nnodeList).checkedKeys:(0,_util2.calcUncheckConduct)(nodeList,valueEntities[value].key,keyEntities),nodeList=nodeList.map(function(key){key=keyEntities[key].node.props;return{value:key.value,label:key[treeNodeLabelProp]}}));_this2.isSearchValueControlled()||!autoClearSearchValue&&null!==inputValue||_this2.setUncontrolledState({searchValue:\"\",filteredTreeNodes:null});isAdd=(0,_extends3[\"default\"])({},nodeExtraInfo,{triggerValue:value,triggerNode:node});_this2.triggerChange(missValueList,nodeList,isAdd)}};\nthis.onTreeNodeSelect=function(_,nodeEventInfo){_=_this2.props;_.treeCheckable||(_.multiple||_this2.setOpenState(!1),_=nodeEventInfo.selected,_this2.onValueTrigger(_,nodeEventInfo.selectedNodes,nodeEventInfo,{selected:_}))};this.onTreeNodeCheck=function(_,nodeEventInfo){_=_this2.state;var searchValue=_.searchValue,keyEntities=_.keyEntities,valueEntities=_.valueEntities,valueList=_.valueList,checkedNodesPositions=nodeEventInfo.checkedNodesPositions;_=nodeEventInfo.checked;var extraInfo={checked:_},\ncheckedNodeList=nodeEventInfo.checkedNodes;_this2.props.treeCheckStrictly?extraInfo.allCheckedNodes=nodeEventInfo.checkedNodes:searchValue?(searchValue=valueList.map(function(_ref11){return valueEntities[_ref11.value]}).filter(function(entity){return entity}).map(function(_ref12){return _ref12.key}),valueList=void 0,_?(valueList=Array.from(new Set([].concat(searchValue,[checkedNodeList.map(function(_ref13){return valueEntities[_ref13.props.value].key})]))),checkedNodeList=valueList.map(function(key){return keyEntities[key].node})):\nvalueList=(0,_util2.calcUncheckConduct)(searchValue,nodeEventInfo.node.props.eventKey,keyEntities),extraInfo.allCheckedNodes=valueList.map(function(key){return(0,_util2.cleanEntity)(keyEntities[key])})):extraInfo.allCheckedNodes=(0,_util2.flatToHierarchy)(checkedNodesPositions);_this2.onValueTrigger(_,checkedNodeList,nodeEventInfo,extraInfo)};this.onDropdownVisibleChange=function(open){_this2.setOpenState(open,!0)};this.onSearchInputChange=function(_ref14){_ref14=_ref14.target.value;var treeNodes=\n_this2.state.treeNodes,_props5=_this2.props,onSearch=_props5.onSearch,filterTreeNode=_props5.filterTreeNode,treeNodeFilterProp=_props5.treeNodeFilterProp;onSearch&&onSearch(_ref14);_props5=!1;_this2.isSearchValueControlled()||(_props5=_this2.setUncontrolledState({searchValue:_ref14}),_this2.setOpenState(!0));if(_props5){var upperSearchValue=String(_ref14).toUpperCase();filterTreeNode||(filterTreeNode=function(_,node){return-1!==String(node.props[treeNodeFilterProp]).toUpperCase().indexOf(upperSearchValue)});\n_this2.setState({filteredTreeNodes:(0,_util2.getFilterTree)(treeNodes,_ref14,filterTreeNode)})}};this.onSearchInputKeyDown=function(event){var _state5=_this2.state,searchValue=_state5.searchValue;_state5=_state5.valueList;if(_KeyCode2[\"default\"].BACKSPACE===event.keyCode&&_this2.isMultiple()&&!searchValue&&_state5.length)_this2.onMultipleSelectorRemove(event,_state5[_state5.length-1].value)};this.setUncontrolledState=function(state){var needSync=!1,newState={};Object.keys(state).forEach(function(name){name in\n_this2.props||(needSync=!0,newState[name]=state[name])});needSync&&_this2.setState(newState);return needSync};this.setOpenState=function(open){var byTrigger=1<arguments.length&&void 0!==arguments[1]?arguments[1]:!1,onDropdownVisibleChange=_this2.props.onDropdownVisibleChange;onDropdownVisibleChange&&!1===onDropdownVisibleChange(open,{documentClickClose:!open&&byTrigger})||_this2.setUncontrolledState({open:open})};this.isMultiple=function(){var _props6=_this2.props,treeCheckable=_props6.treeCheckable;\nreturn!(!_props6.multiple&&!treeCheckable)};this.isLabelInValue=function(){return(0,_util2.isLabelInValue)(_this2.props)};this.isSearchValueControlled=function(){var inputValue=_this2.props.inputValue;return\"searchValue\"in _this2.props?!0:\"inputValue\"in _this2.props&&null!==inputValue};this.forcePopupAlign=function(){var $trigger=_this2.selectTriggerRef.current;$trigger&&$trigger.forcePopupAlign()};this.delayForcePopupAlign=function(){(0,_raf2[\"default\"])(_this2.forcePopupAlign)};this.triggerChange=\nfunction(missValueList,valueList){var extraInfo=2<arguments.length&&void 0!==arguments[2]?arguments[2]:{},valueEntities=_this2.state.valueEntities,_props7=_this2.props,onChange=_props7.onChange;if(!_props7.disabled&&(extraInfo=(0,_extends3[\"default\"])({preValue:_this2.state.selectorValueList.map(function(_ref15){return{label:_ref15.label,value:_ref15.value}})},extraInfo),_props7=(0,_util2.formatSelectorValue)(valueList,_this2.props,valueEntities),\"value\"in _this2.props||_this2.setState({missValueList:missValueList,\nvalueList:valueList,selectorValueList:_props7}),onChange)){valueEntities=void 0;valueEntities=_this2.isMultiple()?[].concat(missValueList,_props7):_props7.slice(0,1);var labelList=null;_props7=void 0;_this2.isLabelInValue()?_props7=valueEntities.map(function(_ref16){return{label:_ref16.label,value:_ref16.value}}):(labelList=[],_props7=valueEntities.map(function(_ref17){var value=_ref17.value;labelList.push(_ref17.label);return value}));_this2.isMultiple()||(_props7=_props7[0]);onChange(_props7,labelList,\nextraInfo)}}};Select$jscomp$0.TreeNode=require[\"default\"];Select$jscomp$0.SHOW_ALL=_SinglePopup.SHOW_ALL;Select$jscomp$0.SHOW_PARENT=_SinglePopup.SHOW_PARENT;Select$jscomp$0.SHOW_CHILD=_SinglePopup.SHOW_CHILD;Select$jscomp$0.displayName=\"TreeSelect\";(0,process.polyfill)(Select$jscomp$0);exports[\"default\"]=Select$jscomp$0;module.exports=exports[\"default\"]}","~:source","shadow$provide[\"module$node_modules$rc_tree_select$lib$Select\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nexports.__esModule = true;\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\n\nvar _KeyCode = require('rc-util/lib/KeyCode');\n\nvar _KeyCode2 = _interopRequireDefault(_KeyCode);\n\nvar _util = require('rc-tree/lib/util');\n\nvar _shallowequal = require('shallowequal');\n\nvar _shallowequal2 = _interopRequireDefault(_shallowequal);\n\nvar _raf = require('raf');\n\nvar _raf2 = _interopRequireDefault(_raf);\n\nvar _SelectTrigger = require('./SelectTrigger');\n\nvar _SelectTrigger2 = _interopRequireDefault(_SelectTrigger);\n\nvar _BaseSelector = require('./Base/BaseSelector');\n\nvar _BasePopup = require('./Base/BasePopup');\n\nvar _SingleSelector = require('./Selector/SingleSelector');\n\nvar _SingleSelector2 = _interopRequireDefault(_SingleSelector);\n\nvar _MultipleSelector = require('./Selector/MultipleSelector');\n\nvar _MultipleSelector2 = _interopRequireDefault(_MultipleSelector);\n\nvar _SinglePopup = require('./Popup/SinglePopup');\n\nvar _SinglePopup2 = _interopRequireDefault(_SinglePopup);\n\nvar _MultiplePopup = require('./Popup/MultiplePopup');\n\nvar _MultiplePopup2 = _interopRequireDefault(_MultiplePopup);\n\nvar _strategies = require('./strategies');\n\nvar _util2 = require('./util');\n\nvar _propTypes3 = require('./propTypes');\n\nvar _SelectNode = require('./SelectNode');\n\nvar _SelectNode2 = _interopRequireDefault(_SelectNode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n/**\n * ARIA: https://www.w3.org/TR/wai-aria/#combobox\n * Sample 1: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/combobox/aria1.1pattern/listbox-combo.html\n * Sample 2: https://www.w3.org/blog/wai-components-gallery/widget/combobox-with-aria-autocompleteinline/\n *\n * Tab logic:\n * Popup is close\n * 1. Focus input (mark component as focused)\n * 2. Press enter to show the popup\n * 3. If popup has input, focus it\n *\n * Popup is open\n * 1. press tab to close the popup\n * 2. Focus back to the selection input box\n * 3. Let the native tab going on\n *\n * TreeSelect use 2 design type.\n * In single mode, we should focus on the `span`\n * In multiple mode, we should focus on the `input`\n */\n\nvar Select = function (_React$Component) {\n  (0, _inherits3['default'])(Select, _React$Component);\n\n  function Select(props) {\n    (0, _classCallCheck3['default'])(this, Select);\n\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var prefixAria = props.prefixAria,\n        defaultOpen = props.defaultOpen,\n        open = props.open;\n\n\n    _this.state = {\n      open: open || defaultOpen,\n      valueList: [],\n      missValueList: [], // Contains the value not in the tree\n      selectorValueList: [], // Used for multiple selector\n      valueEntities: {},\n      keyEntities: {},\n      searchValue: '',\n\n      init: true\n    };\n\n    _this.selectorRef = (0, _util2.createRef)();\n    _this.selectTriggerRef = (0, _util2.createRef)();\n\n    // ARIA need `aria-controls` props mapping\n    // Since this need user input. Let's generate ourselves\n    _this.ariaId = (0, _util2.generateAriaId)(prefixAria + '-list');\n    return _this;\n  }\n\n  Select.prototype.getChildContext = function getChildContext() {\n    return {\n      rcTreeSelect: {\n        onSelectorFocus: this.onSelectorFocus,\n        onSelectorBlur: this.onSelectorBlur,\n        onSelectorKeyDown: this.onComponentKeyDown,\n        onSelectorClear: this.onSelectorClear,\n        onMultipleSelectorRemove: this.onMultipleSelectorRemove,\n\n        onTreeNodeSelect: this.onTreeNodeSelect,\n        onTreeNodeCheck: this.onTreeNodeCheck,\n        onPopupKeyDown: this.onComponentKeyDown,\n\n        onSearchInputChange: this.onSearchInputChange,\n        onSearchInputKeyDown: this.onSearchInputKeyDown\n      }\n    };\n  };\n\n  Select.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n    var _prevState$prevProps = prevState.prevProps,\n        prevProps = _prevState$prevProps === undefined ? {} : _prevState$prevProps;\n    var treeCheckable = nextProps.treeCheckable,\n        treeCheckStrictly = nextProps.treeCheckStrictly,\n        filterTreeNode = nextProps.filterTreeNode,\n        treeNodeFilterProp = nextProps.treeNodeFilterProp,\n        treeDataSimpleMode = nextProps.treeDataSimpleMode;\n\n    var newState = {\n      prevProps: nextProps,\n      init: false\n    };\n\n    // Process the state when props updated\n    function processState(propName, updater) {\n      if (prevProps[propName] !== nextProps[propName]) {\n        updater(nextProps[propName], prevProps[propName]);\n        return true;\n      }\n      return false;\n    }\n\n    var valueRefresh = false;\n\n    // Open\n    processState('open', function (propValue) {\n      newState.open = propValue;\n    });\n\n    // Tree Nodes\n    var treeData = void 0;\n    var treeDataChanged = false;\n    var treeDataModeChanged = false;\n    processState('treeData', function (propValue) {\n      treeData = propValue;\n      treeDataChanged = true;\n    });\n\n    processState('treeDataSimpleMode', function (propValue, prevValue) {\n      if (!propValue) return;\n\n      var prev = !prevValue || prevValue === true ? {} : prevValue;\n\n      // Shallow equal to avoid dynamic prop object\n      if (!(0, _shallowequal2['default'])(propValue, prev)) {\n        treeDataModeChanged = true;\n      }\n    });\n\n    // Parse by `treeDataSimpleMode`\n    if (treeDataSimpleMode && (treeDataChanged || treeDataModeChanged)) {\n      var simpleMapper = (0, _extends3['default'])({\n        id: 'id',\n        pId: 'pId',\n        rootPId: null\n      }, treeDataSimpleMode !== true ? treeDataSimpleMode : {});\n      treeData = (0, _util2.parseSimpleTreeData)(nextProps.treeData, simpleMapper);\n    }\n\n    // If `treeData` not provide, use children TreeNodes\n    if (!nextProps.treeData) {\n      processState('children', function (propValue) {\n        treeData = (0, _util2.convertTreeToData)(propValue);\n      });\n    }\n\n    // Convert `treeData` to entities\n    if (treeData) {\n      var _convertDataToEntitie = (0, _util2.convertDataToEntities)(treeData),\n          treeNodes = _convertDataToEntitie.treeNodes,\n          valueEntities = _convertDataToEntitie.valueEntities,\n          keyEntities = _convertDataToEntitie.keyEntities;\n\n      newState.treeNodes = treeNodes;\n      newState.valueEntities = valueEntities;\n      newState.keyEntities = keyEntities;\n      valueRefresh = true;\n    }\n\n    // Value List\n    if (prevState.init) {\n      processState('defaultValue', function (propValue) {\n        newState.valueList = (0, _util2.formatInternalValue)(propValue, nextProps);\n        valueRefresh = true;\n      });\n    }\n\n    processState('value', function (propValue) {\n      newState.valueList = (0, _util2.formatInternalValue)(propValue, nextProps);\n      valueRefresh = true;\n    });\n\n    // Selector Value List\n    if (valueRefresh) {\n      // Find out that value not exist in the tree\n      var missValueList = [];\n      var filteredValueList = [];\n      var keyList = [];\n\n      // Get key by value\n      (newState.valueList || prevState.valueList).forEach(function (wrapperValue) {\n        var value = wrapperValue.value;\n\n        var entity = (newState.valueEntities || prevState.valueEntities)[value];\n\n        if (entity) {\n          keyList.push(entity.key);\n          filteredValueList.push(wrapperValue);\n          return;\n        }\n\n        // If not match, it may caused by ajax load. We need keep this\n        missValueList.push(wrapperValue);\n      });\n\n      // We need calculate the value when tree is checked tree\n      if (treeCheckable && !treeCheckStrictly) {\n        // Calculate the keys need to be checked\n        var _calcCheckStateConduc = (0, _util.calcCheckStateConduct)(newState.treeNodes || prevState.treeNodes, keyList),\n            checkedKeys = _calcCheckStateConduc.checkedKeys;\n\n        // Format value list again for internal usage\n\n\n        newState.valueList = checkedKeys.map(function (key) {\n          return {\n            value: (newState.keyEntities || prevState.keyEntities)[key].value\n          };\n        });\n      } else {\n        newState.valueList = filteredValueList;\n      }\n\n      // Fill the missValueList, we still need display in the selector\n      newState.missValueList = missValueList;\n\n      // Calculate the value list for `Selector` usage\n      newState.selectorValueList = (0, _util2.formatSelectorValue)(newState.valueList, nextProps, newState.valueEntities || prevState.valueEntities);\n    }\n\n    // [Legacy] To align with `Select` component,\n    // We use `searchValue` instead of `inputValue` but still keep the api\n    // `inputValue` support `null` to work as `autoClearSearchValue`\n    processState('inputValue', function (propValue) {\n      if (propValue !== null) {\n        newState.searchValue = propValue;\n      }\n    });\n\n    // Search value\n    processState('searchValue', function (propValue) {\n      newState.searchValue = propValue;\n    });\n\n    // Do the search logic\n    if (newState.searchValue !== undefined) {\n      var upperSearchValue = String(newState.searchValue).toUpperCase();\n\n      var filterTreeNodeFn = filterTreeNode;\n      if (filterTreeNode === false) {\n        // Don't filter if is false\n        filterTreeNodeFn = function filterTreeNodeFn() {\n          return true;\n        };\n      } else if (typeof filterTreeNodeFn !== 'function') {\n        // When is not function (true or undefined), use inner filter\n        filterTreeNodeFn = function filterTreeNodeFn(_, node) {\n          var nodeValue = String(node.props[treeNodeFilterProp]).toUpperCase();\n          return nodeValue.indexOf(upperSearchValue) !== -1;\n        };\n      }\n\n      newState.filteredTreeNodes = (0, _util2.getFilterTree)(newState.treeNodes || prevState.treeNodes, newState.searchValue, filterTreeNodeFn);\n    }\n\n    // Checked Strategy\n    processState('showCheckedStrategy', function () {\n      newState.selectorValueList = newState.selectorValueList || (0, _util2.formatSelectorValue)(newState.valueList || prevState.valueList, nextProps, newState.valueEntities || prevState.valueEntities);\n    });\n\n    return newState;\n  };\n\n  Select.prototype.componentDidMount = function componentDidMount() {\n    var _props = this.props,\n        autoFocus = _props.autoFocus,\n        disabled = _props.disabled;\n\n\n    if (autoFocus && !disabled) {\n      this.focus();\n    }\n  };\n\n  Select.prototype.componentDidUpdate = function componentDidUpdate(_, prevState) {\n    if (prevState.valueList !== this.state.valueList) {\n      this.forcePopupAlign();\n    }\n  };\n\n  // ==================== Selector ====================\n\n\n  // Handle key board event in both Selector and Popup\n\n\n  // ===================== Popup ======================\n\n\n  // ==================== Trigger =====================\n\n  /**\n   * Only update the value which is not in props\n   */\n\n\n  // [Legacy] Origin provide `documentClickClose` which triggered by `Trigger`\n  // Currently `TreeSelect` align the hide popup logic as `Select` which blur to hide.\n  // `documentClickClose` is not accurate anymore. Let's just keep the key word.\n\n\n  // Tree checkable is also a multiple case\n\n\n  // [Legacy] To align with `Select` component,\n  // We use `searchValue` instead of `inputValue`\n  // but currently still need support that.\n  // Add this method the check if is controlled\n\n\n  // TODO: onChoiceAnimationLeave\n\n\n  /**\n   * 1. Update state valueList.\n   * 2. Fire `onChange` event to user.\n   */\n\n\n  Select.prototype.focus = function focus() {\n    this.selectorRef.current.focus();\n  };\n\n  Select.prototype.blur = function blur() {\n    this.selectorRef.current.blur();\n  };\n\n  // ===================== Render =====================\n\n  Select.prototype.render = function render() {\n    var _state = this.state,\n        valueList = _state.valueList,\n        missValueList = _state.missValueList,\n        selectorValueList = _state.selectorValueList,\n        valueEntities = _state.valueEntities,\n        keyEntities = _state.keyEntities,\n        searchValue = _state.searchValue,\n        open = _state.open,\n        focused = _state.focused,\n        treeNodes = _state.treeNodes,\n        filteredTreeNodes = _state.filteredTreeNodes;\n    var prefixCls = this.props.prefixCls;\n\n    var isMultiple = this.isMultiple();\n\n    var passProps = (0, _extends3['default'])({}, this.props, {\n      isMultiple: isMultiple,\n      valueList: valueList,\n      selectorValueList: [].concat(missValueList, selectorValueList),\n      valueEntities: valueEntities,\n      keyEntities: keyEntities,\n      searchValue: searchValue,\n      upperSearchValue: (searchValue || '').toUpperCase(), // Perf save\n      open: open,\n      focused: focused,\n      dropdownPrefixCls: prefixCls + '-dropdown',\n      ariaId: this.ariaId\n    });\n\n    var Popup = isMultiple ? _MultiplePopup2['default'] : _SinglePopup2['default'];\n    var $popup = _react2['default'].createElement(Popup, (0, _extends3['default'])({}, passProps, {\n      onTreeExpanded: this.delayForcePopupAlign,\n      treeNodes: treeNodes,\n      filteredTreeNodes: filteredTreeNodes\n    }));\n\n    var Selector = isMultiple ? _MultipleSelector2['default'] : _SingleSelector2['default'];\n    var $selector = _react2['default'].createElement(Selector, (0, _extends3['default'])({}, passProps, {\n      ref: this.selectorRef,\n      onChoiceAnimationLeave: this.forcePopupAlign\n    }));\n\n    return _react2['default'].createElement(\n      _SelectTrigger2['default'],\n      (0, _extends3['default'])({}, passProps, {\n\n        ref: this.selectTriggerRef,\n        popupElement: $popup,\n\n        onKeyDown: this.onKeyDown,\n        onDropdownVisibleChange: this.onDropdownVisibleChange\n      }),\n      $selector\n    );\n  };\n\n  return Select;\n}(_react2['default'].Component);\n\nSelect.propTypes = {\n  prefixCls: _propTypes2['default'].string,\n  prefixAria: _propTypes2['default'].string,\n  multiple: _propTypes2['default'].bool,\n  showArrow: _propTypes2['default'].bool,\n  open: _propTypes2['default'].bool,\n  value: _propTypes3.valueProp,\n  autoFocus: _propTypes2['default'].bool,\n\n  defaultOpen: _propTypes2['default'].bool,\n  defaultValue: _propTypes3.valueProp,\n\n  showSearch: _propTypes2['default'].bool,\n  placeholder: _propTypes2['default'].node,\n  inputValue: _propTypes2['default'].string, // [Legacy] Deprecated. Use `searchValue` instead.\n  searchValue: _propTypes2['default'].string,\n  autoClearSearchValue: _propTypes2['default'].bool,\n  searchPlaceholder: _propTypes2['default'].node, // [Legacy] Confuse with placeholder\n  disabled: _propTypes2['default'].bool,\n  children: _propTypes2['default'].node,\n  labelInValue: _propTypes2['default'].bool,\n  maxTagCount: _propTypes2['default'].number,\n  maxTagPlaceholder: _propTypes2['default'].oneOfType([_propTypes2['default'].node, _propTypes2['default'].func]),\n  maxTagTextLength: _propTypes2['default'].number,\n  showCheckedStrategy: _propTypes2['default'].oneOf([_strategies.SHOW_ALL, _strategies.SHOW_PARENT, _strategies.SHOW_CHILD]),\n\n  dropdownMatchSelectWidth: _propTypes2['default'].bool,\n  treeData: _propTypes2['default'].array,\n  treeDataSimpleMode: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].object]),\n  treeNodeFilterProp: _propTypes2['default'].string,\n  treeNodeLabelProp: _propTypes2['default'].string,\n  treeCheckable: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].node]),\n  treeCheckStrictly: _propTypes2['default'].bool,\n  treeIcon: _propTypes2['default'].bool,\n  treeLine: _propTypes2['default'].bool,\n  treeDefaultExpandAll: _propTypes2['default'].bool,\n  treeDefaultExpandedKeys: _propTypes2['default'].array,\n  loadData: _propTypes2['default'].func,\n  filterTreeNode: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].bool]),\n\n  notFoundContent: _propTypes2['default'].string,\n\n  onSearch: _propTypes2['default'].func,\n  onSelect: _propTypes2['default'].func,\n  onDeselect: _propTypes2['default'].func,\n  onChange: _propTypes2['default'].func,\n  onDropdownVisibleChange: _propTypes2['default'].func\n};\nSelect.childContextTypes = {\n  rcTreeSelect: _propTypes2['default'].shape((0, _extends3['default'])({}, _BaseSelector.selectorContextTypes, _MultipleSelector.multipleSelectorContextTypes, _BasePopup.popupContextTypes, {\n\n    onSearchInputChange: _propTypes2['default'].func,\n    onSearchInputKeyDown: _propTypes2['default'].func\n  }))\n};\nSelect.defaultProps = {\n  prefixCls: 'rc-tree-select',\n  prefixAria: 'rc-tree-select',\n  showArrow: true,\n  showSearch: true,\n  autoClearSearchValue: true,\n  showCheckedStrategy: _strategies.SHOW_CHILD,\n\n  // dropdownMatchSelectWidth change the origin design, set to false now\n  // ref: https://github.com/react-component/select/blob/4cad95e098a341a09de239ad6981067188842020/src/Select.jsx#L344\n  // ref: https://github.com/react-component/select/pull/71\n  treeNodeFilterProp: 'value',\n  treeNodeLabelProp: 'title',\n  treeIcon: false,\n  notFoundContent: 'Not Found'\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this2 = this;\n\n  this.onSelectorFocus = function () {\n    _this2.setState({ focused: true });\n  };\n\n  this.onSelectorBlur = function () {\n    _this2.setState({ focused: false });\n\n    // TODO: Close when Popup is also not focused\n    // this.setState({ open: false });\n  };\n\n  this.onComponentKeyDown = function (event) {\n    var open = _this2.state.open;\n    var keyCode = event.keyCode;\n\n\n    if (!open) {\n      if ([_KeyCode2['default'].ENTER, _KeyCode2['default'].DOWN].indexOf(keyCode) !== -1) {\n        _this2.setOpenState(true);\n      }\n    } else if (_KeyCode2['default'].ESC === keyCode) {\n      _this2.setOpenState(false);\n    } else if ([_KeyCode2['default'].UP, _KeyCode2['default'].DOWN, _KeyCode2['default'].LEFT, _KeyCode2['default'].RIGHT].indexOf(keyCode) !== -1) {\n      // TODO: Handle `open` state\n      event.stopPropagation();\n    }\n  };\n\n  this.onDeselect = function (wrappedValue, node, nodeEventInfo) {\n    var onDeselect = _this2.props.onDeselect;\n\n    if (!onDeselect) return;\n\n    onDeselect(wrappedValue, node, nodeEventInfo);\n  };\n\n  this.onSelectorClear = function (event) {\n    var disabled = _this2.props.disabled;\n\n    if (disabled) return;\n\n    _this2.triggerChange([], []);\n\n    if (!_this2.isSearchValueControlled()) {\n      _this2.setUncontrolledState({\n        searchValue: '',\n        filteredTreeNodes: null\n      });\n    }\n\n    event.stopPropagation();\n  };\n\n  this.onMultipleSelectorRemove = function (event, removeValue) {\n    event.stopPropagation();\n\n    var _state2 = _this2.state,\n        valueList = _state2.valueList,\n        missValueList = _state2.missValueList,\n        valueEntities = _state2.valueEntities;\n    var _props2 = _this2.props,\n        treeCheckable = _props2.treeCheckable,\n        treeCheckStrictly = _props2.treeCheckStrictly,\n        treeNodeLabelProp = _props2.treeNodeLabelProp,\n        disabled = _props2.disabled;\n\n    if (disabled) return;\n\n    // Find trigger entity\n    var triggerEntity = valueEntities[removeValue];\n\n    // Clean up value\n    var newValueList = valueList;\n    if (triggerEntity) {\n      // If value is in tree\n      if (treeCheckable && !treeCheckStrictly) {\n        newValueList = valueList.filter(function (_ref) {\n          var value = _ref.value;\n\n          var entity = valueEntities[value];\n          return !(0, _util2.isPosRelated)(entity.pos, triggerEntity.pos);\n        });\n      } else {\n        newValueList = valueList.filter(function (_ref2) {\n          var value = _ref2.value;\n          return value !== removeValue;\n        });\n      }\n    }\n\n    var triggerNode = triggerEntity ? triggerEntity.node : null;\n\n    var extraInfo = {\n      triggerValue: removeValue,\n      triggerNode: triggerNode\n    };\n    var deselectInfo = {\n      node: triggerNode\n    };\n\n    // [Legacy] Little hack on this to make same action as `onCheck` event.\n    if (treeCheckable) {\n      var filteredEntityList = newValueList.map(function (_ref3) {\n        var value = _ref3.value;\n        return valueEntities[value];\n      });\n\n      deselectInfo.event = 'check';\n      deselectInfo.checked = false;\n      deselectInfo.checkedNodes = filteredEntityList.map(function (_ref4) {\n        var node = _ref4.node;\n        return node;\n      });\n      deselectInfo.checkedNodesPositions = filteredEntityList.map(function (_ref5) {\n        var node = _ref5.node,\n            pos = _ref5.pos;\n        return { node: node, pos: pos };\n      });\n\n      if (treeCheckStrictly) {\n        extraInfo.allCheckedNodes = deselectInfo.checkedNodes;\n      } else {\n        // TODO: It's too expansive to get `halfCheckedKeys` in onDeselect. Not pass this.\n        extraInfo.allCheckedNodes = (0, _util2.flatToHierarchy)(filteredEntityList).map(function (_ref6) {\n          var node = _ref6.node;\n          return node;\n        });\n      }\n    } else {\n      deselectInfo.event = 'select';\n      deselectInfo.selected = false;\n      deselectInfo.selectedNodes = newValueList.map(function (_ref7) {\n        var value = _ref7.value;\n        return (valueEntities[value] || {}).node;\n      });\n    }\n\n    // Some value user pass prop is not in the tree, we also need clean it\n    var newMissValueList = missValueList.filter(function (_ref8) {\n      var value = _ref8.value;\n      return value !== removeValue;\n    });\n\n    var wrappedValue = void 0;\n    if (_this2.isLabelInValue()) {\n      wrappedValue = {\n        label: triggerNode ? triggerNode.props[treeNodeLabelProp] : null,\n        value: removeValue\n      };\n    } else {\n      wrappedValue = removeValue;\n    }\n\n    _this2.onDeselect(wrappedValue, triggerNode, deselectInfo);\n\n    _this2.triggerChange(newMissValueList, newValueList, extraInfo);\n  };\n\n  this.onValueTrigger = function (isAdd, nodeList, nodeEventInfo, nodeExtraInfo) {\n    var node = nodeEventInfo.node;\n    var value = node.props.value;\n    var _state3 = _this2.state,\n        missValueList = _state3.missValueList,\n        valueEntities = _state3.valueEntities,\n        keyEntities = _state3.keyEntities,\n        treeNodes = _state3.treeNodes;\n    var _props3 = _this2.props,\n        disabled = _props3.disabled,\n        inputValue = _props3.inputValue,\n        treeNodeLabelProp = _props3.treeNodeLabelProp,\n        onSelect = _props3.onSelect,\n        treeCheckable = _props3.treeCheckable,\n        treeCheckStrictly = _props3.treeCheckStrictly,\n        autoClearSearchValue = _props3.autoClearSearchValue;\n\n    var label = node.props[treeNodeLabelProp];\n\n    if (disabled) return;\n\n    // Wrap the return value for user\n    var wrappedValue = void 0;\n    if (_this2.isLabelInValue()) {\n      wrappedValue = {\n        value: value,\n        label: label\n      };\n    } else {\n      wrappedValue = value;\n    }\n\n    // [Legacy] Origin code not trigger `onDeselect` every time. Let's align the behaviour.\n    if (isAdd) {\n      if (onSelect) {\n        onSelect(wrappedValue, node, nodeEventInfo);\n      }\n    } else {\n      _this2.onDeselect(wrappedValue, node, nodeEventInfo);\n    }\n\n    // Get wrapped value list.\n    // This is a bit hack cause we use key to match the value.\n    var newValueList = nodeList.map(function (_ref9) {\n      var props = _ref9.props;\n      return {\n        value: props.value,\n        label: props[treeNodeLabelProp]\n      };\n    });\n\n    // When is `treeCheckable` and with `searchValue`, `valueList` is not full filled.\n    // We need calculate the missing nodes.\n    if (treeCheckable && !treeCheckStrictly) {\n      var keyList = newValueList.map(function (_ref10) {\n        var val = _ref10.value;\n        return valueEntities[val].key;\n      });\n      if (isAdd) {\n        keyList = (0, _util.calcCheckStateConduct)(treeNodes, keyList).checkedKeys;\n      } else {\n        keyList = (0, _util2.calcUncheckConduct)(keyList, valueEntities[value].key, keyEntities);\n      }\n      newValueList = keyList.map(function (key) {\n        var props = keyEntities[key].node.props;\n\n        return {\n          value: props.value,\n          label: props[treeNodeLabelProp]\n        };\n      });\n    }\n\n    // Clean up `searchValue` when this prop is set\n    if (!_this2.isSearchValueControlled() && (autoClearSearchValue || inputValue === null)) {\n      _this2.setUncontrolledState({\n        searchValue: '',\n        filteredTreeNodes: null\n      });\n    }\n\n    // [Legacy] Provide extra info\n    var extraInfo = (0, _extends3['default'])({}, nodeExtraInfo, {\n      triggerValue: value,\n      triggerNode: node\n    });\n\n    _this2.triggerChange(missValueList, newValueList, extraInfo);\n  };\n\n  this.onTreeNodeSelect = function (_, nodeEventInfo) {\n    var _props4 = _this2.props,\n        treeCheckable = _props4.treeCheckable,\n        multiple = _props4.multiple;\n\n    if (treeCheckable) return;\n\n    if (!multiple) {\n      _this2.setOpenState(false);\n    }\n\n    var selectedNodes = nodeEventInfo.selectedNodes;\n\n    var isAdd = nodeEventInfo.selected;\n    _this2.onValueTrigger(isAdd, selectedNodes, nodeEventInfo, { selected: isAdd });\n  };\n\n  this.onTreeNodeCheck = function (_, nodeEventInfo) {\n    var _state4 = _this2.state,\n        searchValue = _state4.searchValue,\n        keyEntities = _state4.keyEntities,\n        valueEntities = _state4.valueEntities,\n        valueList = _state4.valueList;\n    var treeCheckStrictly = _this2.props.treeCheckStrictly;\n    var checkedNodes = nodeEventInfo.checkedNodes,\n        checkedNodesPositions = nodeEventInfo.checkedNodesPositions;\n\n    var isAdd = nodeEventInfo.checked;\n\n    var extraInfo = {\n      checked: isAdd\n    };\n\n    var checkedNodeList = checkedNodes;\n\n    // [Legacy] Check event provide `allCheckedNodes`.\n    // When `treeCheckStrictly` or internal `searchValue` is set, TreeNode will be unrelated:\n    // - Related: Show the top checked nodes and has children prop.\n    // - Unrelated: Show all the checked nodes.\n\n    if (treeCheckStrictly) {\n      extraInfo.allCheckedNodes = nodeEventInfo.checkedNodes;\n    } else if (searchValue) {\n      var oriKeyList = valueList.map(function (_ref11) {\n        var value = _ref11.value;\n        return valueEntities[value];\n      }).filter(function (entity) {\n        return entity;\n      }).map(function (_ref12) {\n        var key = _ref12.key;\n        return key;\n      });\n\n      var keyList = void 0;\n      if (isAdd) {\n        keyList = Array.from(new Set([].concat(oriKeyList, [checkedNodeList.map(function (_ref13) {\n          var value = _ref13.props.value;\n          return valueEntities[value].key;\n        })])));\n\n        checkedNodeList = keyList.map(function (key) {\n          return keyEntities[key].node;\n        });\n      } else {\n        keyList = (0, _util2.calcUncheckConduct)(oriKeyList, nodeEventInfo.node.props.eventKey, keyEntities);\n      }\n\n      // Let's follow as not `treeCheckStrictly` format\n      extraInfo.allCheckedNodes = keyList.map(function (key) {\n        return (0, _util2.cleanEntity)(keyEntities[key]);\n      });\n    } else {\n      extraInfo.allCheckedNodes = (0, _util2.flatToHierarchy)(checkedNodesPositions);\n    }\n\n    _this2.onValueTrigger(isAdd, checkedNodeList, nodeEventInfo, extraInfo);\n  };\n\n  this.onDropdownVisibleChange = function (open) {\n    _this2.setOpenState(open, true);\n  };\n\n  this.onSearchInputChange = function (_ref14) {\n    var value = _ref14.target.value;\n    var treeNodes = _this2.state.treeNodes;\n    var _props5 = _this2.props,\n        onSearch = _props5.onSearch,\n        filterTreeNode = _props5.filterTreeNode,\n        treeNodeFilterProp = _props5.treeNodeFilterProp;\n\n\n    if (onSearch) {\n      onSearch(value);\n    }\n\n    var isSet = false;\n\n    if (!_this2.isSearchValueControlled()) {\n      isSet = _this2.setUncontrolledState({\n        searchValue: value\n      });\n      _this2.setOpenState(true);\n    }\n\n    if (isSet) {\n      // Do the search logic\n      var upperSearchValue = String(value).toUpperCase();\n\n      var filterTreeNodeFn = filterTreeNode;\n      if (!filterTreeNodeFn) {\n        filterTreeNodeFn = function filterTreeNodeFn(_, node) {\n          var nodeValue = String(node.props[treeNodeFilterProp]).toUpperCase();\n          return nodeValue.indexOf(upperSearchValue) !== -1;\n        };\n      }\n\n      _this2.setState({\n        filteredTreeNodes: (0, _util2.getFilterTree)(treeNodes, value, filterTreeNodeFn)\n      });\n    }\n  };\n\n  this.onSearchInputKeyDown = function (event) {\n    var _state5 = _this2.state,\n        searchValue = _state5.searchValue,\n        valueList = _state5.valueList;\n    var keyCode = event.keyCode;\n\n\n    if (_KeyCode2['default'].BACKSPACE === keyCode && _this2.isMultiple() && !searchValue && valueList.length) {\n      var lastValue = valueList[valueList.length - 1].value;\n      _this2.onMultipleSelectorRemove(event, lastValue);\n    }\n  };\n\n  this.setUncontrolledState = function (state) {\n    var needSync = false;\n    var newState = {};\n\n    Object.keys(state).forEach(function (name) {\n      if (name in _this2.props) return;\n\n      needSync = true;\n      newState[name] = state[name];\n    });\n\n    if (needSync) {\n      _this2.setState(newState);\n    }\n\n    return needSync;\n  };\n\n  this.setOpenState = function (open) {\n    var byTrigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var onDropdownVisibleChange = _this2.props.onDropdownVisibleChange;\n\n\n    if (onDropdownVisibleChange && onDropdownVisibleChange(open, { documentClickClose: !open && byTrigger }) === false) {\n      return;\n    }\n\n    _this2.setUncontrolledState({ open: open });\n  };\n\n  this.isMultiple = function () {\n    var _props6 = _this2.props,\n        multiple = _props6.multiple,\n        treeCheckable = _props6.treeCheckable;\n\n    return !!(multiple || treeCheckable);\n  };\n\n  this.isLabelInValue = function () {\n    return (0, _util2.isLabelInValue)(_this2.props);\n  };\n\n  this.isSearchValueControlled = function () {\n    var inputValue = _this2.props.inputValue;\n\n    if ('searchValue' in _this2.props) return true;\n    return 'inputValue' in _this2.props && inputValue !== null;\n  };\n\n  this.forcePopupAlign = function () {\n    var $trigger = _this2.selectTriggerRef.current;\n\n    if ($trigger) {\n      $trigger.forcePopupAlign();\n    }\n  };\n\n  this.delayForcePopupAlign = function () {\n    (0, _raf2['default'])(_this2.forcePopupAlign);\n  };\n\n  this.triggerChange = function (missValueList, valueList) {\n    var extraInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var valueEntities = _this2.state.valueEntities;\n    var _props7 = _this2.props,\n        onChange = _props7.onChange,\n        disabled = _props7.disabled;\n\n\n    if (disabled) return;\n\n    // Trigger\n    var extra = (0, _extends3['default'])({\n      // [Legacy] Always return as array contains label & value\n      preValue: _this2.state.selectorValueList.map(function (_ref15) {\n        var label = _ref15.label,\n            value = _ref15.value;\n        return { label: label, value: value };\n      })\n    }, extraInfo);\n\n    // Format value by `treeCheckStrictly`\n    var selectorValueList = (0, _util2.formatSelectorValue)(valueList, _this2.props, valueEntities);\n\n    if (!('value' in _this2.props)) {\n      _this2.setState({\n        missValueList: missValueList,\n        valueList: valueList,\n        selectorValueList: selectorValueList\n      });\n    }\n\n    // Only do the logic when `onChange` function provided\n    if (onChange) {\n      var connectValueList = void 0;\n\n      // Get value by mode\n      if (_this2.isMultiple()) {\n        connectValueList = [].concat(missValueList, selectorValueList);\n      } else {\n        connectValueList = selectorValueList.slice(0, 1);\n      }\n\n      var labelList = null;\n      var returnValue = void 0;\n\n      if (_this2.isLabelInValue()) {\n        returnValue = connectValueList.map(function (_ref16) {\n          var label = _ref16.label,\n              value = _ref16.value;\n          return { label: label, value: value };\n        });\n      } else {\n        labelList = [];\n        returnValue = connectValueList.map(function (_ref17) {\n          var label = _ref17.label,\n              value = _ref17.value;\n\n          labelList.push(label);\n          return value;\n        });\n      }\n\n      if (!_this2.isMultiple()) {\n        returnValue = returnValue[0];\n      }\n\n      onChange(returnValue, labelList, extra);\n    }\n  };\n};\n\nSelect.TreeNode = _SelectNode2['default'];\nSelect.SHOW_ALL = _strategies.SHOW_ALL;\nSelect.SHOW_PARENT = _strategies.SHOW_PARENT;\nSelect.SHOW_CHILD = _strategies.SHOW_CHILD;\n\n// Let warning show correct component name\nSelect.displayName = 'TreeSelect';\n\n(0, _reactLifecyclesCompat.polyfill)(Select);\n\nexports['default'] = Select;\nmodule.exports = exports['default'];\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$rc_tree_select$lib$propTypes","~$module$node_modules$rc_tree_select$lib$Base$BaseSelector","~$module$node_modules$shallowequal$index","~$module$node_modules$react_lifecycles_compat$react_lifecycles_compat_cjs","~$module$node_modules$rc_tree_select$lib$Selector$MultipleSelector$index","~$module$node_modules$babel_runtime$helpers$possibleConstructorReturn","~$module$node_modules$react$index","~$module$node_modules$prop_types$index","~$module$node_modules$rc_tree$lib$util","~$shadow.js","~$module$node_modules$babel_runtime$helpers$inherits","~$module$node_modules$rc_tree_select$lib$SelectNode","~$module$node_modules$rc_tree_select$lib$SelectTrigger","~$module$node_modules$rc_tree_select$lib$Base$BasePopup","~$module$node_modules$rc_tree_select$lib$strategies","~$module$node_modules$rc_tree_select$lib$Popup$SinglePopup","~$module$node_modules$rc_util$lib$KeyCode","~$module$node_modules$babel_runtime$helpers$extends","~$module$node_modules$babel_runtime$helpers$classCallCheck","~$module$node_modules$rc_tree_select$lib$Popup$MultiplePopup","~$module$node_modules$rc_tree_select$lib$util","~$module$node_modules$rc_tree_select$lib$Selector$SingleSelector","~$module$node_modules$raf$index"]],"~:properties",["^5",["showSearch","maxTagPlaceholder","checkedNodesPositions","selected","showArrow","loadData","treeNodeLabelProp","onSearchInputChange","prefixAria","selectTriggerRef","onDropdownVisibleChange","onMultipleSelectorRemove","pos","getDerivedStateFromProps","searchPlaceholder","onValueTrigger","onSelectorKeyDown","getChildContext","autoClearSearchValue","onChange","childContextTypes","treeData","TreeNode","maxTagCount","dropdownPrefixCls","displayName","placeholder","label","SHOW_ALL","children","onPopupKeyDown","setOpenState","focus","onSearchInputKeyDown","__esModule","valueList","triggerNode","treeNodeFilterProp","id","inputValue","isSearchValueControlled","onSelectorBlur","event","notFoundContent","triggerChange","propTypes","SHOW_PARENT","treeDefaultExpandAll","onSelectorClear","defaultOpen","setUncontrolledState","dropdownMatchSelectWidth","triggerValue","labelInValue","isLabelInValue","valueEntities","value","keyEntities","maxTagTextLength","componentDidUpdate","focused","rcTreeSelect","showCheckedStrategy","onChoiceAnimationLeave","componentDidMount","selectedNodes","defaultProps","onComponentKeyDown","preValue","prevProps","onTreeExpanded","render","searchValue","checkedNodes","state","init","ref","prefixCls","missValueList","onSearch","isMultiple","treeCheckStrictly","treeDataSimpleMode","delayForcePopupAlign","treeLine","ariaId","treeCheckable","selectorValueList","defaultValue","treeIcon","onKeyDown","documentClickClose","popupElement","treeNodes","filterTreeNode","filteredTreeNodes","pId","SHOW_CHILD","onSelect","open","disabled","treeDefaultExpandedKeys","forcePopupAlign","selectorRef","onDeselect","allCheckedNodes","blur","upperSearchValue","onSelectorFocus","default","checked","rootPId","onTreeNodeSelect","node","autoFocus","onTreeNodeCheck","multiple"]],"~:compiled-at",1532351402112,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_tree_select$lib$Select.js\",\n\"lineCount\":41,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/rc-tree-select/lib/Select.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_tree_select$lib$Select\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nexports.__esModule = true;\\n\\nvar _extends2 = require('babel-runtime/helpers/extends');\\n\\nvar _extends3 = _interopRequireDefault(_extends2);\\n\\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\\n\\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\\n\\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\\n\\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\\n\\nvar _inherits2 = require('babel-runtime/helpers/inherits');\\n\\nvar _inherits3 = _interopRequireDefault(_inherits2);\\n\\nvar _react = require('react');\\n\\nvar _react2 = _interopRequireDefault(_react);\\n\\nvar _propTypes = require('prop-types');\\n\\nvar _propTypes2 = _interopRequireDefault(_propTypes);\\n\\nvar _reactLifecyclesCompat = require('react-lifecycles-compat');\\n\\nvar _KeyCode = require('rc-util/lib/KeyCode');\\n\\nvar _KeyCode2 = _interopRequireDefault(_KeyCode);\\n\\nvar _util = require('rc-tree/lib/util');\\n\\nvar _shallowequal = require('shallowequal');\\n\\nvar _shallowequal2 = _interopRequireDefault(_shallowequal);\\n\\nvar _raf = require('raf');\\n\\nvar _raf2 = _interopRequireDefault(_raf);\\n\\nvar _SelectTrigger = require('./SelectTrigger');\\n\\nvar _SelectTrigger2 = _interopRequireDefault(_SelectTrigger);\\n\\nvar _BaseSelector = require('./Base/BaseSelector');\\n\\nvar _BasePopup = require('./Base/BasePopup');\\n\\nvar _SingleSelector = require('./Selector/SingleSelector');\\n\\nvar _SingleSelector2 = _interopRequireDefault(_SingleSelector);\\n\\nvar _MultipleSelector = require('./Selector/MultipleSelector');\\n\\nvar _MultipleSelector2 = _interopRequireDefault(_MultipleSelector);\\n\\nvar _SinglePopup = require('./Popup/SinglePopup');\\n\\nvar _SinglePopup2 = _interopRequireDefault(_SinglePopup);\\n\\nvar _MultiplePopup = require('./Popup/MultiplePopup');\\n\\nvar _MultiplePopup2 = _interopRequireDefault(_MultiplePopup);\\n\\nvar _strategies = require('./strategies');\\n\\nvar _util2 = require('./util');\\n\\nvar _propTypes3 = require('./propTypes');\\n\\nvar _SelectNode = require('./SelectNode');\\n\\nvar _SelectNode2 = _interopRequireDefault(_SelectNode);\\n\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\\n\\n/**\\n * ARIA: https://www.w3.org/TR/wai-aria/#combobox\\n * Sample 1: https://www.w3.org/TR/2017/NOTE-wai-aria-practices-1.1-20171214/examples/combobox/aria1.1pattern/listbox-combo.html\\n * Sample 2: https://www.w3.org/blog/wai-components-gallery/widget/combobox-with-aria-autocompleteinline/\\n *\\n * Tab logic:\\n * Popup is close\\n * 1. Focus input (mark component as focused)\\n * 2. Press enter to show the popup\\n * 3. If popup has input, focus it\\n *\\n * Popup is open\\n * 1. press tab to close the popup\\n * 2. Focus back to the selection input box\\n * 3. Let the native tab going on\\n *\\n * TreeSelect use 2 design type.\\n * In single mode, we should focus on the `span`\\n * In multiple mode, we should focus on the `input`\\n */\\n\\nvar Select = function (_React$Component) {\\n  (0, _inherits3['default'])(Select, _React$Component);\\n\\n  function Select(props) {\\n    (0, _classCallCheck3['default'])(this, Select);\\n\\n    var _this = (0, _possibleConstructorReturn3['default'])(this, _React$Component.call(this, props));\\n\\n    _initialiseProps.call(_this);\\n\\n    var prefixAria = props.prefixAria,\\n        defaultOpen = props.defaultOpen,\\n        open = props.open;\\n\\n\\n    _this.state = {\\n      open: open || defaultOpen,\\n      valueList: [],\\n      missValueList: [], // Contains the value not in the tree\\n      selectorValueList: [], // Used for multiple selector\\n      valueEntities: {},\\n      keyEntities: {},\\n      searchValue: '',\\n\\n      init: true\\n    };\\n\\n    _this.selectorRef = (0, _util2.createRef)();\\n    _this.selectTriggerRef = (0, _util2.createRef)();\\n\\n    // ARIA need `aria-controls` props mapping\\n    // Since this need user input. Let's generate ourselves\\n    _this.ariaId = (0, _util2.generateAriaId)(prefixAria + '-list');\\n    return _this;\\n  }\\n\\n  Select.prototype.getChildContext = function getChildContext() {\\n    return {\\n      rcTreeSelect: {\\n        onSelectorFocus: this.onSelectorFocus,\\n        onSelectorBlur: this.onSelectorBlur,\\n        onSelectorKeyDown: this.onComponentKeyDown,\\n        onSelectorClear: this.onSelectorClear,\\n        onMultipleSelectorRemove: this.onMultipleSelectorRemove,\\n\\n        onTreeNodeSelect: this.onTreeNodeSelect,\\n        onTreeNodeCheck: this.onTreeNodeCheck,\\n        onPopupKeyDown: this.onComponentKeyDown,\\n\\n        onSearchInputChange: this.onSearchInputChange,\\n        onSearchInputKeyDown: this.onSearchInputKeyDown\\n      }\\n    };\\n  };\\n\\n  Select.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\\n    var _prevState$prevProps = prevState.prevProps,\\n        prevProps = _prevState$prevProps === undefined ? {} : _prevState$prevProps;\\n    var treeCheckable = nextProps.treeCheckable,\\n        treeCheckStrictly = nextProps.treeCheckStrictly,\\n        filterTreeNode = nextProps.filterTreeNode,\\n        treeNodeFilterProp = nextProps.treeNodeFilterProp,\\n        treeDataSimpleMode = nextProps.treeDataSimpleMode;\\n\\n    var newState = {\\n      prevProps: nextProps,\\n      init: false\\n    };\\n\\n    // Process the state when props updated\\n    function processState(propName, updater) {\\n      if (prevProps[propName] !== nextProps[propName]) {\\n        updater(nextProps[propName], prevProps[propName]);\\n        return true;\\n      }\\n      return false;\\n    }\\n\\n    var valueRefresh = false;\\n\\n    // Open\\n    processState('open', function (propValue) {\\n      newState.open = propValue;\\n    });\\n\\n    // Tree Nodes\\n    var treeData = void 0;\\n    var treeDataChanged = false;\\n    var treeDataModeChanged = false;\\n    processState('treeData', function (propValue) {\\n      treeData = propValue;\\n      treeDataChanged = true;\\n    });\\n\\n    processState('treeDataSimpleMode', function (propValue, prevValue) {\\n      if (!propValue) return;\\n\\n      var prev = !prevValue || prevValue === true ? {} : prevValue;\\n\\n      // Shallow equal to avoid dynamic prop object\\n      if (!(0, _shallowequal2['default'])(propValue, prev)) {\\n        treeDataModeChanged = true;\\n      }\\n    });\\n\\n    // Parse by `treeDataSimpleMode`\\n    if (treeDataSimpleMode && (treeDataChanged || treeDataModeChanged)) {\\n      var simpleMapper = (0, _extends3['default'])({\\n        id: 'id',\\n        pId: 'pId',\\n        rootPId: null\\n      }, treeDataSimpleMode !== true ? treeDataSimpleMode : {});\\n      treeData = (0, _util2.parseSimpleTreeData)(nextProps.treeData, simpleMapper);\\n    }\\n\\n    // If `treeData` not provide, use children TreeNodes\\n    if (!nextProps.treeData) {\\n      processState('children', function (propValue) {\\n        treeData = (0, _util2.convertTreeToData)(propValue);\\n      });\\n    }\\n\\n    // Convert `treeData` to entities\\n    if (treeData) {\\n      var _convertDataToEntitie = (0, _util2.convertDataToEntities)(treeData),\\n          treeNodes = _convertDataToEntitie.treeNodes,\\n          valueEntities = _convertDataToEntitie.valueEntities,\\n          keyEntities = _convertDataToEntitie.keyEntities;\\n\\n      newState.treeNodes = treeNodes;\\n      newState.valueEntities = valueEntities;\\n      newState.keyEntities = keyEntities;\\n      valueRefresh = true;\\n    }\\n\\n    // Value List\\n    if (prevState.init) {\\n      processState('defaultValue', function (propValue) {\\n        newState.valueList = (0, _util2.formatInternalValue)(propValue, nextProps);\\n        valueRefresh = true;\\n      });\\n    }\\n\\n    processState('value', function (propValue) {\\n      newState.valueList = (0, _util2.formatInternalValue)(propValue, nextProps);\\n      valueRefresh = true;\\n    });\\n\\n    // Selector Value List\\n    if (valueRefresh) {\\n      // Find out that value not exist in the tree\\n      var missValueList = [];\\n      var filteredValueList = [];\\n      var keyList = [];\\n\\n      // Get key by value\\n      (newState.valueList || prevState.valueList).forEach(function (wrapperValue) {\\n        var value = wrapperValue.value;\\n\\n        var entity = (newState.valueEntities || prevState.valueEntities)[value];\\n\\n        if (entity) {\\n          keyList.push(entity.key);\\n          filteredValueList.push(wrapperValue);\\n          return;\\n        }\\n\\n        // If not match, it may caused by ajax load. We need keep this\\n        missValueList.push(wrapperValue);\\n      });\\n\\n      // We need calculate the value when tree is checked tree\\n      if (treeCheckable && !treeCheckStrictly) {\\n        // Calculate the keys need to be checked\\n        var _calcCheckStateConduc = (0, _util.calcCheckStateConduct)(newState.treeNodes || prevState.treeNodes, keyList),\\n            checkedKeys = _calcCheckStateConduc.checkedKeys;\\n\\n        // Format value list again for internal usage\\n\\n\\n        newState.valueList = checkedKeys.map(function (key) {\\n          return {\\n            value: (newState.keyEntities || prevState.keyEntities)[key].value\\n          };\\n        });\\n      } else {\\n        newState.valueList = filteredValueList;\\n      }\\n\\n      // Fill the missValueList, we still need display in the selector\\n      newState.missValueList = missValueList;\\n\\n      // Calculate the value list for `Selector` usage\\n      newState.selectorValueList = (0, _util2.formatSelectorValue)(newState.valueList, nextProps, newState.valueEntities || prevState.valueEntities);\\n    }\\n\\n    // [Legacy] To align with `Select` component,\\n    // We use `searchValue` instead of `inputValue` but still keep the api\\n    // `inputValue` support `null` to work as `autoClearSearchValue`\\n    processState('inputValue', function (propValue) {\\n      if (propValue !== null) {\\n        newState.searchValue = propValue;\\n      }\\n    });\\n\\n    // Search value\\n    processState('searchValue', function (propValue) {\\n      newState.searchValue = propValue;\\n    });\\n\\n    // Do the search logic\\n    if (newState.searchValue !== undefined) {\\n      var upperSearchValue = String(newState.searchValue).toUpperCase();\\n\\n      var filterTreeNodeFn = filterTreeNode;\\n      if (filterTreeNode === false) {\\n        // Don't filter if is false\\n        filterTreeNodeFn = function filterTreeNodeFn() {\\n          return true;\\n        };\\n      } else if (typeof filterTreeNodeFn !== 'function') {\\n        // When is not function (true or undefined), use inner filter\\n        filterTreeNodeFn = function filterTreeNodeFn(_, node) {\\n          var nodeValue = String(node.props[treeNodeFilterProp]).toUpperCase();\\n          return nodeValue.indexOf(upperSearchValue) !== -1;\\n        };\\n      }\\n\\n      newState.filteredTreeNodes = (0, _util2.getFilterTree)(newState.treeNodes || prevState.treeNodes, newState.searchValue, filterTreeNodeFn);\\n    }\\n\\n    // Checked Strategy\\n    processState('showCheckedStrategy', function () {\\n      newState.selectorValueList = newState.selectorValueList || (0, _util2.formatSelectorValue)(newState.valueList || prevState.valueList, nextProps, newState.valueEntities || prevState.valueEntities);\\n    });\\n\\n    return newState;\\n  };\\n\\n  Select.prototype.componentDidMount = function componentDidMount() {\\n    var _props = this.props,\\n        autoFocus = _props.autoFocus,\\n        disabled = _props.disabled;\\n\\n\\n    if (autoFocus && !disabled) {\\n      this.focus();\\n    }\\n  };\\n\\n  Select.prototype.componentDidUpdate = function componentDidUpdate(_, prevState) {\\n    if (prevState.valueList !== this.state.valueList) {\\n      this.forcePopupAlign();\\n    }\\n  };\\n\\n  // ==================== Selector ====================\\n\\n\\n  // Handle key board event in both Selector and Popup\\n\\n\\n  // ===================== Popup ======================\\n\\n\\n  // ==================== Trigger =====================\\n\\n  /**\\n   * Only update the value which is not in props\\n   */\\n\\n\\n  // [Legacy] Origin provide `documentClickClose` which triggered by `Trigger`\\n  // Currently `TreeSelect` align the hide popup logic as `Select` which blur to hide.\\n  // `documentClickClose` is not accurate anymore. Let's just keep the key word.\\n\\n\\n  // Tree checkable is also a multiple case\\n\\n\\n  // [Legacy] To align with `Select` component,\\n  // We use `searchValue` instead of `inputValue`\\n  // but currently still need support that.\\n  // Add this method the check if is controlled\\n\\n\\n  // TODO: onChoiceAnimationLeave\\n\\n\\n  /**\\n   * 1. Update state valueList.\\n   * 2. Fire `onChange` event to user.\\n   */\\n\\n\\n  Select.prototype.focus = function focus() {\\n    this.selectorRef.current.focus();\\n  };\\n\\n  Select.prototype.blur = function blur() {\\n    this.selectorRef.current.blur();\\n  };\\n\\n  // ===================== Render =====================\\n\\n  Select.prototype.render = function render() {\\n    var _state = this.state,\\n        valueList = _state.valueList,\\n        missValueList = _state.missValueList,\\n        selectorValueList = _state.selectorValueList,\\n        valueEntities = _state.valueEntities,\\n        keyEntities = _state.keyEntities,\\n        searchValue = _state.searchValue,\\n        open = _state.open,\\n        focused = _state.focused,\\n        treeNodes = _state.treeNodes,\\n        filteredTreeNodes = _state.filteredTreeNodes;\\n    var prefixCls = this.props.prefixCls;\\n\\n    var isMultiple = this.isMultiple();\\n\\n    var passProps = (0, _extends3['default'])({}, this.props, {\\n      isMultiple: isMultiple,\\n      valueList: valueList,\\n      selectorValueList: [].concat(missValueList, selectorValueList),\\n      valueEntities: valueEntities,\\n      keyEntities: keyEntities,\\n      searchValue: searchValue,\\n      upperSearchValue: (searchValue || '').toUpperCase(), // Perf save\\n      open: open,\\n      focused: focused,\\n      dropdownPrefixCls: prefixCls + '-dropdown',\\n      ariaId: this.ariaId\\n    });\\n\\n    var Popup = isMultiple ? _MultiplePopup2['default'] : _SinglePopup2['default'];\\n    var $popup = _react2['default'].createElement(Popup, (0, _extends3['default'])({}, passProps, {\\n      onTreeExpanded: this.delayForcePopupAlign,\\n      treeNodes: treeNodes,\\n      filteredTreeNodes: filteredTreeNodes\\n    }));\\n\\n    var Selector = isMultiple ? _MultipleSelector2['default'] : _SingleSelector2['default'];\\n    var $selector = _react2['default'].createElement(Selector, (0, _extends3['default'])({}, passProps, {\\n      ref: this.selectorRef,\\n      onChoiceAnimationLeave: this.forcePopupAlign\\n    }));\\n\\n    return _react2['default'].createElement(\\n      _SelectTrigger2['default'],\\n      (0, _extends3['default'])({}, passProps, {\\n\\n        ref: this.selectTriggerRef,\\n        popupElement: $popup,\\n\\n        onKeyDown: this.onKeyDown,\\n        onDropdownVisibleChange: this.onDropdownVisibleChange\\n      }),\\n      $selector\\n    );\\n  };\\n\\n  return Select;\\n}(_react2['default'].Component);\\n\\nSelect.propTypes = {\\n  prefixCls: _propTypes2['default'].string,\\n  prefixAria: _propTypes2['default'].string,\\n  multiple: _propTypes2['default'].bool,\\n  showArrow: _propTypes2['default'].bool,\\n  open: _propTypes2['default'].bool,\\n  value: _propTypes3.valueProp,\\n  autoFocus: _propTypes2['default'].bool,\\n\\n  defaultOpen: _propTypes2['default'].bool,\\n  defaultValue: _propTypes3.valueProp,\\n\\n  showSearch: _propTypes2['default'].bool,\\n  placeholder: _propTypes2['default'].node,\\n  inputValue: _propTypes2['default'].string, // [Legacy] Deprecated. Use `searchValue` instead.\\n  searchValue: _propTypes2['default'].string,\\n  autoClearSearchValue: _propTypes2['default'].bool,\\n  searchPlaceholder: _propTypes2['default'].node, // [Legacy] Confuse with placeholder\\n  disabled: _propTypes2['default'].bool,\\n  children: _propTypes2['default'].node,\\n  labelInValue: _propTypes2['default'].bool,\\n  maxTagCount: _propTypes2['default'].number,\\n  maxTagPlaceholder: _propTypes2['default'].oneOfType([_propTypes2['default'].node, _propTypes2['default'].func]),\\n  maxTagTextLength: _propTypes2['default'].number,\\n  showCheckedStrategy: _propTypes2['default'].oneOf([_strategies.SHOW_ALL, _strategies.SHOW_PARENT, _strategies.SHOW_CHILD]),\\n\\n  dropdownMatchSelectWidth: _propTypes2['default'].bool,\\n  treeData: _propTypes2['default'].array,\\n  treeDataSimpleMode: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].object]),\\n  treeNodeFilterProp: _propTypes2['default'].string,\\n  treeNodeLabelProp: _propTypes2['default'].string,\\n  treeCheckable: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].node]),\\n  treeCheckStrictly: _propTypes2['default'].bool,\\n  treeIcon: _propTypes2['default'].bool,\\n  treeLine: _propTypes2['default'].bool,\\n  treeDefaultExpandAll: _propTypes2['default'].bool,\\n  treeDefaultExpandedKeys: _propTypes2['default'].array,\\n  loadData: _propTypes2['default'].func,\\n  filterTreeNode: _propTypes2['default'].oneOfType([_propTypes2['default'].func, _propTypes2['default'].bool]),\\n\\n  notFoundContent: _propTypes2['default'].string,\\n\\n  onSearch: _propTypes2['default'].func,\\n  onSelect: _propTypes2['default'].func,\\n  onDeselect: _propTypes2['default'].func,\\n  onChange: _propTypes2['default'].func,\\n  onDropdownVisibleChange: _propTypes2['default'].func\\n};\\nSelect.childContextTypes = {\\n  rcTreeSelect: _propTypes2['default'].shape((0, _extends3['default'])({}, _BaseSelector.selectorContextTypes, _MultipleSelector.multipleSelectorContextTypes, _BasePopup.popupContextTypes, {\\n\\n    onSearchInputChange: _propTypes2['default'].func,\\n    onSearchInputKeyDown: _propTypes2['default'].func\\n  }))\\n};\\nSelect.defaultProps = {\\n  prefixCls: 'rc-tree-select',\\n  prefixAria: 'rc-tree-select',\\n  showArrow: true,\\n  showSearch: true,\\n  autoClearSearchValue: true,\\n  showCheckedStrategy: _strategies.SHOW_CHILD,\\n\\n  // dropdownMatchSelectWidth change the origin design, set to false now\\n  // ref: https://github.com/react-component/select/blob/4cad95e098a341a09de239ad6981067188842020/src/Select.jsx#L344\\n  // ref: https://github.com/react-component/select/pull/71\\n  treeNodeFilterProp: 'value',\\n  treeNodeLabelProp: 'title',\\n  treeIcon: false,\\n  notFoundContent: 'Not Found'\\n};\\n\\nvar _initialiseProps = function _initialiseProps() {\\n  var _this2 = this;\\n\\n  this.onSelectorFocus = function () {\\n    _this2.setState({ focused: true });\\n  };\\n\\n  this.onSelectorBlur = function () {\\n    _this2.setState({ focused: false });\\n\\n    // TODO: Close when Popup is also not focused\\n    // this.setState({ open: false });\\n  };\\n\\n  this.onComponentKeyDown = function (event) {\\n    var open = _this2.state.open;\\n    var keyCode = event.keyCode;\\n\\n\\n    if (!open) {\\n      if ([_KeyCode2['default'].ENTER, _KeyCode2['default'].DOWN].indexOf(keyCode) !== -1) {\\n        _this2.setOpenState(true);\\n      }\\n    } else if (_KeyCode2['default'].ESC === keyCode) {\\n      _this2.setOpenState(false);\\n    } else if ([_KeyCode2['default'].UP, _KeyCode2['default'].DOWN, _KeyCode2['default'].LEFT, _KeyCode2['default'].RIGHT].indexOf(keyCode) !== -1) {\\n      // TODO: Handle `open` state\\n      event.stopPropagation();\\n    }\\n  };\\n\\n  this.onDeselect = function (wrappedValue, node, nodeEventInfo) {\\n    var onDeselect = _this2.props.onDeselect;\\n\\n    if (!onDeselect) return;\\n\\n    onDeselect(wrappedValue, node, nodeEventInfo);\\n  };\\n\\n  this.onSelectorClear = function (event) {\\n    var disabled = _this2.props.disabled;\\n\\n    if (disabled) return;\\n\\n    _this2.triggerChange([], []);\\n\\n    if (!_this2.isSearchValueControlled()) {\\n      _this2.setUncontrolledState({\\n        searchValue: '',\\n        filteredTreeNodes: null\\n      });\\n    }\\n\\n    event.stopPropagation();\\n  };\\n\\n  this.onMultipleSelectorRemove = function (event, removeValue) {\\n    event.stopPropagation();\\n\\n    var _state2 = _this2.state,\\n        valueList = _state2.valueList,\\n        missValueList = _state2.missValueList,\\n        valueEntities = _state2.valueEntities;\\n    var _props2 = _this2.props,\\n        treeCheckable = _props2.treeCheckable,\\n        treeCheckStrictly = _props2.treeCheckStrictly,\\n        treeNodeLabelProp = _props2.treeNodeLabelProp,\\n        disabled = _props2.disabled;\\n\\n    if (disabled) return;\\n\\n    // Find trigger entity\\n    var triggerEntity = valueEntities[removeValue];\\n\\n    // Clean up value\\n    var newValueList = valueList;\\n    if (triggerEntity) {\\n      // If value is in tree\\n      if (treeCheckable && !treeCheckStrictly) {\\n        newValueList = valueList.filter(function (_ref) {\\n          var value = _ref.value;\\n\\n          var entity = valueEntities[value];\\n          return !(0, _util2.isPosRelated)(entity.pos, triggerEntity.pos);\\n        });\\n      } else {\\n        newValueList = valueList.filter(function (_ref2) {\\n          var value = _ref2.value;\\n          return value !== removeValue;\\n        });\\n      }\\n    }\\n\\n    var triggerNode = triggerEntity ? triggerEntity.node : null;\\n\\n    var extraInfo = {\\n      triggerValue: removeValue,\\n      triggerNode: triggerNode\\n    };\\n    var deselectInfo = {\\n      node: triggerNode\\n    };\\n\\n    // [Legacy] Little hack on this to make same action as `onCheck` event.\\n    if (treeCheckable) {\\n      var filteredEntityList = newValueList.map(function (_ref3) {\\n        var value = _ref3.value;\\n        return valueEntities[value];\\n      });\\n\\n      deselectInfo.event = 'check';\\n      deselectInfo.checked = false;\\n      deselectInfo.checkedNodes = filteredEntityList.map(function (_ref4) {\\n        var node = _ref4.node;\\n        return node;\\n      });\\n      deselectInfo.checkedNodesPositions = filteredEntityList.map(function (_ref5) {\\n        var node = _ref5.node,\\n            pos = _ref5.pos;\\n        return { node: node, pos: pos };\\n      });\\n\\n      if (treeCheckStrictly) {\\n        extraInfo.allCheckedNodes = deselectInfo.checkedNodes;\\n      } else {\\n        // TODO: It's too expansive to get `halfCheckedKeys` in onDeselect. Not pass this.\\n        extraInfo.allCheckedNodes = (0, _util2.flatToHierarchy)(filteredEntityList).map(function (_ref6) {\\n          var node = _ref6.node;\\n          return node;\\n        });\\n      }\\n    } else {\\n      deselectInfo.event = 'select';\\n      deselectInfo.selected = false;\\n      deselectInfo.selectedNodes = newValueList.map(function (_ref7) {\\n        var value = _ref7.value;\\n        return (valueEntities[value] || {}).node;\\n      });\\n    }\\n\\n    // Some value user pass prop is not in the tree, we also need clean it\\n    var newMissValueList = missValueList.filter(function (_ref8) {\\n      var value = _ref8.value;\\n      return value !== removeValue;\\n    });\\n\\n    var wrappedValue = void 0;\\n    if (_this2.isLabelInValue()) {\\n      wrappedValue = {\\n        label: triggerNode ? triggerNode.props[treeNodeLabelProp] : null,\\n        value: removeValue\\n      };\\n    } else {\\n      wrappedValue = removeValue;\\n    }\\n\\n    _this2.onDeselect(wrappedValue, triggerNode, deselectInfo);\\n\\n    _this2.triggerChange(newMissValueList, newValueList, extraInfo);\\n  };\\n\\n  this.onValueTrigger = function (isAdd, nodeList, nodeEventInfo, nodeExtraInfo) {\\n    var node = nodeEventInfo.node;\\n    var value = node.props.value;\\n    var _state3 = _this2.state,\\n        missValueList = _state3.missValueList,\\n        valueEntities = _state3.valueEntities,\\n        keyEntities = _state3.keyEntities,\\n        treeNodes = _state3.treeNodes;\\n    var _props3 = _this2.props,\\n        disabled = _props3.disabled,\\n        inputValue = _props3.inputValue,\\n        treeNodeLabelProp = _props3.treeNodeLabelProp,\\n        onSelect = _props3.onSelect,\\n        treeCheckable = _props3.treeCheckable,\\n        treeCheckStrictly = _props3.treeCheckStrictly,\\n        autoClearSearchValue = _props3.autoClearSearchValue;\\n\\n    var label = node.props[treeNodeLabelProp];\\n\\n    if (disabled) return;\\n\\n    // Wrap the return value for user\\n    var wrappedValue = void 0;\\n    if (_this2.isLabelInValue()) {\\n      wrappedValue = {\\n        value: value,\\n        label: label\\n      };\\n    } else {\\n      wrappedValue = value;\\n    }\\n\\n    // [Legacy] Origin code not trigger `onDeselect` every time. Let's align the behaviour.\\n    if (isAdd) {\\n      if (onSelect) {\\n        onSelect(wrappedValue, node, nodeEventInfo);\\n      }\\n    } else {\\n      _this2.onDeselect(wrappedValue, node, nodeEventInfo);\\n    }\\n\\n    // Get wrapped value list.\\n    // This is a bit hack cause we use key to match the value.\\n    var newValueList = nodeList.map(function (_ref9) {\\n      var props = _ref9.props;\\n      return {\\n        value: props.value,\\n        label: props[treeNodeLabelProp]\\n      };\\n    });\\n\\n    // When is `treeCheckable` and with `searchValue`, `valueList` is not full filled.\\n    // We need calculate the missing nodes.\\n    if (treeCheckable && !treeCheckStrictly) {\\n      var keyList = newValueList.map(function (_ref10) {\\n        var val = _ref10.value;\\n        return valueEntities[val].key;\\n      });\\n      if (isAdd) {\\n        keyList = (0, _util.calcCheckStateConduct)(treeNodes, keyList).checkedKeys;\\n      } else {\\n        keyList = (0, _util2.calcUncheckConduct)(keyList, valueEntities[value].key, keyEntities);\\n      }\\n      newValueList = keyList.map(function (key) {\\n        var props = keyEntities[key].node.props;\\n\\n        return {\\n          value: props.value,\\n          label: props[treeNodeLabelProp]\\n        };\\n      });\\n    }\\n\\n    // Clean up `searchValue` when this prop is set\\n    if (!_this2.isSearchValueControlled() && (autoClearSearchValue || inputValue === null)) {\\n      _this2.setUncontrolledState({\\n        searchValue: '',\\n        filteredTreeNodes: null\\n      });\\n    }\\n\\n    // [Legacy] Provide extra info\\n    var extraInfo = (0, _extends3['default'])({}, nodeExtraInfo, {\\n      triggerValue: value,\\n      triggerNode: node\\n    });\\n\\n    _this2.triggerChange(missValueList, newValueList, extraInfo);\\n  };\\n\\n  this.onTreeNodeSelect = function (_, nodeEventInfo) {\\n    var _props4 = _this2.props,\\n        treeCheckable = _props4.treeCheckable,\\n        multiple = _props4.multiple;\\n\\n    if (treeCheckable) return;\\n\\n    if (!multiple) {\\n      _this2.setOpenState(false);\\n    }\\n\\n    var selectedNodes = nodeEventInfo.selectedNodes;\\n\\n    var isAdd = nodeEventInfo.selected;\\n    _this2.onValueTrigger(isAdd, selectedNodes, nodeEventInfo, { selected: isAdd });\\n  };\\n\\n  this.onTreeNodeCheck = function (_, nodeEventInfo) {\\n    var _state4 = _this2.state,\\n        searchValue = _state4.searchValue,\\n        keyEntities = _state4.keyEntities,\\n        valueEntities = _state4.valueEntities,\\n        valueList = _state4.valueList;\\n    var treeCheckStrictly = _this2.props.treeCheckStrictly;\\n    var checkedNodes = nodeEventInfo.checkedNodes,\\n        checkedNodesPositions = nodeEventInfo.checkedNodesPositions;\\n\\n    var isAdd = nodeEventInfo.checked;\\n\\n    var extraInfo = {\\n      checked: isAdd\\n    };\\n\\n    var checkedNodeList = checkedNodes;\\n\\n    // [Legacy] Check event provide `allCheckedNodes`.\\n    // When `treeCheckStrictly` or internal `searchValue` is set, TreeNode will be unrelated:\\n    // - Related: Show the top checked nodes and has children prop.\\n    // - Unrelated: Show all the checked nodes.\\n\\n    if (treeCheckStrictly) {\\n      extraInfo.allCheckedNodes = nodeEventInfo.checkedNodes;\\n    } else if (searchValue) {\\n      var oriKeyList = valueList.map(function (_ref11) {\\n        var value = _ref11.value;\\n        return valueEntities[value];\\n      }).filter(function (entity) {\\n        return entity;\\n      }).map(function (_ref12) {\\n        var key = _ref12.key;\\n        return key;\\n      });\\n\\n      var keyList = void 0;\\n      if (isAdd) {\\n        keyList = Array.from(new Set([].concat(oriKeyList, [checkedNodeList.map(function (_ref13) {\\n          var value = _ref13.props.value;\\n          return valueEntities[value].key;\\n        })])));\\n\\n        checkedNodeList = keyList.map(function (key) {\\n          return keyEntities[key].node;\\n        });\\n      } else {\\n        keyList = (0, _util2.calcUncheckConduct)(oriKeyList, nodeEventInfo.node.props.eventKey, keyEntities);\\n      }\\n\\n      // Let's follow as not `treeCheckStrictly` format\\n      extraInfo.allCheckedNodes = keyList.map(function (key) {\\n        return (0, _util2.cleanEntity)(keyEntities[key]);\\n      });\\n    } else {\\n      extraInfo.allCheckedNodes = (0, _util2.flatToHierarchy)(checkedNodesPositions);\\n    }\\n\\n    _this2.onValueTrigger(isAdd, checkedNodeList, nodeEventInfo, extraInfo);\\n  };\\n\\n  this.onDropdownVisibleChange = function (open) {\\n    _this2.setOpenState(open, true);\\n  };\\n\\n  this.onSearchInputChange = function (_ref14) {\\n    var value = _ref14.target.value;\\n    var treeNodes = _this2.state.treeNodes;\\n    var _props5 = _this2.props,\\n        onSearch = _props5.onSearch,\\n        filterTreeNode = _props5.filterTreeNode,\\n        treeNodeFilterProp = _props5.treeNodeFilterProp;\\n\\n\\n    if (onSearch) {\\n      onSearch(value);\\n    }\\n\\n    var isSet = false;\\n\\n    if (!_this2.isSearchValueControlled()) {\\n      isSet = _this2.setUncontrolledState({\\n        searchValue: value\\n      });\\n      _this2.setOpenState(true);\\n    }\\n\\n    if (isSet) {\\n      // Do the search logic\\n      var upperSearchValue = String(value).toUpperCase();\\n\\n      var filterTreeNodeFn = filterTreeNode;\\n      if (!filterTreeNodeFn) {\\n        filterTreeNodeFn = function filterTreeNodeFn(_, node) {\\n          var nodeValue = String(node.props[treeNodeFilterProp]).toUpperCase();\\n          return nodeValue.indexOf(upperSearchValue) !== -1;\\n        };\\n      }\\n\\n      _this2.setState({\\n        filteredTreeNodes: (0, _util2.getFilterTree)(treeNodes, value, filterTreeNodeFn)\\n      });\\n    }\\n  };\\n\\n  this.onSearchInputKeyDown = function (event) {\\n    var _state5 = _this2.state,\\n        searchValue = _state5.searchValue,\\n        valueList = _state5.valueList;\\n    var keyCode = event.keyCode;\\n\\n\\n    if (_KeyCode2['default'].BACKSPACE === keyCode && _this2.isMultiple() && !searchValue && valueList.length) {\\n      var lastValue = valueList[valueList.length - 1].value;\\n      _this2.onMultipleSelectorRemove(event, lastValue);\\n    }\\n  };\\n\\n  this.setUncontrolledState = function (state) {\\n    var needSync = false;\\n    var newState = {};\\n\\n    Object.keys(state).forEach(function (name) {\\n      if (name in _this2.props) return;\\n\\n      needSync = true;\\n      newState[name] = state[name];\\n    });\\n\\n    if (needSync) {\\n      _this2.setState(newState);\\n    }\\n\\n    return needSync;\\n  };\\n\\n  this.setOpenState = function (open) {\\n    var byTrigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\n    var onDropdownVisibleChange = _this2.props.onDropdownVisibleChange;\\n\\n\\n    if (onDropdownVisibleChange && onDropdownVisibleChange(open, { documentClickClose: !open && byTrigger }) === false) {\\n      return;\\n    }\\n\\n    _this2.setUncontrolledState({ open: open });\\n  };\\n\\n  this.isMultiple = function () {\\n    var _props6 = _this2.props,\\n        multiple = _props6.multiple,\\n        treeCheckable = _props6.treeCheckable;\\n\\n    return !!(multiple || treeCheckable);\\n  };\\n\\n  this.isLabelInValue = function () {\\n    return (0, _util2.isLabelInValue)(_this2.props);\\n  };\\n\\n  this.isSearchValueControlled = function () {\\n    var inputValue = _this2.props.inputValue;\\n\\n    if ('searchValue' in _this2.props) return true;\\n    return 'inputValue' in _this2.props && inputValue !== null;\\n  };\\n\\n  this.forcePopupAlign = function () {\\n    var $trigger = _this2.selectTriggerRef.current;\\n\\n    if ($trigger) {\\n      $trigger.forcePopupAlign();\\n    }\\n  };\\n\\n  this.delayForcePopupAlign = function () {\\n    (0, _raf2['default'])(_this2.forcePopupAlign);\\n  };\\n\\n  this.triggerChange = function (missValueList, valueList) {\\n    var extraInfo = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\n    var valueEntities = _this2.state.valueEntities;\\n    var _props7 = _this2.props,\\n        onChange = _props7.onChange,\\n        disabled = _props7.disabled;\\n\\n\\n    if (disabled) return;\\n\\n    // Trigger\\n    var extra = (0, _extends3['default'])({\\n      // [Legacy] Always return as array contains label & value\\n      preValue: _this2.state.selectorValueList.map(function (_ref15) {\\n        var label = _ref15.label,\\n            value = _ref15.value;\\n        return { label: label, value: value };\\n      })\\n    }, extraInfo);\\n\\n    // Format value by `treeCheckStrictly`\\n    var selectorValueList = (0, _util2.formatSelectorValue)(valueList, _this2.props, valueEntities);\\n\\n    if (!('value' in _this2.props)) {\\n      _this2.setState({\\n        missValueList: missValueList,\\n        valueList: valueList,\\n        selectorValueList: selectorValueList\\n      });\\n    }\\n\\n    // Only do the logic when `onChange` function provided\\n    if (onChange) {\\n      var connectValueList = void 0;\\n\\n      // Get value by mode\\n      if (_this2.isMultiple()) {\\n        connectValueList = [].concat(missValueList, selectorValueList);\\n      } else {\\n        connectValueList = selectorValueList.slice(0, 1);\\n      }\\n\\n      var labelList = null;\\n      var returnValue = void 0;\\n\\n      if (_this2.isLabelInValue()) {\\n        returnValue = connectValueList.map(function (_ref16) {\\n          var label = _ref16.label,\\n              value = _ref16.value;\\n          return { label: label, value: value };\\n        });\\n      } else {\\n        labelList = [];\\n        returnValue = connectValueList.map(function (_ref17) {\\n          var label = _ref17.label,\\n              value = _ref17.value;\\n\\n          labelList.push(label);\\n          return value;\\n        });\\n      }\\n\\n      if (!_this2.isMultiple()) {\\n        returnValue = returnValue[0];\\n      }\\n\\n      onChange(returnValue, labelList, extra);\\n    }\\n  };\\n};\\n\\nSelect.TreeNode = _SelectNode2['default'];\\nSelect.SHOW_ALL = _strategies.SHOW_ALL;\\nSelect.SHOW_PARENT = _strategies.SHOW_PARENT;\\nSelect.SHOW_CHILD = _strategies.SHOW_CHILD;\\n\\n// Let warning show correct component name\\nSelect.displayName = 'TreeSelect';\\n\\n(0, _reactLifecyclesCompat.polyfill)(Select);\\n\\nexports['default'] = Select;\\nmodule.exports = exports['default'];\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"_interopRequireDefault\",\"obj\",\"__esModule\",\"_extends2\",\"_extends3\",\"_classCallCheck2\",\"_classCallCheck3\",\"_possibleConstructorReturn2\",\"_possibleConstructorReturn3\",\"_inherits2\",\"_inherits3\",\"_react\",\"_react2\",\"_propTypes\",\"_propTypes2\",\"_reactLifecyclesCompat\",\"_KeyCode\",\"_KeyCode2\",\"_util\",\"_shallowequal\",\"_shallowequal2\",\"_raf\",\"_raf2\",\"_SelectTrigger\",\"_SelectTrigger2\",\"_BaseSelector\",\"_BasePopup\",\"_SingleSelector\",\"_SingleSelector2\",\"_MultipleSelector\",\"_MultipleSelector2\",\"_SinglePopup\",\"_SinglePopup2\",\"_MultiplePopup\",\"_MultiplePopup2\",\"_strategies\",\"_util2\",\"_propTypes3\",\"_SelectNode\",\"_SelectNode2\",\"Select\",\"_React$Component\",\"props\",\"_this\",\"call\",\"_initialiseProps\",\"prefixAria\",\"defaultOpen\",\"state\",\"open\",\"valueList\",\"missValueList\",\"selectorValueList\",\"valueEntities\",\"keyEntities\",\"searchValue\",\"init\",\"selectorRef\",\"createRef\",\"selectTriggerRef\",\"ariaId\",\"generateAriaId\",\"prototype\",\"getChildContext\",\"Select.prototype.getChildContext\",\"rcTreeSelect\",\"onSelectorFocus\",\"onSelectorBlur\",\"onSelectorKeyDown\",\"onComponentKeyDown\",\"onSelectorClear\",\"onMultipleSelectorRemove\",\"onTreeNodeSelect\",\"onTreeNodeCheck\",\"onPopupKeyDown\",\"onSearchInputChange\",\"onSearchInputKeyDown\",\"getDerivedStateFromProps\",\"Select.getDerivedStateFromProps\",\"nextProps\",\"prevState\",\"processState\",\"propName\",\"updater\",\"prevProps\",\"_prevState$prevProps\",\"undefined\",\"treeCheckable\",\"treeCheckStrictly\",\"filterTreeNode\",\"treeNodeFilterProp\",\"treeDataSimpleMode\",\"newState\",\"valueRefresh\",\"propValue\",\"treeData\",\"treeDataChanged\",\"treeDataModeChanged\",\"prevValue\",\"prev\",\"simpleMapper\",\"id\",\"pId\",\"rootPId\",\"parseSimpleTreeData\",\"convertTreeToData\",\"_convertDataToEntitie\",\"convertDataToEntities\",\"treeNodes\",\"formatInternalValue\",\"filteredValueList\",\"keyList\",\"forEach\",\"wrapperValue\",\"entity\",\"value\",\"push\",\"key\",\"checkedKeys\",\"_calcCheckStateConduc\",\"calcCheckStateConduct\",\"map\",\"formatSelectorValue\",\"upperSearchValue\",\"String\",\"toUpperCase\",\"filterTreeNodeFn\",\"_\",\"node\",\"nodeValue\",\"indexOf\",\"filteredTreeNodes\",\"getFilterTree\",\"componentDidMount\",\"Select.prototype.componentDidMount\",\"_props\",\"disabled\",\"autoFocus\",\"focus\",\"componentDidUpdate\",\"Select.prototype.componentDidUpdate\",\"forcePopupAlign\",\"Select.prototype.focus\",\"current\",\"blur\",\"Select.prototype.blur\",\"render\",\"Select.prototype.render\",\"_state\",\"focused\",\"prefixCls\",\"isMultiple\",\"passProps\",\"concat\",\"dropdownPrefixCls\",\"$popup\",\"createElement\",\"Popup\",\"onTreeExpanded\",\"delayForcePopupAlign\",\"$selector\",\"Selector\",\"ref\",\"onChoiceAnimationLeave\",\"popupElement\",\"onKeyDown\",\"onDropdownVisibleChange\",\"Component\",\"propTypes\",\"string\",\"multiple\",\"bool\",\"showArrow\",\"valueProp\",\"defaultValue\",\"showSearch\",\"placeholder\",\"inputValue\",\"autoClearSearchValue\",\"searchPlaceholder\",\"children\",\"labelInValue\",\"maxTagCount\",\"number\",\"maxTagPlaceholder\",\"oneOfType\",\"func\",\"maxTagTextLength\",\"showCheckedStrategy\",\"oneOf\",\"SHOW_ALL\",\"SHOW_PARENT\",\"SHOW_CHILD\",\"dropdownMatchSelectWidth\",\"array\",\"object\",\"treeNodeLabelProp\",\"treeIcon\",\"treeLine\",\"treeDefaultExpandAll\",\"treeDefaultExpandedKeys\",\"loadData\",\"notFoundContent\",\"onSearch\",\"onSelect\",\"onDeselect\",\"onChange\",\"childContextTypes\",\"shape\",\"selectorContextTypes\",\"multipleSelectorContextTypes\",\"popupContextTypes\",\"defaultProps\",\"_this2\",\"this.onSelectorFocus\",\"setState\",\"this.onSelectorBlur\",\"this.onComponentKeyDown\",\"event\",\"keyCode\",\"ESC\",\"setOpenState\",\"UP\",\"DOWN\",\"LEFT\",\"RIGHT\",\"stopPropagation\",\"ENTER\",\"this.onDeselect\",\"wrappedValue\",\"nodeEventInfo\",\"this.onSelectorClear\",\"triggerChange\",\"isSearchValueControlled\",\"setUncontrolledState\",\"this.onMultipleSelectorRemove\",\"removeValue\",\"_state2\",\"_props2\",\"triggerEntity\",\"newValueList\",\"filter\",\"_ref\",\"isPosRelated\",\"pos\",\"_ref2\",\"triggerNode\",\"extraInfo\",\"triggerValue\",\"deselectInfo\",\"filteredEntityList\",\"_ref3\",\"checked\",\"checkedNodes\",\"_ref4\",\"checkedNodesPositions\",\"_ref5\",\"allCheckedNodes\",\"flatToHierarchy\",\"_ref6\",\"selected\",\"selectedNodes\",\"_ref7\",\"newMissValueList\",\"_ref8\",\"isLabelInValue\",\"label\",\"onValueTrigger\",\"this.onValueTrigger\",\"isAdd\",\"nodeList\",\"nodeExtraInfo\",\"_state3\",\"_props3\",\"_ref9\",\"_ref10\",\"calcUncheckConduct\",\"this.onTreeNodeSelect\",\"_props4\",\"this.onTreeNodeCheck\",\"_state4\",\"checkedNodeList\",\"oriKeyList\",\"_ref11\",\"_ref12\",\"Array\",\"from\",\"Set\",\"_ref13\",\"eventKey\",\"cleanEntity\",\"this.onDropdownVisibleChange\",\"this.onSearchInputChange\",\"_ref14\",\"target\",\"_props5\",\"isSet\",\"this.onSearchInputKeyDown\",\"_state5\",\"BACKSPACE\",\"length\",\"this.setUncontrolledState\",\"needSync\",\"Object\",\"keys\",\"name\",\"this.setOpenState\",\"byTrigger\",\"arguments\",\"documentClickClose\",\"this.isMultiple\",\"_props6\",\"this.isLabelInValue\",\"this.isSearchValueControlled\",\"this.forcePopupAlign\",\"$trigger\",\"this.delayForcePopupAlign\",\"this.triggerChange\",\"_props7\",\"extra\",\"preValue\",\"_ref15\",\"connectValueList\",\"slice\",\"labelList\",\"returnValue\",\"_ref16\",\"_ref17\",\"TreeNode\",\"displayName\",\"polyfill\"]\n}\n"]