["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/rc-editor-mention/lib/utils/getSearchWord.js"],"~:js","shadow$provide.module$node_modules$rc_editor_mention$lib$utils$getSearchWord=function(global,process,require,module,exports,shadow$shims){exports.__esModule=!0;exports[\"default\"]=function(editorState,selection){var anchorKey=selection.getAnchorKey();selection=selection.getAnchorOffset()-1;if(editorState=editorState.getCurrentContent().getBlockForKey(anchorKey)){editorState=editorState.getText();editorState=String(editorState);selection=Number(selection)>>>0;anchorKey=editorState.slice(0,selection+\n1).search(/\\S+$/);var right=editorState.slice(selection).search(/\\s/);selection=0>right?{word:editorState.slice(anchorKey),begin:anchorKey,end:editorState.length}:{word:editorState.slice(anchorKey,right+selection),begin:anchorKey,end:right+selection};return selection}return\"\"};module.exports=exports[\"default\"]}","~:source","shadow$provide[\"module$node_modules$rc_editor_mention$lib$utils$getSearchWord\"] = function(global,process,require,module,exports,shadow$shims) {\n'use strict';\n\nexports.__esModule = true;\nexports['default'] = getSearchWord;\nfunction getWord(text, position) {\n  var str = String(text);\n  /* eslint no-bitwise:0 */\n  var pos = Number(position) >>> 0;\n\n  // Search for the word's beginning and end.\n  var left = str.slice(0, pos + 1).search(/\\S+$/);\n  var right = str.slice(pos).search(/\\s/);\n\n  if (right < 0) {\n    return {\n      word: str.slice(left),\n      begin: left,\n      end: str.length\n    };\n  }\n\n  // Return the word, using the located bounds to extract it from the string.\n  return {\n    word: str.slice(left, right + pos),\n    begin: left,\n    end: right + pos\n  };\n}\n\nfunction getSearchWord(editorState, selection) {\n  var anchorKey = selection.getAnchorKey();\n  var anchorOffset = selection.getAnchorOffset() - 1;\n  var currentContent = editorState.getCurrentContent();\n  var currentBlock = currentContent.getBlockForKey(anchorKey);\n  if (currentBlock) {\n    var blockText = currentBlock.getText();\n    return getWord(blockText, anchorOffset);\n  }\n  return '';\n}\nmodule.exports = exports['default'];\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["begin","word","__esModule","end"]],"~:compiled-at",1532351402162,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$rc_editor_mention$lib$utils$getSearchWord.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,8DAAA,CAAkF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAG/ID,OAAAE,WAAA,CAAqB,CAAA,CACrBF,QAAA,CAAQ,SAAR,CAAA,CA0BAG,QAAsB,CAACC,WAAD,CAAcC,SAAd,CAAyB,CAC7C,IAAIC,UAAYD,SAAAE,aAAA,EACZC,UAAAA,CAAeH,SAAAI,gBAAA,EAAfD,CAA6C,CAGjD,IADIE,WACJ,CAFqBN,WAAAO,kBAAAC,EACFC,eAAA,CAA8BP,SAA9B,CACnB,CAAkB,CACZQ,WAAAA,CAAYJ,WAAAK,QAAA,EA9BdC,YAAAA,CAAMC,MAAA,CA+BOH,WA/BP,CAENI,UAAAA,CAAMC,MAAA,CA6BkBX,SA7BlB,CAANU,GAA2B,CAG3BE,UAAAA,CAAOJ,WAAAK,MAAA,CAAU,CAAV,CAAaH,SAAb;AAAmB,CAAnB,CAAAI,OAAA,CAA6B,MAA7B,CACX,KAAIC,MAAQP,WAAAK,MAAA,CAAUH,SAAV,CAAAI,OAAA,CAAsB,IAAtB,CAGV,UAAA,CADU,CAAZ,CAAIC,KAAJ,CACS,CACLC,KAAMR,WAAAK,MAAA,CAAUD,SAAV,CADD,CAELK,MAAOL,SAFF,CAGLM,IAAKV,WAAAW,OAHA,CADT,CASO,CACLH,KAAMR,WAAAK,MAAA,CAAUD,SAAV,CAAgBG,KAAhB,CAAwBL,SAAxB,CADD,CAELO,MAAOL,SAFF,CAGLM,IAAKH,KAALG,CAAaR,SAHR,CAcL,OAAO,UAFS,CAIlB,MAAO,EATsC,CAW/CnB,OAAAC,QAAA,CAAiBA,OAAA,CAAQ,SAAR,CAzC8H;\",\n\"sources\":[\"node_modules/rc-editor-mention/lib/utils/getSearchWord.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$rc_editor_mention$lib$utils$getSearchWord\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n'use strict';\\n\\nexports.__esModule = true;\\nexports['default'] = getSearchWord;\\nfunction getWord(text, position) {\\n  var str = String(text);\\n  /* eslint no-bitwise:0 */\\n  var pos = Number(position) >>> 0;\\n\\n  // Search for the word's beginning and end.\\n  var left = str.slice(0, pos + 1).search(/\\\\S+$/);\\n  var right = str.slice(pos).search(/\\\\s/);\\n\\n  if (right < 0) {\\n    return {\\n      word: str.slice(left),\\n      begin: left,\\n      end: str.length\\n    };\\n  }\\n\\n  // Return the word, using the located bounds to extract it from the string.\\n  return {\\n    word: str.slice(left, right + pos),\\n    begin: left,\\n    end: right + pos\\n  };\\n}\\n\\nfunction getSearchWord(editorState, selection) {\\n  var anchorKey = selection.getAnchorKey();\\n  var anchorOffset = selection.getAnchorOffset() - 1;\\n  var currentContent = editorState.getCurrentContent();\\n  var currentBlock = currentContent.getBlockForKey(anchorKey);\\n  if (currentBlock) {\\n    var blockText = currentBlock.getText();\\n    return getWord(blockText, anchorOffset);\\n  }\\n  return '';\\n}\\nmodule.exports = exports['default'];\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"__esModule\",\"getSearchWord\",\"editorState\",\"selection\",\"anchorKey\",\"getAnchorKey\",\"anchorOffset\",\"getAnchorOffset\",\"currentBlock\",\"getCurrentContent\",\"currentContent\",\"getBlockForKey\",\"blockText\",\"getText\",\"str\",\"String\",\"pos\",\"Number\",\"left\",\"slice\",\"search\",\"right\",\"word\",\"begin\",\"end\",\"length\"]\n}\n"]