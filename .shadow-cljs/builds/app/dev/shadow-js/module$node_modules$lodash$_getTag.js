["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_getTag.js"],"~:js","shadow$provide.module$node_modules$lodash$_getTag=function(global,process,require,module,exports,shadow$shims){global=require(\"module$node_modules$lodash$_DataView\");process=require(\"module$node_modules$lodash$_Map\");exports=require(\"module$node_modules$lodash$_Promise\");shadow$shims=require(\"module$node_modules$lodash$_Set\");var WeakMap=require(\"module$node_modules$lodash$_WeakMap\"),baseGetTag=require(\"module$node_modules$lodash$_baseGetTag\"),toSource=require(\"module$node_modules$lodash$_toSource\"),\ndataViewCtorString=toSource(global),mapCtorString=toSource(process),promiseCtorString=toSource(exports),setCtorString=toSource(shadow$shims),weakMapCtorString=toSource(WeakMap);require=baseGetTag;if(global&&\"[object DataView]\"!=require(new global(new ArrayBuffer(1)))||process&&\"[object Map]\"!=require(new process)||exports&&\"[object Promise]\"!=require(exports.resolve())||shadow$shims&&\"[object Set]\"!=require(new shadow$shims)||WeakMap&&\"[object WeakMap]\"!=require(new WeakMap))require=function(value){var result=\nbaseGetTag(value);if(value=(value=\"[object Object]\"==result?value.constructor:void 0)?toSource(value):\"\")switch(value){case dataViewCtorString:return\"[object DataView]\";case mapCtorString:return\"[object Map]\";case promiseCtorString:return\"[object Promise]\";case setCtorString:return\"[object Set]\";case weakMapCtorString:return\"[object WeakMap]\"}return result};module.exports=require}","~:source","shadow$provide[\"module$node_modules$lodash$_getTag\"] = function(global,process,require,module,exports,shadow$shims) {\nvar DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_baseGetTag","~$module$node_modules$lodash$_Set","~$module$node_modules$lodash$_DataView","~$module$node_modules$lodash$_Promise","~$shadow.js","~$module$node_modules$lodash$_Map","~$module$node_modules$lodash$_WeakMap","~$module$node_modules$lodash$_toSource"]],"~:properties",["^5",[]],"~:compiled-at",1532351402159,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_getTag.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,mCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAChHC,MAAAA,CAAWJ,OAAA,CAAQ,sCAAR,CACXK,QAAAA,CAAML,OAAA,CAAQ,iCAAR,CACNM,QAAAA,CAAUN,OAAA,CAAQ,qCAAR,CACVO,aAAAA,CAAMP,OAAA,CAAQ,iCAAR,CAJ0G,KAKhHQ,QAAUR,OAAA,CAAQ,qCAAR,CALsG,CAMhHS,WAAaT,OAAA,CAAQ,wCAAR,CANmG,CAOhHU,SAAWV,OAAA,CAAQ,sCAAR,CAPqG;AAmBhHW,mBAAqBD,QAAA,CAASN,MAAT,CAnB2F,CAoBhHQ,cAAgBF,QAAA,CAASL,OAAT,CApBgG,CAqBhHQ,kBAAoBH,QAAA,CAASJ,OAAT,CArB4F,CAsBhHQ,cAAgBJ,QAAA,CAASH,YAAT,CAtBgG,CAuBhHQ,kBAAoBL,QAAA,CAASF,OAAT,CASpBQ,QAAAA,CAASP,UAGb,IAAKL,MAAL,EAnBkBa,mBAmBlB,EAAiBD,OAAA,CAAO,IAAIZ,MAAJ,CAAa,IAAIc,WAAJ,CAAgB,CAAhB,CAAb,CAAP,CAAjB,EACKb,OADL,EAzBac,cAyBb,EACYH,OAAA,CAAO,IAAIX,OAAX,CADZ,EAEKC,OAFL,EAvBiBc,kBAuBjB,EAEgBJ,OAAA,CAAOV,OAAAe,QAAA,EAAP,CAFhB,EAGKd,YAHL,EAtBae,cAsBb,EAGYN,OAAA,CAAO,IAAIT,YAAX,CAHZ,EAIKC,OAJL,EArBiBe,kBAqBjB,EAIgBP,OAAA,CAAO,IAAIR,OAAX,CAJhB,CAKEQ,OAAA,CAASA,QAAQ,CAACQ,KAAD,CAAQ,CAAA,IACnBC;AAAShB,UAAA,CAAWe,KAAX,CAIb,IAFIE,KAEJ,CAFiB,CADbC,KACa,CAhCLC,iBA+BD,EAAAH,MAAA,CAAsBD,KAAAK,YAAtB,CAA0CC,IAAAA,EACpC,EAAOpB,QAAA,CAASiB,KAAT,CAAP,CAAwB,EAEzC,CACE,OAAQD,KAAR,EACE,KAAKf,kBAAL,CAAyB,MA/BfM,mBAgCV,MAAKL,aAAL,CAAoB,MAtCfO,cAuCL,MAAKN,iBAAL,CAAwB,MArCfO,kBAsCT,MAAKN,aAAL,CAAoB,MArCfQ,cAsCL,MAAKP,iBAAL,CAAwB,MArCfQ,kBAgCX,CAQF,MAAOE,OAdgB,CAkB3BxB,OAAAC,QAAA,CAAiBc,OA1DmG;\",\n\"sources\":[\"node_modules/lodash/_getTag.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_getTag\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar DataView = require('./_DataView'),\\n    Map = require('./_Map'),\\n    Promise = require('./_Promise'),\\n    Set = require('./_Set'),\\n    WeakMap = require('./_WeakMap'),\\n    baseGetTag = require('./_baseGetTag'),\\n    toSource = require('./_toSource');\\n\\n/** `Object#toString` result references. */\\nvar mapTag = '[object Map]',\\n    objectTag = '[object Object]',\\n    promiseTag = '[object Promise]',\\n    setTag = '[object Set]',\\n    weakMapTag = '[object WeakMap]';\\n\\nvar dataViewTag = '[object DataView]';\\n\\n/** Used to detect maps, sets, and weakmaps. */\\nvar dataViewCtorString = toSource(DataView),\\n    mapCtorString = toSource(Map),\\n    promiseCtorString = toSource(Promise),\\n    setCtorString = toSource(Set),\\n    weakMapCtorString = toSource(WeakMap);\\n\\n/**\\n * Gets the `toStringTag` of `value`.\\n *\\n * @private\\n * @param {*} value The value to query.\\n * @returns {string} Returns the `toStringTag`.\\n */\\nvar getTag = baseGetTag;\\n\\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\\n    (Map && getTag(new Map) != mapTag) ||\\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\\n    (Set && getTag(new Set) != setTag) ||\\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\\n  getTag = function(value) {\\n    var result = baseGetTag(value),\\n        Ctor = result == objectTag ? value.constructor : undefined,\\n        ctorString = Ctor ? toSource(Ctor) : '';\\n\\n    if (ctorString) {\\n      switch (ctorString) {\\n        case dataViewCtorString: return dataViewTag;\\n        case mapCtorString: return mapTag;\\n        case promiseCtorString: return promiseTag;\\n        case setCtorString: return setTag;\\n        case weakMapCtorString: return weakMapTag;\\n      }\\n    }\\n    return result;\\n  };\\n}\\n\\nmodule.exports = getTag;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"DataView\",\"Map\",\"Promise\",\"Set\",\"WeakMap\",\"baseGetTag\",\"toSource\",\"dataViewCtorString\",\"mapCtorString\",\"promiseCtorString\",\"setCtorString\",\"weakMapCtorString\",\"getTag\",\"dataViewTag\",\"ArrayBuffer\",\"mapTag\",\"promiseTag\",\"resolve\",\"setTag\",\"weakMapTag\",\"value\",\"result\",\"ctorString\",\"Ctor\",\"objectTag\",\"constructor\",\"undefined\"]\n}\n"]