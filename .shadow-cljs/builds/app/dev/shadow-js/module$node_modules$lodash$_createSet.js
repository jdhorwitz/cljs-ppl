["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_createSet.js"],"~:js","shadow$provide.module$node_modules$lodash$_createSet=function(global,process,require,module,exports,shadow$shims){var Set=require(\"module$node_modules$lodash$_Set\");global=require(\"module$node_modules$lodash$noop\");require=require(\"module$node_modules$lodash$_setToArray\");process=1/0;require=Set&&1/require(new Set([,-0]))[1]==process?function(values){return new Set(values)}:global;module.exports=require}","~:source","shadow$provide[\"module$node_modules$lodash$_createSet\"] = function(global,process,require,module,exports,shadow$shims) {\nvar Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$lodash$_Set","~$module$node_modules$lodash$noop","~$shadow.js","~$module$node_modules$lodash$_setToArray"]],"~:properties",["^5",[]],"~:compiled-at",1532351402173,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_createSet.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAAA,IACnHC,IAAMJ,OAAA,CAAQ,iCAAR,CACNK,OAAAA,CAAOL,OAAA,CAAQ,iCAAR,CACPM,QAAAA,CAAaN,OAAA,CAAQ,wCAAR,CAGbO,QAAAA,CAAW,CAAXA,CAAe,CASfC,QAAAA,CAAcJ,GAAF,EAAU,CAAV,CAAcE,OAAA,CAAW,IAAIF,GAAJ,CAAQ,CAAA,CAAG,EAAH,CAAR,CAAX,CAAA,CAA2B,CAA3B,CAAd,EAAgDG,OAAhD,CAAmE,QAAQ,CAACE,MAAD,CAAS,CAClG,MAAO,KAAIL,GAAJ,CAAQK,MAAR,CAD2F,CAApF,CAA4DJ,MAI5EJ,OAAAC,QAAA,CAAiBM,OAnBsG;\",\n\"sources\":[\"node_modules/lodash/_createSet.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_createSet\\\"] = function(global,process,require,module,exports,shadow$shims) {\\nvar Set = require('./_Set'),\\n    noop = require('./noop'),\\n    setToArray = require('./_setToArray');\\n\\n/** Used as references for various `Number` constants. */\\nvar INFINITY = 1 / 0;\\n\\n/**\\n * Creates a set object of `values`.\\n *\\n * @private\\n * @param {Array} values The values to add to the set.\\n * @returns {Object} Returns the new set.\\n */\\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\\n  return new Set(values);\\n};\\n\\nmodule.exports = createSet;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Set\",\"noop\",\"setToArray\",\"INFINITY\",\"createSet\",\"values\"]\n}\n"]