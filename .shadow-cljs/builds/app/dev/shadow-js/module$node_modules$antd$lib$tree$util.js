["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/antd/lib/tree/util.js"],"~:js","shadow$provide.module$node_modules$antd$lib$tree$util=function(global,process,require,module,exports,shadow$shims){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.calcRangeKeys=function(nodeList,expandedKeys,startKey,endKey){var keys=[],record=Record.None;if(startKey&&startKey===endKey)return[startKey];if(!startKey||!endKey)return[];(0,_util.traverseTreeNodes)(nodeList,function(_ref){_ref=_ref.key;if(record===Record.End)return!1;if(_ref===startKey||_ref===endKey)if(keys.push(_ref),\nrecord===Record.None)record=Record.Start;else{if(record===Record.Start)return record=Record.End,!1}else record===Record.Start&&keys.push(_ref);if(-1===expandedKeys.indexOf(_ref))return!1});return keys};var _util=require(\"module$node_modules$rc_tree$lib$util\"),Record;(function(Record){Record[Record.None=0]=\"None\";Record[Record.Start=1]=\"Start\";Record[Record.End=2]=\"End\"})(Record||(Record={}))}","~:source","shadow$provide[\"module$node_modules$antd$lib$tree$util\"] = function(global,process,require,module,exports,shadow$shims) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.calcRangeKeys = calcRangeKeys;\n\nvar _util = require(\"rc-tree/lib/util\");\n\nvar Record;\n(function (Record) {\n    Record[Record[\"None\"] = 0] = \"None\";\n    Record[Record[\"Start\"] = 1] = \"Start\";\n    Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\n/** 计算选中范围，只考虑expanded情况以优化性能 */\nfunction calcRangeKeys(nodeList, expandedKeys, startKey, endKey) {\n    var keys = [];\n    var record = Record.None;\n    if (startKey && startKey === endKey) {\n        return [startKey];\n    }\n    if (!startKey || !endKey) {\n        return [];\n    }\n    function matchKey(key) {\n        return key === startKey || key === endKey;\n    }\n    (0, _util.traverseTreeNodes)(nodeList, function (_ref) {\n        var key = _ref.key;\n\n        if (record === Record.End) {\n            return false;\n        }\n        if (matchKey(key)) {\n            // Match test\n            keys.push(key);\n            if (record === Record.None) {\n                record = Record.Start;\n            } else if (record === Record.Start) {\n                record = Record.End;\n                return false;\n            }\n        } else if (record === Record.Start) {\n            // Append selection\n            keys.push(key);\n        }\n        if (expandedKeys.indexOf(key) === -1) {\n            return false;\n        }\n    });\n    return keys;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$rc_tree$lib$util","~$shadow.js"]],"~:properties",["^5",["__esModule","value","calcRangeKeys"]],"~:compiled-at",1532351402103,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$antd$lib$tree$util.js\",\n\"lineCount\":2,\n\"mappings\":\"AAAAA,cAAA,uCAAA,CAA2D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAGxHC,MAAAC,eAAA,CAAsBH,OAAtB,CAA+B,YAA/B,CAA6C,CACzCI,MAAO,CAAA,CADkC,CAA7C,CAGAJ,QAAAK,cAAA,CAWAA,QAAsB,CAACC,QAAD,CAAWC,YAAX,CAAyBC,QAAzB,CAAmCC,MAAnC,CAA2C,CAC7D,IAAIC,KAAO,EAAX,CACIC,OAASC,MAAAC,KACb,IAAIL,QAAJ,EAAgBA,QAAhB,GAA6BC,MAA7B,CACI,MAAO,CAACD,QAAD,CAEX,IAAI,CAACA,QAAL,EAAiB,CAACC,MAAlB,CACI,MAAO,EAKX,EAAC,CAAA,CAAGK,KAAAC,kBAAJ,EAA6BT,QAA7B,CAAuC,QAAS,CAACU,IAAD,CAAO,CAC/CC,IAAAA,CAAMD,IAAAC,IAEV,IAAIN,MAAJ,GAAeC,MAAAM,IAAf,CACI,MAAO,CAAA,CAEX,IAAaD,IAAb,GAReT,QAQf,EAAaS,IAAb,GARmCR,MAQnC,CAGI,GADAC,IAAAS,KAAA,CAAUF,IAAV,CACI;AAAAN,MAAA,GAAWC,MAAAC,KAAf,CACIF,MAAA,CAASC,MAAAQ,MADb,KAEO,IAAIT,MAAJ,GAAeC,MAAAQ,MAAf,CAEH,MADAT,OACO,CADEC,MAAAM,IACF,CAAA,CAAA,CAFJ,CALX,IASWP,OAAJ,GAAeC,MAAAQ,MAAf,EAEHV,IAAAS,KAAA,CAAUF,IAAV,CAEJ,IAAmC,EAAnC,GAAIV,YAAAc,QAAA,CAAqBJ,IAArB,CAAJ,CACI,MAAO,CAAA,CApBwC,CAAvD,CAuBA,OAAOP,KAnCsD,CATjE,KAAII,MAAQhB,OAAA,CAAQ,sCAAR,CAAZ,CAEIc,MACH,UAAS,CAACA,MAAD,CAAS,CACfA,MAAA,CAAOA,MAAA,KAAP,CAAwB,CAAxB,CAAA,CAA6B,MAC7BA,OAAA,CAAOA,MAAA,MAAP,CAAyB,CAAzB,CAAA,CAA8B,OAC9BA,OAAA,CAAOA,MAAA,IAAP,CAAuB,CAAvB,CAAA,CAA4B,KAHb,CAAlB,CAAD,CAIGA,MAJH,GAIcA,MAJd,CAIuB,EAJvB,EAXwH;\",\n\"sources\":[\"node_modules/antd/lib/tree/util.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$antd$lib$tree$util\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n    value: true\\n});\\nexports.calcRangeKeys = calcRangeKeys;\\n\\nvar _util = require(\\\"rc-tree/lib/util\\\");\\n\\nvar Record;\\n(function (Record) {\\n    Record[Record[\\\"None\\\"] = 0] = \\\"None\\\";\\n    Record[Record[\\\"Start\\\"] = 1] = \\\"Start\\\";\\n    Record[Record[\\\"End\\\"] = 2] = \\\"End\\\";\\n})(Record || (Record = {}));\\n/** \\u8ba1\\u7b97\\u9009\\u4e2d\\u8303\\u56f4\\uff0c\\u53ea\\u8003\\u8651expanded\\u60c5\\u51b5\\u4ee5\\u4f18\\u5316\\u6027\\u80fd */\\nfunction calcRangeKeys(nodeList, expandedKeys, startKey, endKey) {\\n    var keys = [];\\n    var record = Record.None;\\n    if (startKey && startKey === endKey) {\\n        return [startKey];\\n    }\\n    if (!startKey || !endKey) {\\n        return [];\\n    }\\n    function matchKey(key) {\\n        return key === startKey || key === endKey;\\n    }\\n    (0, _util.traverseTreeNodes)(nodeList, function (_ref) {\\n        var key = _ref.key;\\n\\n        if (record === Record.End) {\\n            return false;\\n        }\\n        if (matchKey(key)) {\\n            // Match test\\n            keys.push(key);\\n            if (record === Record.None) {\\n                record = Record.Start;\\n            } else if (record === Record.Start) {\\n                record = Record.End;\\n                return false;\\n            }\\n        } else if (record === Record.Start) {\\n            // Append selection\\n            keys.push(key);\\n        }\\n        if (expandedKeys.indexOf(key) === -1) {\\n            return false;\\n        }\\n    });\\n    return keys;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"Object\",\"defineProperty\",\"value\",\"calcRangeKeys\",\"nodeList\",\"expandedKeys\",\"startKey\",\"endKey\",\"keys\",\"record\",\"Record\",\"None\",\"_util\",\"traverseTreeNodes\",\"_ref\",\"key\",\"End\",\"push\",\"Start\",\"indexOf\"]\n}\n"]