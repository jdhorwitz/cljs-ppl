["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/lodash/_copyArray.js"],"~:js","shadow$provide.module$node_modules$lodash$_copyArray=function(global,process,require,module,exports,shadow$shims){module.exports=function(source,array){var index=-1,length=source.length;for(array||(array=Array(length));++index<length;)array[index]=source[index];return array}}","~:source","shadow$provide[\"module$node_modules$lodash$_copyArray\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",[]],"~:compiled-at",1532351402069,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$lodash$_copyArray.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,sCAAA,CAA0D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAoBvHF,MAAAC,QAAA,CAXAE,QAAkB,CAACC,MAAD,CAASC,KAAT,CAAgB,CAAA,IAC5BC,MAAS,EADmB,CAE5BC,OAASH,MAAAG,OAGb,KADAF,KACA,GADUA,KACV,CADkBG,KAAA,CAAMD,MAAN,CAClB,EAAO,EAAED,KAAT,CAAiBC,MAAjB,CAAA,CACEF,KAAA,CAAMC,KAAN,CAAA,CAAeF,MAAA,CAAOE,KAAP,CAEjB,OAAOD,MARyB,CATqF;\",\n\"sources\":[\"node_modules/lodash/_copyArray.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$lodash$_copyArray\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copies the values of `source` to `array`.\\n *\\n * @private\\n * @param {Array} source The array to copy values from.\\n * @param {Array} [array=[]] The array to copy values to.\\n * @returns {Array} Returns `array`.\\n */\\nfunction copyArray(source, array) {\\n  var index = -1,\\n      length = source.length;\\n\\n  array || (array = Array(length));\\n  while (++index < length) {\\n    array[index] = source[index];\\n  }\\n  return array;\\n}\\n\\nmodule.exports = copyArray;\\n\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"copyArray\",\"source\",\"array\",\"index\",\"length\",\"Array\"]\n}\n"]