["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/KeyBindingUtil.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$KeyBindingUtil=function(global,process,require,module,exports,shadow$shims){var isOSX=require(\"module$node_modules$fbjs$lib$UserAgent\").isPlatform(\"Mac OS X\"),KeyBindingUtil={isCtrlKeyCommand:function(e){return!!e.ctrlKey&&!e.altKey},isOptionKeyCommand:function(e){return isOSX&&e.altKey},hasCommandModifier:function(e){return isOSX?!!e.metaKey&&!e.altKey:KeyBindingUtil.isCtrlKeyCommand(e)}};module.exports=KeyBindingUtil}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$KeyBindingUtil\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule KeyBindingUtil\n * @format\n * \n */\n\n'use strict';\n\nvar UserAgent = require('fbjs/lib/UserAgent');\n\nvar isOSX = UserAgent.isPlatform('Mac OS X');\n\nvar KeyBindingUtil = {\n  /**\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\n   * the altKey modifier. If they are combined, the result is an `altGraph`\n   * key modifier, which should not be handled by this set of key bindings.\n   */\n  isCtrlKeyCommand: function isCtrlKeyCommand(e) {\n    return !!e.ctrlKey && !e.altKey;\n  },\n\n  isOptionKeyCommand: function isOptionKeyCommand(e) {\n    return isOSX && e.altKey;\n  },\n\n  hasCommandModifier: function hasCommandModifier(e) {\n    return isOSX ? !!e.metaKey && !e.altKey : KeyBindingUtil.isCtrlKeyCommand(e);\n  }\n};\n\nmodule.exports = KeyBindingUtil;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$UserAgent"]],"~:properties",["^5",["isCtrlKeyCommand","isOptionKeyCommand","hasCommandModifier"]],"~:compiled-at",1532351402145,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$KeyBindingUtil.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,gDAAA,CAAoE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAkBjI,IAAIC,MAFYJ,OAAAK,CAAQ,wCAARA,CAEJC,WAAA,CAAqB,UAArB,CAAZ,CAEIC,eAAiB,CAMnBC,iBAAkBA,QAAyB,CAACC,CAAD,CAAI,CAC7C,MAAO,CAAC,CAACA,CAAAC,QAAT,EAAsB,CAACD,CAAAE,OADsB,CAN5B,CAUnBC,mBAAoBA,QAA2B,CAACH,CAAD,CAAI,CACjD,MAAOL,MAAP,EAAgBK,CAAAE,OADiC,CAVhC,CAcnBE,mBAAoBA,QAA2B,CAACJ,CAAD,CAAI,CACjD,MAAOL,MAAA,CAAQ,CAAC,CAACK,CAAAK,QAAV,EAAuB,CAACL,CAAAE,OAAxB,CAAmCJ,cAAAC,iBAAA,CAAgCC,CAAhC,CADO,CAdhC,CAmBrBR,OAAAC,QAAA,CAAiBK,cAvCgH;\",\n\"sources\":[\"node_modules/draft-js/lib/KeyBindingUtil.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$KeyBindingUtil\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule KeyBindingUtil\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar UserAgent = require('fbjs/lib/UserAgent');\\n\\nvar isOSX = UserAgent.isPlatform('Mac OS X');\\n\\nvar KeyBindingUtil = {\\n  /**\\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\\n   * the altKey modifier. If they are combined, the result is an `altGraph`\\n   * key modifier, which should not be handled by this set of key bindings.\\n   */\\n  isCtrlKeyCommand: function isCtrlKeyCommand(e) {\\n    return !!e.ctrlKey && !e.altKey;\\n  },\\n\\n  isOptionKeyCommand: function isOptionKeyCommand(e) {\\n    return isOSX && e.altKey;\\n  },\\n\\n  hasCommandModifier: function hasCommandModifier(e) {\\n    return isOSX ? !!e.metaKey && !e.altKey : KeyBindingUtil.isCtrlKeyCommand(e);\\n  }\\n};\\n\\nmodule.exports = KeyBindingUtil;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"isOSX\",\"UserAgent\",\"isPlatform\",\"KeyBindingUtil\",\"isCtrlKeyCommand\",\"e\",\"ctrlKey\",\"altKey\",\"isOptionKeyCommand\",\"hasCommandModifier\",\"metaKey\"]\n}\n"]