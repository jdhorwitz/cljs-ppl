["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/draft-js/lib/decodeEntityRanges.js"],"~:js","shadow$provide.module$node_modules$draft_js$lib$decodeEntityRanges=function(global,process,require,module,exports,shadow$shims){var substr=require(\"module$node_modules$fbjs$lib$UnicodeUtils\").substr;module.exports=function(text,ranges){var entities=Array(text.length).fill(null);ranges&&ranges.forEach(function(range){for(var start=substr(text,0,range.offset).length,end=start+substr(text,range.offset,range.length).length;start<end;start++)entities[start]=range.key});return entities}}","~:source","shadow$provide[\"module$node_modules$draft_js$lib$decodeEntityRanges\"] = function(global,process,require,module,exports,shadow$shims) {\n/**\n * Copyright (c) 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule decodeEntityRanges\n * @format\n * \n */\n\n'use strict';\n\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\n\nvar substr = UnicodeUtils.substr;\n\n/**\n * Convert to native JavaScript string lengths to determine ranges.\n */\n\nfunction decodeEntityRanges(text, ranges) {\n  var entities = Array(text.length).fill(null);\n  if (ranges) {\n    ranges.forEach(function (range) {\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\n      // fill the output array with entity keys.\n      var start = substr(text, 0, range.offset).length;\n      var end = start + substr(text, range.offset, range.length).length;\n      for (var ii = start; ii < end; ii++) {\n        entities[ii] = range.key;\n      }\n    });\n  }\n  return entities;\n}\n\nmodule.exports = decodeEntityRanges;\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js","~$module$node_modules$fbjs$lib$UnicodeUtils"]],"~:properties",["^5",[]],"~:compiled-at",1532351402154,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$draft_js$lib$decodeEntityRanges.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,oDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,OAAhB,CAAwBC,MAAxB,CAA+BC,OAA/B,CAAuCC,YAAvC,CAAqD,CAkBrI,IAAIC,OAFeJ,OAAAK,CAAQ,2CAARA,CAEND,OAsBbH,OAAAC,QAAA,CAhBAI,QAA2B,CAACC,IAAD,CAAOC,MAAP,CAAe,CACxC,IAAIC,SAAWC,KAAA,CAAMH,IAAAI,OAAN,CAAAC,KAAA,CAAwB,IAAxB,CACXJ,OAAJ,EACEA,MAAAK,QAAA,CAAe,QAAS,CAACC,KAAD,CAAQ,CAK9B,IAFA,IAAIC,MAAQX,MAAA,CAAOG,IAAP,CAAa,CAAb,CAAgBO,KAAAE,OAAhB,CAAAL,OAAZ,CACIM,IAAMF,KAANE,CAAcb,MAAA,CAAOG,IAAP,CAAaO,KAAAE,OAAb,CAA2BF,KAAAH,OAA3B,CAAAA,OAClB,CAAqBO,KAArB,CAA0BD,GAA1B,CAA+BC,KAAA,EAA/B,CACET,QAAA,CAASS,KAAT,CAAA,CAAeJ,KAAAK,IANa,CAAhC,CAUF,OAAOV,SAbiC,CAxB2F;\",\n\"sources\":[\"node_modules/draft-js/lib/decodeEntityRanges.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$draft_js$lib$decodeEntityRanges\\\"] = function(global,process,require,module,exports,shadow$shims) {\\n/**\\n * Copyright (c) 2013-present, Facebook, Inc.\\n * All rights reserved.\\n *\\n * This source code is licensed under the BSD-style license found in the\\n * LICENSE file in the root directory of this source tree. An additional grant\\n * of patent rights can be found in the PATENTS file in the same directory.\\n *\\n * @providesModule decodeEntityRanges\\n * @format\\n * \\n */\\n\\n'use strict';\\n\\nvar UnicodeUtils = require('fbjs/lib/UnicodeUtils');\\n\\nvar substr = UnicodeUtils.substr;\\n\\n/**\\n * Convert to native JavaScript string lengths to determine ranges.\\n */\\n\\nfunction decodeEntityRanges(text, ranges) {\\n  var entities = Array(text.length).fill(null);\\n  if (ranges) {\\n    ranges.forEach(function (range) {\\n      // Using Unicode-enabled substrings converted to JavaScript lengths,\\n      // fill the output array with entity keys.\\n      var start = substr(text, 0, range.offset).length;\\n      var end = start + substr(text, range.offset, range.length).length;\\n      for (var ii = start; ii < end; ii++) {\\n        entities[ii] = range.key;\\n      }\\n    });\\n  }\\n  return entities;\\n}\\n\\nmodule.exports = decodeEntityRanges;\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"process\",\"require\",\"module\",\"exports\",\"shadow$shims\",\"substr\",\"UnicodeUtils\",\"decodeEntityRanges\",\"text\",\"ranges\",\"entities\",\"Array\",\"length\",\"fill\",\"forEach\",\"range\",\"start\",\"offset\",\"end\",\"ii\",\"key\"]\n}\n"]